{
  "models": [
    {
      "name": "AccountPresenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of account presence resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of Prompts",
          "items": {
            "$ref": "GetPresenceInfo"
          },
          "name": "records"
        },
        {
          "$ref": "PresenceNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "PresencePagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "ActiveCallInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "boolean",
          "description": "Identifies if a call belongs to the call queue",
          "name": "queueCall"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Name of a caller",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Name of a callee",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Time when the call is actually started",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Telephony presence status",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "$ref": "DetailedCallInfo",
          "name": "sipData"
        },
        {
          "type": "string",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "description": "Extension ID of the call owner on whose behalf a call is performed",
          "name": "onBehalfOf"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party",
          "name": "partyId"
        },
        {
          "type": "string",
          "name": "terminationType"
        },
        {
          "$ref": "CallInfoCQ",
          "name": "callInfo"
        }
      ]
    },
    {
      "name": "CallInfoCQ",
      "description": "Primary/additional CQ information",
      "fields": [
        {
          "$ref": "PrimaryCQInfo",
          "name": "primary"
        },
        {
          "$ref": "AdditionalCQInfo",
          "name": "additional"
        }
      ]
    },
    {
      "name": "PrimaryCQInfo",
      "description": "Primary call session information. Supported for Call Queues only",
      "fields": [
        {
          "type": "string",
          "description": "Call information to be displayed as 'Line 1' for a call queue call session",
          "enum": [
            "PhoneNumberLabel",
            "PhoneNumber",
            "QueueExtension",
            "QueueName",
            "CallerIdName",
            "CallerIdNumber",
            "None"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Call information value",
          "name": "value"
        }
      ]
    },
    {
      "name": "AdditionalCQInfo",
      "description": "Additional call session information. Supported for Call Queues only",
      "fields": [
        {
          "type": "string",
          "description": "Call information to be displayed as 'Line 2' for a call queue call session",
          "enum": [
            "PhoneNumberLabel",
            "PhoneNumber",
            "QueueExtension",
            "QueueName",
            "CallerIdName",
            "CallerIdNumber",
            "None"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Call information value",
          "name": "value"
        }
      ]
    },
    {
      "name": "DetailedCallInfo",
      "fields": [
        {
          "type": "string",
          "name": "callId"
        },
        {
          "type": "string",
          "name": "toTag"
        },
        {
          "type": "string",
          "name": "fromTag"
        },
        {
          "type": "string",
          "name": "remoteUri"
        },
        {
          "type": "string",
          "name": "localUri"
        },
        {
          "type": "string",
          "name": "rcSessionId"
        }
      ]
    },
    {
      "name": "GetPresenceExtensionInfo",
      "description": "Information on extension, for which this presence data is returned",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension number (usually 3 or 4 digits)",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "GetPresenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a presence info resource",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status. Cannot be set for Department/Announcement/Voicemail (Take Messages Only)/Fax User/Shared Lines Group/Paging Only Group/IVR Menu/Application Extension/Park Location extensions. The 'DoNotAcceptDepartmentCalls' and 'TakeDepartmentCallsOnly' values are applicable only for extensions - members of a Department; if these values are set for department outsiders, the 400 Bad Request error code is returned. The 'TakeDepartmentCallsOnly' status can be set through the old RingCentral user interface and is available for some migrated accounts only.",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "$ref": "GetPresenceExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom status message (as previously published by user)",
          "name": "message"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "string",
          "description": "Telephony presence status",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "RingCentral Meetings presence",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "array",
          "description": "Information on active calls",
          "items": {
            "$ref": "ActiveCallInfo"
          },
          "name": "activeCalls"
        }
      ]
    },
    {
      "name": "PresenceNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "firstPage"
        },
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "nextPage"
        },
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "previousPage"
        },
        {
          "$ref": "PresenceNavigationInfoURI",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "PresenceNavigationInfoURI",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "PresencePagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "PresenceInfoRequest",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly",
            "DoNotAcceptAnyCalls",
            "Unknown"
          ],
          "name": "dndStatus"
        },
        {
          "maxLength": 75,
          "minLength": 0,
          "type": "string",
          "name": "message"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "pickUpCallsOnHold"
        }
      ]
    },
    {
      "name": "PresenceInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the presence resource",
          "name": "uri"
        },
        {
          "type": "string",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly",
            "DoNotAcceptAnyCalls",
            "Unknown"
          ],
          "name": "dndStatus"
        },
        {
          "maxLength": 75,
          "minLength": 0,
          "type": "string",
          "name": "message"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ActiveCallInfo"
          },
          "name": "activeCalls"
        },
        {
          "$ref": "GetPresenceExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Meetings presence status",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        }
      ]
    },
    {
      "name": "AccountPresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "AccountPresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "AccountPresenceEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension. Optional parameter",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed.",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "integer",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ExtensionPresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionPresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ExtensionPresenceEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension. Optional parameter",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed.",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "integer",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "DetailedExtensionPresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed.",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "array",
          "description": "List of the latest 7 active calls on extension",
          "items": {
            "$ref": "ActiveCallInfoWithoutSIP"
          },
          "name": "activeCalls"
        },
        {
          "type": "integer",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Meetings presence status",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "integer",
          "description": "Total number of active calls on extension at the present moment",
          "name": "totalActiveCalls"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceWithSIPEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "DetailedExtensionPresenceWithSIPEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "DetailedExtensionPresenceWithSIPEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Telephony presence status. Returned if telephony status is changed.",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "array",
          "description": "List of the latest 7 active calls on extension",
          "items": {
            "$ref": "ActiveCallInfo"
          },
          "name": "activeCalls"
        },
        {
          "type": "integer",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Aggregated presence status, calculated from a number of sources",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "presenceStatus"
        },
        {
          "type": "string",
          "description": "User-defined presence status (as previously published by the user)",
          "enum": [
            "Offline",
            "Busy",
            "Available"
          ],
          "name": "userStatus"
        },
        {
          "type": "string",
          "description": "Meetings presence status",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "name": "meetingStatus"
        },
        {
          "type": "string",
          "description": "Extended DnD (Do not Disturb) status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptDepartmentCalls",
            "TakeDepartmentCallsOnly"
          ],
          "name": "dndStatus"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables other extensions to see the extension presence status",
          "name": "allowSeeMyPresence"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables to ring extension phone, if any user monitored by this extension is ringing",
          "name": "ringOnMonitoredCall"
        },
        {
          "type": "boolean",
          "description": "If 'True' enables the extension user to pick up a monitored line on hold",
          "name": "pickUpCallsOnHold"
        },
        {
          "type": "integer",
          "description": "Total number of active calls on extension at the present moment",
          "name": "totalActiveCalls"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ActiveCallInfoWithoutSIP",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Call direction",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "boolean",
          "description": "Identifies if a call belongs to the call queue",
          "name": "queueCall"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Name of a caller",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number or extension number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Name of a callee",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party",
          "name": "partyId"
        },
        {
          "type": "string",
          "description": "Time when the call is actually started",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Telephony call status",
          "enum": [
            "NoCall",
            "CallConnected",
            "Ringing",
            "OnHold",
            "ParkedCall"
          ],
          "name": "telephonyStatus"
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "description": "Type of call termination. Supported for calls in 'NoCall' status. If the returned termination type is 'intermediate' it means the call is not actually ended, the connection is established on one of the devices",
          "enum": [
            "final",
            "intermediate"
          ],
          "name": "terminationType"
        },
        {
          "$ref": "CallInfoCQ",
          "name": "callInfo"
        }
      ]
    },
    {
      "name": "IncomingCallEvent",
      "fields": [
        {
          "$ref": "APSInfo",
          "name": "aps"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "The datetime of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Calling action, for example 'StartRing'",
          "name": "action"
        },
        {
          "type": "string",
          "description": "Identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Identifier of a server",
          "name": "serverId"
        },
        {
          "type": "string",
          "description": "Phone number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Caller name",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Callee name",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Unique identifier of a session",
          "name": "sid"
        },
        {
          "type": "string",
          "description": "SIP proxy registration name",
          "name": "toUrl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvlExt"
        },
        {
          "type": "string",
          "description": "File containing recorded caller name",
          "name": "recUrl"
        },
        {
          "type": "integer",
          "description": "Notification lifetime value in seconds, the default value is 30 seconds",
          "name": "pn_ttl"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "MissedCallEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "$ref": "APNSInfo",
          "name": "pn_apns"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "The datetime of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Calling action, for example 'StartRing'",
          "name": "action"
        },
        {
          "type": "string",
          "description": "Identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Identifier of a server",
          "name": "serverId"
        },
        {
          "type": "string",
          "description": "Phone number of a caller. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Caller name",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Callee name",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Unique identifier of a session",
          "name": "sid"
        },
        {
          "type": "string",
          "description": "SIP proxy registration name",
          "name": "toUrl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvlExt"
        },
        {
          "type": "string",
          "description": "File containing recorded caller name",
          "name": "recUrl"
        },
        {
          "type": "integer",
          "description": "Notification lifetime value in seconds, the default value is 30 seconds",
          "name": "pn_ttl"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "APSInfo",
      "description": "Apple Push Notification Service Info",
      "fields": [
        {
          "type": "integer",
          "description": "If the value is '1' then notification is turned on even if the application is in background",
          "name": "content-available"
        }
      ]
    },
    {
      "name": "APNSInfo",
      "description": "APNS (Apple Push Notification Service) information",
      "fields": [
        {
          "$ref": "APSInfo",
          "name": "aps"
        }
      ]
    },
    {
      "name": "CallQueuePresence",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallQueueMemberPresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CallQueueUpdatePresence",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallQueueUpdateMemberPresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ExtensionCallQueuePresenceList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionCallQueuePresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ExtensionCallQueueUpdatePresenceList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionCallQueueUpdatePresence"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CallQueueMemberPresence",
      "fields": [
        {
          "$ref": "CallQueueMember",
          "name": "member"
        },
        {
          "type": "boolean",
          "description": "Private member telephony availability status applied to calls of all queues",
          "name": "acceptQueueCalls"
        },
        {
          "type": "boolean",
          "description": "Call queue member availability in this particular queue",
          "name": "acceptCurrentQueueCalls"
        }
      ]
    },
    {
      "name": "CallQueueUpdateMemberPresence",
      "fields": [
        {
          "$ref": "CallQueueMemberId",
          "name": "member"
        },
        {
          "type": "boolean",
          "description": "Call queue member availability for calls of this queue",
          "name": "acceptCurrentQueueCalls"
        }
      ]
    },
    {
      "name": "ExtensionCallQueuePresence",
      "fields": [
        {
          "$ref": "CallQueueInfo",
          "name": "callQueue"
        },
        {
          "type": "boolean",
          "description": "Call queue agent availability for calls of this queue",
          "name": "acceptCalls"
        }
      ]
    },
    {
      "name": "ExtensionCallQueueUpdatePresence",
      "fields": [
        {
          "$ref": "CallQueueId",
          "name": "callQueue"
        },
        {
          "type": "boolean",
          "description": "Call queue agent availability for calls of this queue",
          "name": "acceptCalls"
        }
      ]
    },
    {
      "name": "CallQueueMemberId",
      "description": "Call queue member information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension - queue member",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallQueueId",
      "description": "Call queue information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallQueueMember",
      "description": "Call queue member information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension full name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "$ref": "SiteResource",
          "name": "site"
        }
      ]
    },
    {
      "name": "CallQueueInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call queue",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a call queue",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of a call queue",
          "name": "name"
        }
      ]
    },
    {
      "name": "SiteResource",
      "description": "Extension site",
      "fields": [
        {
          "type": "string",
          "description": "Site extension identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Site extension name",
          "name": "name"
        }
      ]
    },
    {
      "name": "CallQueuePresenceEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "CallQueuePresenceEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "CallQueuePresenceEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Agent extension ID",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Call queue extension ID",
          "name": "callQueueId"
        },
        {
          "type": "boolean",
          "description": "Call queue agent availability for calls of this queue",
          "name": "acceptCalls"
        }
      ]
    },
    {
      "name": "RecordsCollectionResourceSubscriptionResponse",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "SubscriptionInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CreateSubscriptionRequest",
      "fields": [
        {
          "type": "array",
          "description": "Collection of URIs to API resources",
          "items": {
            "type": "string"
          },
          "name": "eventFilters",
          "required": true
        },
        {
          "$ref": "NotificationDeliveryModeRequest",
          "name": "deliveryMode",
          "required": true
        },
        {
          "type": "integer",
          "description": "Subscription lifetime in seconds. Max value is 7 days (604800 sec). For *WebHook* transport type max value might be set up to 630720000 seconds (20 years)",
          "name": "expiresIn",
          "required": false
        }
      ]
    },
    {
      "name": "NotificationDeliveryModeRequest",
      "description": "Notification delivery settings",
      "fields": [
        {
          "type": "string",
          "description": "Notifications transportation provider name",
          "enum": [
            "PubNub",
            "WebHook",
            "RC/APNS",
            "RC/GCM",
            "WebSocket"
          ],
          "name": "transportType"
        },
        {
          "type": "string",
          "description": "Mandatory for 'WebHook' transport type, URL of a consumer service (cannot be changed during subscription update)",
          "name": "address"
        },
        {
          "type": "boolean",
          "description": "Optional parameter. Specifies if the message will be encrypted or not. If request contains any presence event filter the value by default is 'True' (even if specified as 'false'). If request contains only message event filters the value by default is 'False'",
          "name": "encryption"
        },
        {
          "type": "string",
          "description": "Name of a certificate. Supported for 'RC/APNS' and 'RC/GCM' transport types",
          "name": "certificateName"
        },
        {
          "type": "string",
          "description": "Identifier of a registration. Supported for 'RC/APNS' and 'RC/GCM' transport types",
          "name": "registrationId"
        },
        {
          "type": "string",
          "description": "Verification key of a subscription ensuring data security. Supported for 'Webhook' transport type",
          "name": "verificationToken"
        }
      ]
    },
    {
      "name": "SubscriptionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Canonical URI of a subscription",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "Collection of API resources (message-store/presence/detailed presence) corresponding to events the user is subscribed to",
          "items": {
            "type": "string"
          },
          "name": "eventFilters",
          "required": false
        },
        {
          "type": "array",
          "description": "Collection of API resources (message-store/presence/detailed presence) corresponding to events the user is not subscribed to due to certain limitations",
          "items": {
            "$ref": "DisabledFilterInfo"
          },
          "name": "disabledFilters",
          "required": false
        },
        {
          "type": "string",
          "description": "Subscription expiration datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "expirationTime",
          "required": false
        },
        {
          "type": "integer",
          "description": "Subscription lifetime in seconds",
          "name": "expiresIn",
          "required": false
        },
        {
          "type": "string",
          "description": "Subscription status",
          "enum": [
            "Active",
            "Suspended",
            "Blacklisted"
          ],
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "description": "Subscription creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "creationTime",
          "required": false
        },
        {
          "$ref": "NotificationDeliveryMode",
          "name": "deliveryMode",
          "required": true
        },
        {
          "$ref": "NotificationBlacklistedData",
          "name": "blacklistedData",
          "required": false
        },
        {
          "type": "string",
          "description": "Notifications transportation provider name",
          "enum": [
            "PubNub",
            "WebHook",
            "RC/APNS",
            "RC/GCM"
          ],
          "name": "transportType",
          "required": false
        },
        {
          "type": "string",
          "description": "Name of a certificate. Supported for 'RC/APNS' and 'RC/GCM' transport types",
          "name": "certificateName",
          "required": false
        },
        {
          "type": "string",
          "description": "Identifier of a registration. Supported for 'RC/APNS' and 'RC/GCM' transport types",
          "name": "registrationId",
          "required": false
        }
      ]
    },
    {
      "name": "DisabledFilterInfo",
      "fields": [
        {
          "type": "string",
          "description": "Event filter that is disabled for the user",
          "name": "filter"
        },
        {
          "type": "string",
          "description": "Reason why the filter is disabled for the user",
          "name": "reason"
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message"
        }
      ]
    },
    {
      "name": "NotificationDeliveryMode",
      "description": "Delivery mode data",
      "fields": [
        {
          "type": "boolean",
          "description": "Optional parameter. Specifies if the message will be encrypted or not",
          "name": "encryption"
        },
        {
          "type": "string",
          "description": "PubNub channel name",
          "name": "address"
        },
        {
          "type": "string",
          "description": "PubNub subscriber credentials required to subscribe to the channel",
          "name": "subscriberKey"
        },
        {
          "type": "string",
          "description": "PubNub subscriber credentials required to subscribe to the channel. Optional (for PubNub transport type only)",
          "name": "secretKey"
        },
        {
          "type": "string",
          "description": "Encryption algorithm 'AES' (for PubNub transport type only)",
          "name": "encryptionAlgorithm"
        },
        {
          "type": "string",
          "description": "Key for notification message decryption (for PubNub transport type only)",
          "name": "encryptionKey"
        },
        {
          "type": "string",
          "description": "Notifications transportation provider name",
          "enum": [
            "PubNub",
            "WebHook",
            "RC/APNS",
            "RC/GCM"
          ],
          "name": "transportType"
        },
        {
          "type": "string",
          "description": "Name of a certificate. Supported for 'RC/APNS' and 'RC/GCM' transport types",
          "name": "certificateName"
        },
        {
          "type": "string",
          "description": "Identifier of a registration. Supported for 'RC/APNS' and 'RC/GCM' transport types",
          "name": "registrationId"
        }
      ]
    },
    {
      "name": "NotificationBlacklistedData",
      "description": "Returned if WebHook subscription is blacklisted",
      "fields": [
        {
          "type": "string",
          "description": "Time of adding subscrition to a black list in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "format": "date-time",
          "name": "blacklistedAt"
        },
        {
          "type": "string",
          "description": "Reason for adding subscrition to a black list",
          "name": "reason"
        }
      ]
    },
    {
      "name": "ModifySubscriptionRequest",
      "fields": [
        {
          "type": "array",
          "description": "Collection of URIs to API resources",
          "items": {
            "type": "string"
          },
          "name": "eventFilters",
          "required": true
        },
        {
          "type": "integer",
          "description": "Subscription lifetime in seconds. Max value is 7 days (604800 sec). For *WebHook* transport type max value might be set up to 630720000 seconds (20 years)",
          "name": "expiresIn",
          "required": false
        }
      ]
    },
    {
      "name": "CreateDataExportTaskRequest",
      "fields": [
        {
          "type": "string",
          "description": "Starting time for data collection. The default value is `timeTo` minus 24 hours. Max allowed time frame between `timeFrom` and `timeTo` is 6 months",
          "name": "timeFrom"
        },
        {
          "type": "string",
          "description": "Ending time for data collection. The default value is current time. Max allowed time frame between `timeFrom` and `timeTo` is 6 months",
          "name": "timeTo"
        },
        {
          "type": "array",
          "items": {
            "$ref": "DataExportTaskContactInfo"
          },
          "name": "contacts"
        },
        {
          "type": "array",
          "description": "List of chats from which the data (posts, files, tasks, events, notes, etc.) will be collected. Maximum number of chats supported is 10",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        }
      ]
    },
    {
      "name": "DataExportTaskContactInfo",
      "description": "List of users whose data is collected. The following data will be exported: posts, tasks, events, etc. posted by the user(s); posts addressing the user(s) via direct and @Mentions; tasks assigned to the listed user(s). The list of 10 users per request is supported.",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a contact",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Email address of a contact",
          "name": "email"
        }
      ]
    },
    {
      "name": "DataExportTaskList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "DataExportTask"
          },
          "name": "tasks"
        },
        {
          "$ref": "GlipDataExportNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "GlipDataExportPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "DataExportTask",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a task",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Task creation datetime",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Task last modification datetime",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Task status",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed",
            "Expired"
          ],
          "name": "status"
        },
        {
          "$ref": "CreatorInfo",
          "name": "creator"
        },
        {
          "$ref": "SpecificInfo",
          "name": "specific"
        },
        {
          "type": "array",
          "description": "Data collection sets. Returned by task ID",
          "items": {
            "$ref": "ExportTaskResultInfo"
          },
          "name": "datasets"
        }
      ]
    },
    {
      "name": "CreatorInfo",
      "description": "Note creator information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user who created a note/task",
          "name": "id"
        }
      ]
    },
    {
      "name": "SpecificInfo",
      "description": "Information specififed in request",
      "fields": [
        {
          "type": "string",
          "description": "Starting time for data collection",
          "name": "timeFrom"
        },
        {
          "type": "string",
          "description": "Ending time for data collection",
          "name": "timeTo"
        },
        {
          "type": "array",
          "items": {
            "$ref": "DataExportTaskContactInfo"
          },
          "name": "contacts"
        },
        {
          "type": "array",
          "description": "List of chats from which the data (posts, files, tasks, events, notes, etc.) will be collected",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        }
      ]
    },
    {
      "name": "ExportTaskResultInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a dataset",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link for downloading a dataset",
          "name": "uri"
        },
        {
          "type": "integer",
          "description": "Size of ta dataset in bytes",
          "name": "size"
        }
      ]
    },
    {
      "name": "GlipDataExportNavigationInfo",
      "fields": [
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "GlipDataExportNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "GlipDataExportPagingInfo",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "GlipDataExportNavigationInfoUri",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "GlipNotesInfo",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "GlipNoteInfo"
          },
          "name": "records"
        },
        {
          "$ref": "GlipNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "GlipNoteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a note",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Title of a note",
          "name": "title"
        },
        {
          "type": "array",
          "description": "Internal identifiers of the chat(s) where the note is posted or shared.",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        },
        {
          "type": "string",
          "description": "Preview of a note (first 150 characters of a body)",
          "name": "preview"
        },
        {
          "$ref": "CreatorInfo",
          "name": "creator"
        },
        {
          "$ref": "LastModifiedByInfo",
          "name": "lastModifiedBy"
        },
        {
          "$ref": "LockedByInfo",
          "name": "lockedBy"
        },
        {
          "type": "string",
          "description": "Note publishing status. Any note is created in 'Draft' status. After it is posted it becomes 'Active'",
          "enum": [
            "Active",
            "Draft"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Datetime of the note last update",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "enum": [
            "Note"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "GetGlipNoteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a note",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Title of a note",
          "name": "title"
        },
        {
          "type": "array",
          "description": "Internal identifiers of the chat(s) where the note is posted or shared.",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        },
        {
          "type": "string",
          "description": "Preview of a note (first 150 characters of a body)",
          "name": "preview"
        },
        {
          "type": "string",
          "description": "Text of a note",
          "name": "body"
        },
        {
          "$ref": "CreatorInfo",
          "name": "creator"
        },
        {
          "$ref": "LastModifiedByInfo",
          "name": "lastModifiedBy"
        },
        {
          "$ref": "LockedByInfo",
          "name": "lockedBy"
        },
        {
          "type": "string",
          "description": "Note publishing status. Any note is created in 'Draft' status. After it is posted it becomes 'Active'",
          "enum": [
            "Active",
            "Draft"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Datetime of the note last update",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "enum": [
            "Note"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "LockedByInfo",
      "description": "Returned for the note being edited (locked) at the current moment. Information on the user editing the note",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the user editing the note",
          "name": "id"
        }
      ]
    },
    {
      "name": "LastModifiedByInfo",
      "description": "Note last modification information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the user who last updated the note",
          "name": "id"
        }
      ]
    },
    {
      "name": "GlipNoteCreate",
      "fields": [
        {
          "type": "string",
          "description": "Title of a note. Max allowed legth is 250 characters",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "Contents of a note; HTML-markuped text. Max allowed length is 1048576 characters (1 Mb).",
          "name": "body",
          "required": false
        }
      ]
    },
    {
      "name": "GlipEventsInfo",
      "fields": [
        {
          "type": "array",
          "description": "List of events created by the current user",
          "items": {
            "$ref": "GlipEventInfo"
          },
          "name": "records"
        },
        {
          "$ref": "GlipNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "GlipEventInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an event",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of a person created an event",
          "name": "creatorId"
        },
        {
          "type": "string",
          "description": "Event title",
          "name": "title"
        },
        {
          "type": "string",
          "description": "Datetime of starting an event",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Datetime of ending an event",
          "name": "endTime"
        },
        {
          "type": "boolean",
          "description": "Indicates whether an event has some specific time slot or lasts for the whole day(s)",
          "default": false,
          "name": "allDay"
        },
        {
          "type": "string",
          "description": "Event recurrence settings",
          "enum": [
            "None",
            "Day",
            "Weekday",
            "Week",
            "Month",
            "Year"
          ],
          "name": "recurrence"
        },
        {
          "type": "string",
          "description": "Condition of ending",
          "name": "endingCondition"
        },
        {
          "type": "integer",
          "description": "Count of iterations. For periodic events only",
          "name": "endingAfter"
        },
        {
          "type": "string",
          "description": "Iterations end datetime for periodic events",
          "default": "None",
          "enum": [
            "None",
            "Count",
            "Date"
          ],
          "name": "endingOn"
        },
        {
          "type": "string",
          "description": "Color of Event title (including its presentation in Calendar)",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Event location",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Event details",
          "name": "description"
        }
      ]
    },
    {
      "name": "GlipEventCreate",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an event",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal identifier of a person created an event",
          "name": "creatorId",
          "required": false
        },
        {
          "type": "string",
          "description": "Event title",
          "name": "title",
          "required": true
        },
        {
          "type": "string",
          "description": "Datetime of starting an event",
          "name": "startTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Datetime of ending an event",
          "name": "endTime",
          "required": true
        },
        {
          "type": "boolean",
          "description": "Indicates whether event has some specific time slot or lasts for whole day(s)",
          "default": false,
          "name": "allDay",
          "required": false
        },
        {
          "type": "string",
          "description": "Event recurrence settings. For non-periodic events the value is 'None'. Must be greater or equal to event duration: 1- Day/Weekday; 7 - Week; 28 - Month; 365 - Year",
          "enum": [
            "None",
            "Day",
            "Weekday",
            "Week",
            "Month",
            "Year"
          ],
          "name": "recurrence",
          "required": false
        },
        {
          "type": "string",
          "description": "Condition of ending",
          "name": "endingCondition",
          "required": false
        },
        {
          "type": "integer",
          "description": "Count of iterations. For periodic events only. Value range is 1 - 10. Must be specified if 'endingCondition' is 'Count'",
          "name": "endingAfter",
          "required": false
        },
        {
          "type": "string",
          "description": "Iterations end datetime for periodic events.",
          "default": "None",
          "enum": [
            "None",
            "Count",
            "Date"
          ],
          "name": "endingOn",
          "required": false
        },
        {
          "type": "string",
          "description": "Color of Event title (including its presentation in Calendar)",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color",
          "required": false
        },
        {
          "type": "string",
          "description": "Event location",
          "name": "location",
          "required": false
        },
        {
          "type": "string",
          "description": "Event details",
          "name": "description",
          "required": false
        }
      ]
    },
    {
      "name": "GlipPersonInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "First name of a user",
          "name": "firstName",
          "required": false
        },
        {
          "type": "string",
          "description": "Last name of a user",
          "name": "lastName",
          "required": false
        },
        {
          "type": "string",
          "description": "Email of a user",
          "name": "email",
          "required": false
        },
        {
          "type": "string",
          "description": "Photo of a user",
          "name": "avatar",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal identifier of a company",
          "name": "companyId",
          "required": false
        },
        {
          "type": "string",
          "description": "Time of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Time of the last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime",
          "required": false
        }
      ]
    },
    {
      "name": "GlipCompany",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an RC account/Glip company, or tilde (~) to indicate a company the current user belongs to",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Name of a company",
          "name": "name",
          "required": false
        },
        {
          "type": "string",
          "description": "Domain name of a company",
          "name": "domain",
          "required": false
        },
        {
          "type": "string",
          "description": "Datetime of creation in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Datetime of last modification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "name": "lastModifiedTime",
          "required": true
        }
      ]
    },
    {
      "name": "GlipMessageAttachmentInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an attachment",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an attachment",
          "default": "Card",
          "enum": [
            "Card",
            "Event",
            "File",
            "Note",
            "Task"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "A string of default text that will be rendered in the case that the client does not support Interactive Messages",
          "name": "fallback"
        },
        {
          "type": "string",
          "description": "A pretext to the message",
          "name": "intro"
        },
        {
          "$ref": "GlipMessageAttachmentAuthorInfo",
          "name": "author"
        },
        {
          "type": "string",
          "description": "Message title",
          "name": "title"
        },
        {
          "type": "string",
          "description": "A large string field (up to 1000 chars) to be displayed as the body of a message (Supports GlipDown)",
          "name": "text"
        },
        {
          "type": "string",
          "description": "Link to an image displayed at the bottom of a message",
          "name": "imageUri"
        },
        {
          "type": "string",
          "description": "Link to an image preview displayed to the right of a message (82x82)",
          "name": "thumbnailUri"
        },
        {
          "type": "array",
          "description": "Information on navigation",
          "items": {
            "$ref": "GlipMessageAttachmentFieldsInfo"
          },
          "name": "fields"
        },
        {
          "$ref": "GlipMessageAttachmentFootnoteInfo",
          "name": "footnote"
        },
        {
          "type": "string",
          "description": "Internal identifier of a person created an event",
          "name": "creatorId"
        },
        {
          "type": "string",
          "description": "Datetime of starting an event",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Datetime of ending an event",
          "name": "endTime"
        },
        {
          "type": "boolean",
          "description": "Indicates whether an event has some specific time slot or lasts for the whole day(s)",
          "default": false,
          "name": "allDay"
        },
        {
          "type": "string",
          "description": "Event recurrence settings.",
          "enum": [
            "None",
            "Day",
            "Weekday",
            "Week",
            "Month",
            "Year"
          ],
          "name": "recurrence"
        },
        {
          "type": "string",
          "description": "Condition of ending",
          "name": "endingCondition"
        },
        {
          "type": "integer",
          "description": "Count of iterations. For periodic events only",
          "name": "endingAfter"
        },
        {
          "type": "string",
          "description": "Iterations end datetime for periodic events",
          "default": "None",
          "enum": [
            "None",
            "Count",
            "Date"
          ],
          "name": "endingOn"
        },
        {
          "type": "string",
          "description": "Color of Event title, including its presentation in Calendar; or the color of the side border of an interactive message of a Card",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Event location",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Event details",
          "name": "description"
        }
      ]
    },
    {
      "name": "GlipMessageAttachmentAuthorInfo",
      "description": "Information about the author",
      "fields": [
        {
          "type": "string",
          "description": "Name of a message author",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Link to an author's name",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Link to an image displayed to the left of an author's name; sized 82x82px",
          "name": "iconUri"
        }
      ]
    },
    {
      "name": "GlipMessageAttachmentFootnoteInfo",
      "description": "Message footer information",
      "fields": [
        {
          "type": "string",
          "description": "Text of a footer",
          "name": "text"
        },
        {
          "type": "string",
          "description": "Link to an icon displayed to the left of a footer; sized 32x32px",
          "name": "iconUri"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "format": "date-time",
          "name": "time"
        }
      ]
    },
    {
      "name": "GlipMessageAttachmentFieldsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Title of an individual field",
          "name": "title"
        },
        {
          "type": "string",
          "description": "Value of an individual field (supports Markdown)",
          "name": "value"
        },
        {
          "type": "string",
          "description": "Style of width span applied to a field",
          "default": "Short",
          "enum": [
            "Short",
            "Long"
          ],
          "name": "style"
        }
      ]
    },
    {
      "name": "GlipAttachmentInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an attachment",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an attachment",
          "enum": [
            "File",
            "Note",
            "Event",
            "Card"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "GlipPostInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a post",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of a group a post belongs to",
          "name": "groupId"
        },
        {
          "type": "string",
          "description": "Type of a post",
          "enum": [
            "TextMessage",
            "PersonJoined",
            "PersonsAdded"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "For 'TextMessage' post type only. Text of a message",
          "name": "text"
        },
        {
          "type": "string",
          "description": "Internal identifier of a user - author of a post",
          "name": "creatorId"
        },
        {
          "type": "array",
          "description": "For 'PersonsAdded' post type only. Identifiers of persons added to a group",
          "items": {
            "type": "string"
          },
          "name": "addedPersonIds"
        },
        {
          "type": "string",
          "description": "Post creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Post last modification datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "array",
          "description": "List of posted attachments",
          "items": {
            "$ref": "GlipMessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "array",
          "items": {
            "$ref": "GlipMentionsInfo"
          },
          "name": "mentions"
        },
        {
          "type": "string",
          "description": "Label of activity type",
          "name": "activity"
        },
        {
          "type": "string",
          "description": "Title of a message. (Can be set for bot's messages only)",
          "name": "title"
        },
        {
          "type": "string",
          "description": "Link to an image used as an icon for this message",
          "name": "iconUri"
        },
        {
          "type": "string",
          "description": "Emoji used as an icon for this message",
          "name": "iconEmoji"
        }
      ]
    },
    {
      "name": "GlipNavigationInfo",
      "fields": [
        {
          "type": "string",
          "description": "Previous page token. To get previous page, user should pass one of returned token in next request and, in turn, required page will be returned with new tokens",
          "name": "prevPageToken"
        },
        {
          "type": "string",
          "description": "Next page token. To get next page, user should pass one of returned token in next request and, in turn, required page will be returned with new tokens",
          "name": "nextPageToken"
        }
      ]
    },
    {
      "name": "GlipMentionsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of mention",
          "enum": [
            "Person",
            "Team",
            "File",
            "Link",
            "Event",
            "Task",
            "Note",
            "Card"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of a user",
          "name": "name"
        }
      ]
    },
    {
      "name": "GlipWebhookList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "GlipWebhookInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "GlipWebhookInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a webhook",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of the user who created a webhook",
          "name": "creatorId"
        },
        {
          "type": "array",
          "description": "Internal identifiers of groups where a webhook has been created",
          "items": {
            "type": "string"
          },
          "name": "groupIds"
        },
        {
          "type": "string",
          "description": "Webhook creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Webhook last update time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Public link to send a webhook payload",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Current status of a webhook",
          "enum": [
            "Active",
            "Suspended",
            "Deleted"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "GlipGroupsEvent",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a group",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a group. 'PrivateChat' is a group of 2 members. 'Group' is a chat of 2 and more participants, the membership cannot be changed after group creation. 'Team' is a chat of 1 and more participants, the membership can be modified in future. 'PersonalChat' is a private chat thread of a user",
          "enum": [
            "PrivateChat",
            "Group",
            "Team",
            "PersonalChat"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "For 'Team' group type only. Team access level",
          "name": "isPublic"
        },
        {
          "type": "string",
          "description": "For 'Team' group type only. Team name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "For 'Team' group type only. Team description",
          "name": "description"
        },
        {
          "type": "array",
          "description": "“List of glip members”",
          "items": {
            "$ref": "GlipMemberInfo"
          },
          "name": "members"
        },
        {
          "type": "string",
          "description": "Group creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Group last change datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Type of a group event. Only the person who joined/was added to a group will receive 'GroupJoined' notification. Only the person who left/was removed from a group will receive 'GroupLeft' notification",
          "enum": [
            "GroupRenamed",
            "GroupJoined",
            "GroupLeft",
            "GroupChanged"
          ],
          "name": "eventType"
        }
      ]
    },
    {
      "name": "GlipPostEvent",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a post",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a post event",
          "enum": [
            "PostAdded",
            "PostChanged",
            "PostRemoved"
          ],
          "name": "eventType"
        },
        {
          "type": "string",
          "description": "Internal identifier of a group a post belongs to",
          "name": "groupId"
        },
        {
          "type": "string",
          "description": "Type of a post. 'TextMessage' - an incoming text message; 'PersonJoined' - a message notifying that person has joined a conversation; 'PersonsAdded' - a message notifying that a person(s) were added to a conversation",
          "enum": [
            "TextMessage",
            "PersonJoined",
            "PersonsAdded",
            "Card"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "For 'TextMessage' post type only. Message text",
          "name": "text"
        },
        {
          "type": "string",
          "description": "Internal identifier of a user - author of a post",
          "name": "creatorId"
        },
        {
          "type": "array",
          "description": "For PersonsAdded post type only. Identifiers of persons added to a group",
          "items": {
            "type": "string"
          },
          "name": "addedPersonIds"
        },
        {
          "type": "array",
          "description": "For PersonsRemoved post type only. Identifiers of persons removed from a group",
          "items": {
            "type": "string"
          },
          "name": "removedPersonIds"
        },
        {
          "type": "array",
          "description": "List of at mentions in post text with names.",
          "items": {
            "$ref": "GlipMentionsInfo"
          },
          "name": "mentions"
        },
        {
          "type": "string",
          "description": "Post creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Post last change datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format",
          "format": "date-time",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "GlipUnreadMessageCountEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "$ref": "GlipAPNSInfo",
          "name": "pn_apns"
        },
        {
          "$ref": "GCMInfo",
          "name": "pn_gcm"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "GlipAPNSInfo",
      "description": "Apple notification data",
      "fields": [
        {
          "$ref": "APSInfo",
          "name": "aps"
        },
        {
          "type": "string",
          "description": "Datetime of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "GlipUnreadMessageCountInfo",
          "name": "body"
        }
      ]
    },
    {
      "name": "GlipUnreadMessageCountInfo",
      "description": "Unread messages data",
      "fields": [
        {
          "type": "integer",
          "description": "Count of glip unread messages",
          "name": "unread"
        }
      ]
    },
    {
      "name": "GCMInfo",
      "description": "GCM data",
      "fields": [
        {
          "type": "string",
          "description": "Notification priority, if the value is 'high' then notification is turned on even if the application is in background",
          "enum": [
            "high",
            "normal"
          ],
          "name": "priority"
        },
        {
          "type": "integer",
          "description": "Notification lifetime value in seconds, the default value is 30 seconds",
          "name": "time_to_live"
        },
        {
          "$ref": "GCMData",
          "name": "data"
        }
      ]
    },
    {
      "name": "GCMData",
      "description": "GCM data",
      "fields": [
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "The datetime of a call action in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "default": "~",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Calling action, for example 'StartRing'",
          "name": "action"
        },
        {
          "type": "string",
          "description": "Identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Identifier of a server",
          "name": "serverId"
        },
        {
          "type": "string",
          "description": "Phone number of a caller",
          "name": "_from"
        },
        {
          "type": "string",
          "description": "Caller name",
          "name": "fromName"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Callee name",
          "name": "toName"
        },
        {
          "type": "string",
          "description": "Unique identifier of a session",
          "name": "sid"
        },
        {
          "type": "string",
          "description": "SIP proxy registration name",
          "name": "toUrl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvlExt"
        }
      ]
    },
    {
      "name": "GlipChatsListWithoutNavigation",
      "fields": [
        {
          "type": "array",
          "description": "List of chats",
          "items": {
            "$ref": "GlipChatInfo"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "GlipChatsList",
      "fields": [
        {
          "type": "array",
          "description": "List of chats",
          "items": {
            "$ref": "GlipChatInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "GlipNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "GlipTeamsList",
      "fields": [
        {
          "type": "array",
          "description": "List of teams",
          "items": {
            "$ref": "GlipTeamInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "GlipNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "GlipConversationsList",
      "fields": [
        {
          "type": "array",
          "description": "List of conversations",
          "items": {
            "$ref": "GlipConversationInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "GlipNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "GlipChatInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a chat",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a chat",
          "enum": [
            "Everyone",
            "Team",
            "Group",
            "Direct",
            "Personal"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "For 'Team' chat type only. Team access level.",
          "name": "public"
        },
        {
          "type": "string",
          "description": "For 'Team','Everyone' chats types only. Chat name.",
          "name": "name"
        },
        {
          "type": "string",
          "description": "For 'Team','Everyone' chats types only. Chat description.",
          "name": "description"
        },
        {
          "type": "string",
          "description": "For 'Team' chat type only. Team status.",
          "enum": [
            "Active",
            "Archived"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Chat creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Chat last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "array",
          "items": {
            "$ref": "GlipMemberInfo"
          },
          "name": "members"
        }
      ]
    },
    {
      "name": "GlipMemberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id"
        }
      ]
    },
    {
      "name": "GlipTeamInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a team",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a chat",
          "enum": [
            "Team"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Team access level",
          "name": "public"
        },
        {
          "type": "string",
          "description": "Team name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Team description",
          "name": "description"
        },
        {
          "type": "string",
          "description": "Team status",
          "enum": [
            "Active",
            "Archived"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Team creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Team last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "GlipConversationInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a conversation",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a conversation",
          "enum": [
            "Direct",
            "Personal",
            "Group"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Conversation creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Conversation last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "array",
          "description": "List of glip members",
          "items": {
            "$ref": "CreateGlipMember"
          },
          "name": "members"
        }
      ]
    },
    {
      "name": "GlipEveryoneInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a chat",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a chat",
          "enum": [
            "Everyone"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Chat name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Chat description",
          "name": "description"
        },
        {
          "type": "string",
          "description": "Chat creation datetime in ISO 8601 format",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Chat last change datetime in ISO 8601 format",
          "format": "date-time",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "GlipPostMembersListBody",
      "fields": [
        {
          "type": "array",
          "description": "List of glip members",
          "items": {
            "$ref": "CreateGlipMember"
          },
          "name": "members",
          "required": true
        }
      ]
    },
    {
      "name": "CreateGlipMember",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Email of a user",
          "name": "email"
        }
      ]
    },
    {
      "name": "CreateGlipConversationRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of glip members. The maximum supported number of IDs is 15. User's own ID is optional. If `members` section is omitted then 'Personal' chat will be returned",
          "items": {
            "$ref": "CreateGlipMember"
          },
          "name": "members",
          "required": true
        }
      ]
    },
    {
      "name": "GlipPostMembersIdsListBody",
      "fields": [
        {
          "type": "array",
          "description": "Identifier(s) of chat members.",
          "items": {
            "$ref": "GlipMemberInfo"
          },
          "name": "members",
          "required": true
        }
      ]
    },
    {
      "name": "GlipPostTeamBody",
      "fields": [
        {
          "type": "boolean",
          "description": "Team access level.",
          "name": "public",
          "required": false
        },
        {
          "type": "string",
          "description": "Team name.",
          "name": "name",
          "required": true
        },
        {
          "type": "string",
          "description": "Team description.",
          "name": "description",
          "required": false
        },
        {
          "type": "array",
          "description": "List of glip members",
          "items": {
            "$ref": "CreateGlipMember"
          },
          "name": "members",
          "required": false
        }
      ]
    },
    {
      "name": "GlipPatchTeamBody",
      "fields": [
        {
          "type": "boolean",
          "description": "Team access level",
          "name": "public"
        },
        {
          "type": "string",
          "description": "Team name. Maximum number of characters supported is 250",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Team description. Maximum number of characters supported is 1000",
          "name": "description"
        }
      ]
    },
    {
      "name": "GlipPatchPostBody",
      "fields": [
        {
          "type": "string",
          "description": "Post text.",
          "name": "text"
        }
      ]
    },
    {
      "name": "GlipPostPostBody",
      "description": "Post data. At least one attribute should be provided (text or attachments)",
      "fields": [
        {
          "type": "string",
          "description": "Text of a post. Maximum length is 10000 symbols. Mentions can be added in .md format `![:Type](id)`",
          "name": "text"
        },
        {
          "type": "array",
          "description": "Identifier(s) of attachments. Maximum number of attachments is 25",
          "items": {
            "$ref": "GlipAttachmentInfoRequest"
          },
          "name": "attachments"
        }
      ]
    },
    {
      "name": "GlipPostsList",
      "fields": [
        {
          "type": "array",
          "description": "List of posts",
          "items": {
            "$ref": "GlipPostInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "GlipNavigationInfo",
          "name": "navigation",
          "required": false
        }
      ]
    },
    {
      "name": "GlipPreferencesInfo",
      "fields": [
        {
          "$ref": "GlipPreferencesChats",
          "name": "chats"
        }
      ]
    },
    {
      "name": "GlipPreferencesChats",
      "fields": [
        {
          "type": "integer",
          "name": "maxCount"
        },
        {
          "type": "string",
          "default": "CombineAllChatTypes",
          "enum": [
            "SeparateAllChatTypes",
            "SeparateConversationsAndTeams",
            "CombineAllChatTypes"
          ],
          "name": "leftRailMode"
        }
      ]
    },
    {
      "name": "UpdateGlipEveryoneRequest",
      "fields": [
        {
          "type": "integer",
          "description": "Everyone chat name. Maximum number of characters supported is 250",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Everyone chat description. Maximum number of characters supported is 1000",
          "name": "description"
        }
      ]
    },
    {
      "name": "GlipTaskList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "GlipTaskInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "GlipTaskInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Datetime of the task creation in UTC time zone.",
          "format": "datetime",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Datetime of the last modification of the task in UTC time zone.",
          "format": "datetime",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Type of a task",
          "enum": [
            "Task"
          ],
          "name": "type"
        },
        {
          "$ref": "CreatorInfo",
          "name": "creator"
        },
        {
          "type": "array",
          "description": "Chat IDs where the task is posted or shared.",
          "items": {
            "type": "string"
          },
          "name": "chatIds"
        },
        {
          "type": "string",
          "description": "Status of task execution",
          "enum": [
            "Pending",
            "InProgress",
            "Completed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Name/subject of a task",
          "name": "subject"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TaskAssigneeInfo"
          },
          "name": "assignees"
        },
        {
          "type": "string",
          "description": "Specifies how to determine task completeness",
          "enum": [
            "Simple",
            "AllAssignees",
            "Percentage"
          ],
          "name": "completenessCondition"
        },
        {
          "maximum": 100,
          "minimum": 0,
          "type": "integer",
          "description": "Current completeness percentage of the task with the specified percentage completeness condition",
          "name": "completenessPercentage"
        },
        {
          "type": "string",
          "description": "Task start date",
          "format": "date-time",
          "name": "startDate"
        },
        {
          "type": "string",
          "description": "Task due date/time",
          "format": "date-time",
          "name": "dueDate"
        },
        {
          "type": "string",
          "description": "Font color of a post with the current task",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Task section to group/search by",
          "name": "section"
        },
        {
          "type": "string",
          "description": "Task details",
          "name": "description"
        },
        {
          "$ref": "GlipTaskRecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TaskAttachment"
          },
          "name": "attachments"
        }
      ]
    },
    {
      "name": "TaskAttachment",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a file",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Attachment type (currently only `File` value is supported).",
          "enum": [
            "File"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of the attached file (including extension name).",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Link to an attachment content",
          "name": "contentUri"
        }
      ]
    },
    {
      "name": "GlipCreateTask",
      "fields": [
        {
          "type": "string",
          "description": "Task name/subject. Max allowed length is 250 characters.",
          "name": "subject",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "AssigneeInfo"
          },
          "name": "assignees",
          "required": true
        },
        {
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "AllAssignees",
            "Percentage"
          ],
          "name": "completenessCondition",
          "required": false
        },
        {
          "type": "string",
          "description": "Task start date in UTC time zone.",
          "format": "date-time",
          "name": "startDate",
          "required": false
        },
        {
          "type": "string",
          "description": "Task due date/time in UTC time zone.",
          "format": "date-time",
          "name": "dueDate",
          "required": false
        },
        {
          "type": "string",
          "default": "Black",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color",
          "required": false
        },
        {
          "type": "string",
          "description": "Task section to group / search by. Max allowed legth is 100 characters.",
          "name": "section",
          "required": false
        },
        {
          "type": "string",
          "description": "Task details. Max allowed legth is 102400 characters (100kB).",
          "name": "description",
          "required": false
        },
        {
          "$ref": "GlipTaskRecurrenceInfo",
          "name": "recurrence",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "GlipAttachmentInfoRequest"
          },
          "name": "attachments",
          "required": false
        }
      ]
    },
    {
      "name": "GlipTaskRecurrenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Task recurrence settings. For non-periodic tasks the value is 'None'",
          "enum": [
            "None",
            "Daily",
            "Weekdays",
            "Weekly",
            "Monthly",
            "Yearly"
          ],
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Task ending condition",
          "enum": [
            "None",
            "Count",
            "Date"
          ],
          "name": "endingCondition"
        },
        {
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
          "description": "Count of iterations of periodic tasks",
          "name": "endingAfter"
        },
        {
          "type": "string",
          "description": "End date of periodic task",
          "format": "date-time",
          "name": "endingOn"
        }
      ]
    },
    {
      "name": "GlipUpdateTask",
      "fields": [
        {
          "type": "string",
          "description": "Task name/subject. Max allowed length is 250 characters.",
          "name": "subject"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AssigneeInfo"
          },
          "name": "assignees"
        },
        {
          "type": "string",
          "enum": [
            "Simple",
            "AllAssignees",
            "Percentage"
          ],
          "name": "completenessCondition"
        },
        {
          "type": "string",
          "description": "Task start date in UTC time zone",
          "format": "date-time",
          "name": "startDate"
        },
        {
          "type": "string",
          "description": "Task due date/time in UTC time zone",
          "format": "date-time",
          "name": "dueDate"
        },
        {
          "type": "string",
          "enum": [
            "Black",
            "Red",
            "Orange",
            "Yellow",
            "Green",
            "Blue",
            "Purple",
            "Magenta"
          ],
          "name": "color"
        },
        {
          "type": "string",
          "description": "Task section to group/search by. Max allowed legth is 100 characters",
          "name": "section"
        },
        {
          "type": "string",
          "description": "Task details. Max allowed legth is 102400 characters (100kB)",
          "name": "description"
        },
        {
          "$ref": "GlipTaskRecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "array",
          "items": {
            "$ref": "GlipAttachmentInfoRequest"
          },
          "name": "attachments"
        }
      ]
    },
    {
      "name": "AssigneeInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an assignee",
          "name": "id"
        }
      ]
    },
    {
      "name": "GlipCompleteTask",
      "fields": [
        {
          "type": "string",
          "description": "Completeness status. 'Mandatory' if `completenessCondition` is set to `Simple`, otherwise 'Optional'",
          "enum": [
            "Incomplete",
            "Complete"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AssigneeInfo"
          },
          "name": "assignees"
        },
        {
          "maximum": 100,
          "minimum": 0,
          "type": "integer",
          "description": "Current completeness percentage of a task with the 'Percentage' completeness condition. 'Mandatory' if `completenessCondition` is set to `Percentage`, otherwise 'Optional'",
          "name": "completenessPercentage"
        }
      ]
    },
    {
      "name": "UnifiedPresenceListEntry",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the resource",
          "name": "resourceId"
        },
        {
          "type": "integer",
          "description": "Status code of resource retrieval",
          "name": "status"
        },
        {
          "$ref": "UnifiedPresence",
          "name": "body"
        }
      ]
    },
    {
      "name": "UpdateUnifiedPresence",
      "fields": [
        {
          "$ref": "UpdateUnifiedPresenceGlip",
          "name": "glip"
        },
        {
          "$ref": "UpdateUnifiedPresenceTelephony",
          "name": "telephony"
        }
      ]
    },
    {
      "name": "UnifiedPresence",
      "fields": [
        {
          "type": "string",
          "description": "Aggregated presence status of the user",
          "enum": [
            "Available",
            "Offline",
            "DND",
            "Busy"
          ],
          "name": "status"
        },
        {
          "$ref": "UnifiedPresenceGlip",
          "name": "glip"
        },
        {
          "$ref": "UnifiedPresenceTelephony",
          "name": "telephony"
        },
        {
          "$ref": "UnifiedPresenceMeeting",
          "name": "meeting"
        }
      ]
    },
    {
      "name": "UpdateUnifiedPresenceGlip",
      "fields": [
        {
          "type": "string",
          "description": "Visibility setting allowing other users to see Glip presence status",
          "enum": [
            "Visible",
            "Invisible"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Availability setting specifing whether to receive Glip notifications or not",
          "enum": [
            "Available",
            "DND"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "UnifiedPresenceGlip",
      "description": "Returned if *Glip* feature is switched on",
      "fields": [
        {
          "type": "string",
          "description": "Glip connection status calculated from all user's apps. Returned always for the requester's extension; returned for another users if their glip visibility is set to 'Visible'",
          "enum": [
            "Offline",
            "Online"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Visibility setting allowing other users to see the user's Glip presence status; returned only for requester's extension",
          "enum": [
            "Visible",
            "Invisible"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Shows whether user wants to receive Glip notifications or not.",
          "enum": [
            "Available",
            "DND"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "UnifiedPresenceTelephony",
      "description": "Returned if *BLF* feature is switched on",
      "fields": [
        {
          "type": "string",
          "description": "Telephony status calculated from all user's phone numbers. Returned always for the requester's extension; returned for another users if their telephony visibility is set to 'Visible'",
          "enum": [
            "NoCall",
            "Ringing",
            "CallConnected",
            "OnHold",
            "ParkedCall"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Specifies if the user hardphone presence status is visible to other users; returned only for requester's extension",
          "enum": [
            "Visible",
            "Invisible"
          ],
          "name": "visibility"
        },
        {
          "type": "string",
          "description": "Telephony DND status. Returned if *DND* feature is switched on",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptQueueCalls"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "UpdateUnifiedPresenceTelephony",
      "fields": [
        {
          "type": "string",
          "description": "Telephony DND status",
          "enum": [
            "TakeAllCalls",
            "DoNotAcceptAnyCalls",
            "DoNotAcceptQueueCalls"
          ],
          "name": "availability"
        }
      ]
    },
    {
      "name": "UnifiedPresenceMeeting",
      "description": "Returned if *Meetings* feature is switched on",
      "fields": [
        {
          "type": "string",
          "description": "Meeting status calculated from all user`s meetings",
          "enum": [
            "NoMeeting",
            "InMeeting"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "TaskAssigneeInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an assignee",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of the task execution by assignee",
          "enum": [
            "Pending",
            "Completed"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "TokenInfo",
      "fields": [
        {
          "type": "string",
          "description": "Access token to pass to subsequent API requests",
          "example": "U1BCMDFUMDRKV1MwMXxzLFSvXdw5PHMsVLEn_MrtcyxUsw",
          "name": "access_token"
        },
        {
          "type": "integer",
          "description": "Issued access token TTL (time to live), in seconds",
          "example": 7199,
          "name": "expires_in"
        },
        {
          "type": "string",
          "description": "Refresh token to get a new access token, when the issued one expires",
          "example": "U1BCMDFUMDRKV1MwMXxzLFL4ec6A0XMsUv9wLriecyxS_w",
          "name": "refresh_token"
        },
        {
          "type": "integer",
          "description": "Issued refresh token TTL (time to live), in seconds",
          "example": 604799,
          "name": "refresh_token_expires_in"
        },
        {
          "type": "string",
          "description": "List of permissions allowed with this access token, white-space separated",
          "example": "AccountInfo CallLog ExtensionInfo Messages SMS",
          "name": "scope"
        },
        {
          "type": "string",
          "description": "Type of token. The only possible value supported is Bearer. This value should be used when specifying access token in `Authorization` header of subsequent API requests",
          "example": "bearer",
          "name": "token_type"
        },
        {
          "type": "string",
          "description": "Extension identifier",
          "example": "256440016",
          "name": "owner_id"
        },
        {
          "type": "string",
          "description": "Application instance identifier",
          "example": "8zXq6oaLT7WvwWITlGiA1A",
          "name": "endpoint_id"
        },
        {
          "type": "string",
          "name": "id_token"
        }
      ]
    },
    {
      "name": "ContactList",
      "fields": [
        {
          "type": "string",
          "description": "link to the list of user personal contacts",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of personal contacts from the extension address book",
          "items": {
            "$ref": "PersonalContactResource"
          },
          "name": "records"
        },
        {
          "$ref": "UserContactsNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "UserContactsPagingInfo",
          "name": "paging"
        },
        {
          "$ref": "UserContactsGroupsInfo",
          "name": "groups"
        }
      ]
    },
    {
      "name": "UserContactsGroupsInfo",
      "description": "Information on address book groups",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of address book groups",
          "name": "uri"
        }
      ]
    },
    {
      "name": "PersonalContactRequest",
      "fields": [
        {
          "type": "string",
          "description": "First name of the contact",
          "example": "Charlie",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of the contact",
          "example": "Williams",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Middle name of the contact",
          "example": "J",
          "name": "middleName"
        },
        {
          "type": "string",
          "description": "Nick name of the contact",
          "example": "The Boss",
          "name": "nickName"
        },
        {
          "type": "string",
          "description": "Company name of the contact",
          "example": "Example, Inc.",
          "name": "company"
        },
        {
          "type": "string",
          "description": "Job title of the contact",
          "example": "CEO",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Email of the contact",
          "example": "charlie.williams@example.com",
          "name": "email"
        },
        {
          "type": "string",
          "description": "2nd email of the contact",
          "example": "charlie-example@gmail.com",
          "name": "email2"
        },
        {
          "type": "string",
          "description": "3rd email of the contact",
          "example": "theboss-example@hotmail.com",
          "name": "email3"
        },
        {
          "type": "string",
          "description": "Date of birth of the contact",
          "format": "date-time",
          "name": "birthday"
        },
        {
          "type": "string",
          "description": "The contact home page URL",
          "example": "http://www.example.com",
          "name": "webPage"
        },
        {
          "type": "string",
          "description": "Notes for the contact",
          "example": "#1 Customer",
          "name": "notes"
        },
        {
          "type": "string",
          "description": "Home phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone"
        },
        {
          "type": "string",
          "description": "2nd home phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone2"
        },
        {
          "type": "string",
          "description": "Business phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "2nd business phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone2"
        },
        {
          "type": "string",
          "description": "Mobile phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "mobilePhone"
        },
        {
          "type": "string",
          "description": "Business fax number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessFax"
        },
        {
          "type": "string",
          "description": "Company number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "companyPhone"
        },
        {
          "type": "string",
          "description": "Phone number of the contact assistant in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "assistantPhone"
        },
        {
          "type": "string",
          "description": "Car phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "carPhone"
        },
        {
          "type": "string",
          "description": "Other phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherPhone"
        },
        {
          "type": "string",
          "description": "Other fax number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherFax"
        },
        {
          "type": "string",
          "description": "Callback phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "callbackPhone"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "homeAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "otherAddress"
        },
        {
          "type": "string",
          "description": "Contact ringtone. Max number of symbols is 64",
          "name": "ringtoneIndex"
        }
      ]
    },
    {
      "name": "PersonalContactResource",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of the contact",
          "example": "https://platform.ringcentral.com/restapi/v1.0/account/230919004/extension/230919004/address-book/contact/623045004",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "This property has a special meaning only on Address Book Sync (e.g. a contact can be `Deleted`). For simple contact list reading it has always the default value - `Alive`",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Email of the contact",
          "example": "charlie.williams@example.com",
          "name": "email"
        },
        {
          "type": "integer",
          "description": "Internal identifier of the contact",
          "example": 623045004,
          "name": "id"
        },
        {
          "type": "string",
          "description": "Notes for the contact",
          "example": "#1 Customer",
          "name": "notes"
        },
        {
          "type": "string",
          "description": "Company name of the contact",
          "example": "Example, Inc.",
          "name": "company"
        },
        {
          "type": "string",
          "description": "First name of the contact",
          "example": "Charlie",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of the contact",
          "example": "Williams",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Job title of the contact",
          "example": "CEO",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Date of birth of the contact",
          "format": "date-time",
          "name": "birthday"
        },
        {
          "type": "string",
          "description": "The contact home page URL",
          "example": "http://www.example.com",
          "name": "webPage"
        },
        {
          "type": "string",
          "description": "Middle name of the contact",
          "example": "J",
          "name": "middleName"
        },
        {
          "type": "string",
          "description": "Nick name of the contact",
          "example": "The Boss",
          "name": "nickName"
        },
        {
          "type": "string",
          "description": "2nd email of the contact",
          "example": "charlie-example@gmail.com",
          "name": "email2"
        },
        {
          "type": "string",
          "description": "3rd email of the contact",
          "example": "theboss-example@hotmail.com",
          "name": "email3"
        },
        {
          "type": "string",
          "description": "Home phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone"
        },
        {
          "type": "string",
          "description": "2nd home phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone2"
        },
        {
          "type": "string",
          "description": "Business phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "2nd business phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone2"
        },
        {
          "type": "string",
          "description": "Mobile phone of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "mobilePhone"
        },
        {
          "type": "string",
          "description": "Business fax number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessFax"
        },
        {
          "type": "string",
          "description": "Company number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "companyPhone"
        },
        {
          "type": "string",
          "description": "Phone number of the contact assistant in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "assistantPhone"
        },
        {
          "type": "string",
          "description": "Car phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "carPhone"
        },
        {
          "type": "string",
          "description": "Other phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherPhone"
        },
        {
          "type": "string",
          "description": "Other fax number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherFax"
        },
        {
          "type": "string",
          "description": "Callback phone number of the contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "callbackPhone"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "homeAddress"
        },
        {
          "$ref": "ContactAddressInfo",
          "name": "otherAddress"
        },
        {
          "type": "string",
          "description": "Contact ringtone. Max number of symbols is 64",
          "name": "ringtoneIndex"
        }
      ]
    },
    {
      "name": "AddressBookSync",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PersonalContactResource"
          },
          "name": "records"
        },
        {
          "$ref": "SyncInfo",
          "name": "syncInfo"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "nextPageId"
        },
        {
          "type": "string",
          "format": "uri",
          "name": "nextPageUri"
        }
      ]
    },
    {
      "name": "SyncInfo",
      "fields": [
        {
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ],
          "name": "syncType"
        },
        {
          "type": "string",
          "name": "syncToken"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "syncTime"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "olderRecordsExist"
        }
      ]
    },
    {
      "name": "UserContactsNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "UserContactsNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "UserContactsPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "UserContactsNavigationInfoUri",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ContactAddressInfo",
      "fields": [
        {
          "type": "string",
          "description": "Street address",
          "example": "20 Davis Dr.",
          "name": "street"
        },
        {
          "type": "string",
          "description": "City name",
          "example": "Belmont",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "State/province name",
          "example": "CA",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Zip/Postal code",
          "example": "94002",
          "name": "zip"
        }
      ]
    },
    {
      "name": "FavoriteCollection",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "FavoriteContactResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "FavoriteContactList",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "FavoriteContactResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "FavoriteContactResource",
      "fields": [
        {
          "type": "integer",
          "name": "id"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "string",
          "name": "accountId"
        },
        {
          "type": "string",
          "name": "contactId"
        }
      ]
    },
    {
      "name": "ExtensionFavoritesEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionFavoritesEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ExtensionFavoritesEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "AccountResource",
      "fields": [
        {
          "type": "string",
          "name": "companyName"
        },
        {
          "type": "string",
          "name": "federatedName"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "$ref": "PhoneNumberResource",
          "name": "mainNumber"
        }
      ]
    },
    {
      "name": "BusinessSiteResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "code"
        }
      ]
    },
    {
      "name": "ContactResource",
      "fields": [
        {
          "$ref": "AccountResource",
          "name": "account"
        },
        {
          "type": "string",
          "name": "department"
        },
        {
          "type": "string",
          "name": "email"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "First name of a contact, for user extensions only",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of a contact, for user extensions only",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Name of a contact, for non-user extensions",
          "name": "name"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "jobTitle"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PhoneNumberResource"
          },
          "name": "phoneNumbers"
        },
        {
          "$ref": "AccountDirectoryProfileImageResource",
          "name": "profileImage"
        },
        {
          "$ref": "BusinessSiteResource",
          "name": "site"
        },
        {
          "type": "string",
          "name": "status"
        },
        {
          "type": "string",
          "name": "type"
        }
      ]
    },
    {
      "name": "DirectoryResource",
      "fields": [
        {
          "$ref": "CompanyContactsPagingInfo",
          "name": "paging"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ContactResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ADGError",
      "description": "Description of an error occurred during request processing. This data type can be used only in readonly mode, no writing is allowed",
      "fields": [
        {
          "type": "string",
          "description": "Code that characterizes this error. Code uniqly identifies the source of the error.",
          "readOnly": true,
          "enum": [
            "ErrorCode{code='ADG-000', httpStatus=503, description='Service temporary unavailable.'}",
            "ErrorCode{code='ADG-010', httpStatus=503, description='Federation data temporary unavailable.'}",
            "ErrorCode{code='ADG-001', httpStatus=500, description='Service internal error.'}",
            "ErrorCode{code='ADG-100', httpStatus=403, description='Insufficient permissions.'}",
            "ErrorCode{code='ADG-101', httpStatus=403, description='Unauthorized access.'}",
            "ErrorCode{code='ADG-102', httpStatus=405, description='Method not allowed.'}",
            "ErrorCode{code='ADG-111', httpStatus=400, description='Need Content-Type header.'}",
            "ErrorCode{code='ADG-112', httpStatus=400, description='Request body is invalid.'}",
            "ErrorCode{code='ADG-121', httpStatus=400, description='Parameter [${paramName}]is invalid. ${additionalInfo:-}'}",
            "ErrorCode{code='ADG-115', httpStatus=415, description='Unsupported Media Type.'}",
            "ErrorCode{code='ADG-105', httpStatus=404, description='Current account is not linked to any federation.'}",
            "ErrorCode{code='ADG-107', httpStatus=404, description='Account not found.'}",
            "ErrorCode{code='ADG-122', httpStatus=404, description='Contact not found.'}",
            "ErrorCode{code='ADG-200', httpStatus=404, description='Invalid URI'}"
          ],
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Message that describes the error. This message can be used in UI.",
          "readOnly": true,
          "name": "message"
        }
      ]
    },
    {
      "name": "ADGErrorResponse",
      "description": "Format of response in case that any error occured during request processing",
      "fields": [
        {
          "type": "array",
          "description": "Collection of all gathered errors",
          "readOnly": true,
          "items": {
            "$ref": "ADGError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "FederatedAccountResource",
      "fields": [
        {
          "type": "string",
          "name": "companyName"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "conflictCount"
        },
        {
          "type": "string",
          "name": "federatedName"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "linkCreationTime"
        },
        {
          "$ref": "PhoneNumberResource",
          "name": "mainNumber"
        }
      ]
    },
    {
      "name": "FederationResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "FederatedAccountResource"
          },
          "name": "accounts"
        },
        {
          "type": "string",
          "name": "creationTime"
        },
        {
          "type": "string",
          "name": "displayName"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "CompanyContactsPagingInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "perPage"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "totalElements"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "pageEnd"
        }
      ]
    },
    {
      "name": "PhoneNumberResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "$ref": "CountryResource",
          "name": "country"
        },
        {
          "$ref": "PhoneNumberExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom user name of a phone number, if any",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Location (City, State). Filled for local US numbers",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system",
          "enum": [
            "External",
            "TollFree",
            "Local"
          ],
          "name": "paymentType"
        },
        {
          "maxLength": 128,
          "minLength": 0,
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is 'Normal', the phone number is ready to be used. Otherwise it is an external number not yet ported to RingCentral",
          "name": "status"
        },
        {
          "type": "string",
          "enum": [
            "CompanyNumber",
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber"
          ],
          "name": "usageType"
        },
        {
          "type": "string",
          "description": "Type of a phone number",
          "enum": [
            "VoiceFax",
            "FaxOnly",
            "VoiceOnly"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "AccountDirectoryProfileImageResource",
      "fields": [
        {
          "type": "string",
          "name": "etag"
        },
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ContactDirectoryEvent",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of change",
          "name": "eventType"
        },
        {
          "type": "string",
          "description": "Extension Type",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Status of an extension",
          "enum": [
            "Disabled",
            "Enabled",
            "NotActivated"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "First name of an extension user",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of an extension user",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Department Name",
          "name": "department"
        },
        {
          "type": "string",
          "description": "Email of an extension user",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "$ref": "CompanyDirectoryAccountInfo",
          "name": "account"
        },
        {
          "$ref": "CompanyDirectoryPhoneNumberInfo",
          "name": "phoneNumbers"
        },
        {
          "$ref": "ContactDirectorySiteInfo",
          "name": "site"
        },
        {
          "$ref": "CompanyDirectoryProfileImageInfo",
          "name": "profileImage"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "CompanyDirectoryAccountInfo",
      "description": "Account data of an extension",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account",
          "name": "id"
        }
      ]
    },
    {
      "name": "CompanyDirectoryPhoneNumberInfo",
      "description": "Extension phone number information",
      "fields": [
        {
          "type": "string",
          "description": "Extension phone number in E.164 format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Type of a phone number",
          "enum": [
            "VoiceFax",
            "FaxOnly",
            "VoiceOnly"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Specifies if a phone number should be hidden or not. Returned only if the value is 'True'",
          "name": "hidden"
        },
        {
          "type": "string",
          "description": "Usage type of a phone number",
          "enum": [
            "MobileNumber",
            "ContactNumber",
            "DirectNumber",
            "ForwardedNumber"
          ],
          "name": "usageType"
        }
      ]
    },
    {
      "name": "CompanyDirectoryProfileImageInfo",
      "description": "Extension profile image information. Not returned if profile images are absent for an extension",
      "fields": [
        {
          "type": "string",
          "description": "Link to a profile image resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an image",
          "name": "etag"
        }
      ]
    },
    {
      "name": "ContactDirectorySiteInfo",
      "description": "Site Data",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Custom name of a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "SearchDirectoryEntriesRequest",
      "fields": [
        {
          "type": "string",
          "description": "String value to filter the contacts. The value specified is searched through the following fields: `firstName`, `lastName`, `extensionNumber`, `phoneNumber`, `email`, `jobTitle`, `department`",
          "name": "searchString"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "firstName",
              "lastName",
              "extensionNumber",
              "phoneNumber",
              "email",
              "jobTitle",
              "department"
            ]
          },
          "name": "searchFields"
        },
        {
          "type": "boolean",
          "description": "If 'True' then contacts of all accounts in federation are returned. If 'False' then only contacts of the current account are returned, and account section is eliminated in this case",
          "default": true,
          "name": "showFederated"
        },
        {
          "type": "string",
          "description": "Type of extension to filter the contacts. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "ParkLocation",
            "IvrMenu",
            "Limited",
            "ApplicationExtension",
            "Site",
            "Bot",
            "ProxyAdmin",
            "DelegatedLinesGroup",
            "GroupCallPickup"
          ],
          "name": "extensionType"
        },
        {
          "type": "array",
          "description": "Sorting settings",
          "items": {
            "$ref": "OrderBy"
          },
          "name": "orderBy"
        },
        {
          "type": "integer",
          "name": "page"
        },
        {
          "type": "integer",
          "name": "perPage"
        }
      ]
    },
    {
      "name": "OrderBy",
      "fields": [
        {
          "type": "integer",
          "description": "Sorting priority index, starting from '1'. Optional if only one element in `orderBy` array is specified",
          "name": "index"
        },
        {
          "type": "string",
          "description": "Field name by which to sort the contacts",
          "enum": [
            "firstName",
            "lastName",
            "extensionNumber",
            "phoneNumber",
            "email",
            "jobTitle",
            "department"
          ],
          "name": "fieldName"
        },
        {
          "type": "string",
          "description": "Sorting direction",
          "enum": [
            "Asc",
            "Desc"
          ],
          "name": "direction"
        }
      ]
    },
    {
      "name": "CompanyDirectoryEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "CompanyDirectoryEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "CompanyDirectoryEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of change",
          "name": "eventType"
        },
        {
          "type": "string",
          "description": "Type of extension",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Status of an extension",
          "enum": [
            "Enabled",
            "NotActivated",
            "Disabled"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "First name of a user extension",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of a user extension",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Name of a contact, for non-user extensions",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Department name",
          "name": "department"
        },
        {
          "type": "string",
          "name": "email"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "$ref": "CompanyDirectoryAccountInfo",
          "name": "account"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CompanyDirectoryPhoneNumberInfo"
          },
          "name": "phoneNumbers"
        },
        {
          "$ref": "ContactDirectorySiteInfo",
          "name": "site"
        },
        {
          "$ref": "CompanyDirectoryProfileImageInfo",
          "name": "profileImage"
        }
      ]
    },
    {
      "name": "AnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI to an answering rule resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Specifies if an answering rule is active or inactive",
          "name": "enabled"
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calls are received from specified caller(s)",
          "items": {
            "$ref": "CallersInfo"
          },
          "name": "callers"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "ForwardingInfo",
          "name": "forwarding"
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding"
        },
        {
          "$ref": "QueueInfo",
          "name": "queue"
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer"
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "name": "screening"
        },
        {
          "$ref": "SharedLinesInfo",
          "name": "sharedLines"
        }
      ]
    },
    {
      "name": "CustomAnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI to an answering rule resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Specifies if an answering rule is active or inactive",
          "name": "enabled"
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calls are received from specified caller(s)",
          "items": {
            "$ref": "CallersInfo"
          },
          "name": "callers"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "ForwardingInfo",
          "name": "forwarding"
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding"
        },
        {
          "$ref": "QueueInfo",
          "name": "queue"
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer"
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "name": "screening"
        },
        {
          "$ref": "SharedLinesInfo",
          "name": "sharedLines"
        }
      ]
    },
    {
      "name": "SharedLinesInfo",
      "description": "SharedLines call handling action settings",
      "fields": [
        {
          "type": "integer",
          "description": "Number of seconds to wait before forwarding unanswered calls. The value range is 10 - 80",
          "name": "timeout"
        }
      ]
    },
    {
      "name": "AudioPromptInfo",
      "description": "For 'Audio' mode only. Prompt media reference",
      "fields": [
        {
          "type": "string",
          "description": "Link to a prompt audio file",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a prompt",
          "name": "id"
        }
      ]
    },
    {
      "name": "CalledNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Called phone number",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CallersInfo",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a caller",
          "name": "callerId"
        },
        {
          "type": "string",
          "description": "Contact name of a caller",
          "name": "name"
        }
      ]
    },
    {
      "name": "CallersInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a caller",
          "name": "callerId"
        },
        {
          "type": "string",
          "description": "Contact name of a caller",
          "name": "name"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleCalledNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleCalledNumberInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number of a callee",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleCallersInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a caller",
          "name": "callerId"
        },
        {
          "type": "string",
          "description": "Displayed name for a caller ID",
          "name": "name"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleExtensionInfoRequest",
      "description": "Extension to which the call is forwarded in 'Bypass' mode",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an answering rule",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "default": "Custom",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calling the specified number(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCalledNumberInfoRequest"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect', 'Bypass']",
          "enum": [
            "Operator",
            "Disconnect",
            "Bypass"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "CompanyAnsweringRuleExtensionInfoRequest",
          "name": "extension"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleList",
      "fields": [
        {
          "type": "string",
          "description": "Link to an answering rule resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of company answering rules",
          "items": {
            "$ref": "ListCompanyAnsweringRuleInfo"
          },
          "name": "records"
        },
        {
          "$ref": "CallHandlingPagingInfo",
          "name": "paging"
        },
        {
          "$ref": "CallHandlingNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is 'True'",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Type of an answering rule, the default value is 'Custom' = ['BusinessHours', 'AfterHours', 'Custom']",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calling the specified number(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleScheduleInfoRequest",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect', 'Bypass']",
          "enum": [
            "Operator",
            "Disconnect",
            "Bypass"
          ],
          "name": "callHandlingAction"
        },
        {
          "type": "string",
          "description": "Extension to which the call is forwarded in 'Bypass' mode",
          "name": "extension"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleScheduleInfo",
      "description": "Schedule when an answering rule should be applied",
      "fields": [
        {
          "$ref": "CompanyAnsweringRuleWeeklyScheduleInfoRequest",
          "name": "weeklyRanges"
        },
        {
          "type": "array",
          "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
          "items": {
            "$ref": "RangesInfo"
          },
          "name": "ranges"
        },
        {
          "type": "string",
          "description": "Reference to Business Hours or After Hours schedule = ['BusinessHours', 'AfterHours']",
          "enum": [
            "BusinessHours",
            "AfterHours"
          ],
          "name": "ref"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleScheduleInfoRequest",
      "description": "Schedule when an answering rule should be applied",
      "fields": [
        {
          "$ref": "CompanyAnsweringRuleWeeklyScheduleInfoRequest",
          "name": "weeklyRanges"
        },
        {
          "type": "array",
          "description": "Specific data ranges. If specified, weeklyRanges cannot be specified",
          "items": {
            "$ref": "RangesInfo"
          },
          "name": "ranges"
        },
        {
          "type": "string",
          "description": "Reference to Business Hours or After Hours schedule",
          "enum": [
            "BusinessHours",
            "AfterHours"
          ],
          "name": "ref"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleTimeIntervalRequest",
      "fields": [
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "to"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleWeeklyScheduleInfoRequest",
      "description": "Weekly schedule. If specified, ranges cannot be specified",
      "fields": [
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "monday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "tuesday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "wednesday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "thursday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "friday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "saturday"
        },
        {
          "type": "array",
          "description": "Time interval for a particular day",
          "items": {
            "$ref": "CompanyAnsweringRuleTimeIntervalRequest"
          },
          "name": "sunday"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleUpdate",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is 'True'",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calling the specified number(s)",
          "items": {
            "$ref": "CompanyAnsweringRuleCalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleScheduleInfoRequest",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded. The default value is 'Operator' 'Operator' - play company greeting and forward to operator extension 'Disconnect' - play company greeting and disconnect 'Bypass' - bypass greeting to go to selected extension = ['Operator', 'Disconnect','Bypass']",
          "enum": [
            "Operator",
            "Disconnect",
            "Bypass"
          ],
          "name": "callHandlingAction"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "default": "Custom",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Internal identifier of the extension the call is forwarded to. Supported for 'Bypass' mode only (that should be specified in `callHandlingAction` field)",
          "name": "extension"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "CompanyBusinessHours",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a business-hours resource ",
          "name": "uri"
        },
        {
          "$ref": "CompanyBusinessHoursScheduleInfo",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "CompanyBusinessHoursScheduleInfo",
      "description": "Schedule when an answering rule is applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        }
      ]
    },
    {
      "name": "CompanyBusinessHoursUpdateRequest",
      "fields": [
        {
          "$ref": "CompanyBusinessHoursScheduleInfo",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "CreateAnsweringRuleRequest",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is 'True'",
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Type of an answering rule. The 'Custom' value should be specified",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction"
        },
        {
          "$ref": "ForwardingInfo",
          "name": "forwarding"
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding"
        },
        {
          "$ref": "QueueInfo",
          "name": "queue"
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer"
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "name": "screening"
        }
      ]
    },
    {
      "name": "CreateForwardingNumberRequest",
      "fields": [
        {
          "type": "integer",
          "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number",
          "name": "flipNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone type. If specified, 'label' attribute value is ignored. The default value is 'Other'",
          "enum": [
            "PhoneLine",
            "Home",
            "Mobile",
            "Work",
            "Other"
          ],
          "name": "type"
        },
        {
          "$ref": "CreateForwardingNumberDeviceInfo",
          "name": "device"
        }
      ]
    },
    {
      "name": "CreateForwardingNumberDeviceInfo",
      "description": "Forwarding device information. Applicable for 'PhoneLine' type only. Cannot be specified together with 'phoneNumber' parameter",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the other extension device",
          "name": "id"
        }
      ]
    },
    {
      "name": "CustomCompanyGreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to an extension custom greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a company greeting",
          "enum": [
            "Company",
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Content media type",
          "enum": [
            "audio/mpeg",
            "audio/wav"
          ],
          "name": "contentType"
        },
        {
          "type": "string",
          "description": "Link to a greeting content (audio file)",
          "name": "contentUri"
        },
        {
          "$ref": "CustomGreetingAnsweringRuleInfo",
          "name": "answeringRule"
        },
        {
          "$ref": "CustomCompanyGreetingLanguageInfo",
          "name": "language"
        }
      ]
    },
    {
      "name": "CustomGreetingAnsweringRuleInfo",
      "description": "Information on an answering rule that the greeting is applied to",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of an answering rule",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        }
      ]
    },
    {
      "name": "DictionaryGreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a greeting",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a greeting",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Usage type of a greeting, specifying if the greeting is applied for user extension or department (call queue) extension.",
          "enum": [
            "UserExtensionAnsweringRule",
            "ExtensionAnsweringRule",
            "DepartmentExtensionAnsweringRule",
            "BlockedCalls",
            "CallRecording",
            "CompanyAnsweringRule",
            "CompanyAfterHoursAnsweringRule",
            "LimitedExtensionAnsweringRule",
            "VoicemailExtensionAnsweringRule",
            "AnnouncementExtensionAnsweringRule",
            "SharedLinesGroupAnsweringRule"
          ],
          "name": "usageType"
        },
        {
          "type": "string",
          "description": "Text of a greeting, if any",
          "name": "text"
        },
        {
          "type": "string",
          "description": "Link to a greeting content (audio file), if any",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Type of a greeting, specifying the case when the greeting is played.",
          "enum": [
            "Introductory",
            "Announcement",
            "AutomaticRecording",
            "BlockedCallersAll",
            "BlockedCallersSpecific",
            "BlockedNoCallerId",
            "BlockedPayPhones",
            "ConnectingMessage",
            "ConnectingAudio",
            "StartRecording",
            "StopRecording",
            "Voicemail",
            "Unavailable",
            "InterruptPrompt",
            "HoldMusic",
            "Company"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Category of a greeting, specifying data form. The category value 'None' specifies that greetings of a certain type ('Introductory', 'ConnectingAudio', etc.) are switched off for an extension = ['Music', 'Message', 'RingTones', 'None']",
          "enum": [
            "Music",
            "Message",
            "RingTones",
            "None"
          ],
          "name": "category"
        },
        {
          "$ref": "CallHandlingNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "CallHandlingPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "DictionaryGreetingList",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of greetings list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of greetings",
          "items": {
            "$ref": "DictionaryGreetingInfo"
          },
          "name": "records"
        },
        {
          "$ref": "CallHandlingNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "CallHandlingPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "ExtensionInfo",
      "description": "Information on the extension, to which the phone number is assigned. Returned only for the request of Account phone number list",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For partner applications. Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding account ID/extension ID for each partner ID of a client application. In request URIs partner IDs are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding account IDs and extension IDs. In all request and response bodies these values are reflected via partnerId attributes of account and extension",
          "name": "partnerId"
        }
      ]
    },
    {
      "name": "FixedOrderAgents",
      "fields": [
        {
          "$ref": "FixedOrderAgentsExtensionInfo",
          "name": "extension"
        },
        {
          "type": "integer",
          "description": "Ordinal of an agent (call queue member)",
          "name": "index"
        }
      ]
    },
    {
      "name": "FixedOrderAgentsExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of agent extension",
          "name": "name"
        }
      ]
    },
    {
      "name": "ForwardingInfo",
      "description": "Forwarding parameters. Returned if 'ForwardCalls' is specified in 'callHandlingAction'. These settings determine the forwarding numbers to which the call will be forwarded",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if the user's softphone(s) are notified before forwarding the incoming call to desk phones and forwarding numbers",
          "name": "notifyMySoftPhones"
        },
        {
          "type": "boolean",
          "description": "Specifies if the administrator's softphone is notified before forwarding the incoming call to desk phones and forwarding numbers. The default value is 'False'",
          "name": "notifyAdminSoftPhones"
        },
        {
          "type": "integer",
          "description": "Number of rings before forwarding starts",
          "name": "softPhonesRingCount"
        },
        {
          "type": "string",
          "description": "Specifies the order in which forwarding numbers ring. 'Sequentially' means that forwarding numbers are ringing one at a time, in order of priority. 'Simultaneously' means that forwarding numbers are ring all at the same time",
          "enum": [
            "Sequentially",
            "Simultaneously"
          ],
          "name": "ringingMode"
        },
        {
          "type": "array",
          "description": "Information on a call forwarding rule",
          "items": {
            "$ref": "RuleInfo"
          },
          "name": "rules"
        },
        {
          "type": "boolean",
          "description": "Specifies if mobile timeout is activated for the rule",
          "name": "mobileTimeout"
        }
      ]
    },
    {
      "name": "ForwardingInfoCreateRuleRequest",
      "description": "Forwarding parameters. Returned if 'ForwardCalls' is specified in 'callHandlingAction'. These settings determine the forwarding numbers to which the call will be forwarded",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if the first ring on desktop/mobile apps is enabled. The default value is 'True'",
          "name": "notifyMySoftPhones"
        },
        {
          "type": "boolean",
          "description": "Specifies if the administrator's softphone (desktop application) is notified before forwarding the incoming call to desk phones and forwarding numbers. The default value is 'True'",
          "name": "notifyAdminSoftPhones"
        },
        {
          "type": "integer",
          "description": "Specifies delay between ring on apps and starting of a call forwarding",
          "name": "softPhonesRingCount"
        },
        {
          "type": "string",
          "description": "Specifies the order in which forwarding numbers ring. 'Sequentially' means that forwarding numbers are ringing one at a time, in order of priority. 'Simultaneously' means that forwarding numbers are ringing all at the same time. The default value is 'Sequentially'",
          "enum": [
            "Sequentially",
            "Simultaneously"
          ],
          "name": "ringingMode"
        },
        {
          "type": "array",
          "description": "Information on a call forwarding rule",
          "items": {
            "$ref": "RuleInfoCreateRuleRequest"
          },
          "name": "rules"
        },
        {
          "type": "boolean",
          "description": "Specifies if mobile timeout is activated for the rule",
          "name": "mobileTimeout"
        }
      ]
    },
    {
      "name": "ForwardingNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a forwarding/call flip phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a forwarding/call flip phone number",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        },
        {
          "type": "array",
          "description": "Type of option this phone number is used for. Multiple values are accepted",
          "items": {
            "type": "string",
            "enum": [
              "CallFlip",
              "CallForwarding"
            ]
          },
          "name": "features"
        },
        {
          "type": "string",
          "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number",
          "name": "flipNumber"
        },
        {
          "$ref": "CreateForwardingNumberDeviceInfo",
          "name": "device"
        },
        {
          "type": "string",
          "description": "Forwarding phone number type",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "CreateAnsweringRuleForwardingNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a forwarding number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a forwarding/call flip phone number",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Type of a forwarding number",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "ForwardingNumberInfoRulesCreateRuleRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a forwarding number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Forwarding phone number type",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Canonical URI of a forwarding/call flip phone number",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        }
      ]
    },
    {
      "name": "GetExtensionForwardingNumberListResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the forwarding number list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of forwarding phone numbers",
          "items": {
            "$ref": "ForwardingNumberInfo"
          },
          "name": "records"
        },
        {
          "$ref": "CallHandlingNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "CallHandlingPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "GetUserBusinessHoursResponse",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a business-hours resource",
          "name": "uri"
        },
        {
          "$ref": "ScheduleInfoUserBusinessHours",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "GreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Type of a greeting, specifying the case when the greeting is played.",
          "enum": [
            "Introductory",
            "Announcement",
            "ConnectingMessage",
            "ConnectingAudio",
            "Voicemail",
            "Unavailable",
            "InterruptPrompt",
            "HoldMusic",
            "Custom",
            "Company",
            "BlockedCallersSpecific",
            "BlockedCallersAll",
            "BlockedNoCallerId",
            "BlockedPayPhones",
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ],
          "name": "type"
        },
        {
          "$ref": "PresetInfo",
          "name": "preset"
        },
        {
          "$ref": "CustomGreetingInfoRequest",
          "name": "custom"
        }
      ]
    },
    {
      "name": "IVRMenuActionsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Key. The following values are supported: numeric: '1' to '9' Star Hash NoInput ",
          "name": "input"
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "enum": [
            "Connect",
            "Voicemail",
            "DialByName",
            "Transfer",
            "Repeat",
            "ReturnToRoot",
            "ReturnToPrevious",
            "Disconnect",
            "ReturnToTopLevelMenu",
            "DoNothing",
            "ConnectToOperator"
          ],
          "name": "action"
        },
        {
          "$ref": "IVRMenuExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "For 'Transfer' action only. PSTN number in E.164 format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "IVRMenuExtensionInfo",
      "description": "For 'Connect' or 'Voicemail' actions only. Extension reference",
      "fields": [
        {
          "type": "string",
          "description": "Link to an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of an extension",
          "name": "name"
        }
      ]
    },
    {
      "name": "IVRMenuInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an IVR Menu extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to an IVR Menu extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "First name of an IVR Menu user",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Number of an IVR Menu extension",
          "name": "extensionNumber"
        },
        {
          "$ref": "IVRMenuSiteInfo",
          "name": "site"
        },
        {
          "$ref": "IVRMenuPromptInfo",
          "name": "prompt"
        },
        {
          "type": "array",
          "description": "Keys handling settings",
          "items": {
            "$ref": "IVRMenuActionsInfo"
          },
          "name": "actions"
        }
      ]
    },
    {
      "name": "IVRMenuSiteInfo",
      "description": "Site data",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site. If the value is not specified in request, then the `main-site` default value is used",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Site name",
          "name": "name"
        }
      ]
    },
    {
      "name": "IVRMenuPromptInfo",
      "description": "Prompt metadata",
      "fields": [
        {
          "type": "string",
          "description": "Prompt mode: custom media or text",
          "enum": [
            "Audio",
            "TextToSpeech"
          ],
          "name": "mode"
        },
        {
          "$ref": "AudioPromptInfo",
          "name": "audio"
        },
        {
          "type": "string",
          "description": "For 'TextToSpeech' mode only. Prompt text",
          "name": "text"
        },
        {
          "$ref": "PromptLanguageInfo",
          "name": "language"
        }
      ]
    },
    {
      "name": "IVRPrompts",
      "fields": [
        {
          "type": "string",
          "description": "Link to prompts library resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of Prompts",
          "items": {
            "$ref": "PromptInfo"
          },
          "name": "records"
        },
        {
          "$ref": "CallHandlingNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "CallHandlingPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "ListCompanyAnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an answering rule",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is 'True'",
          "default": true,
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Type of an answering rule, the default value is 'Custom' = ['BusinessHours', 'AfterHours', 'Custom']",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user. Max number of symbols is 30. The default value is 'My Rule N' where 'N' is the first free number",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "CompanyAnsweringRuleExtensionInfo",
          "name": "extension"
        }
      ]
    },
    {
      "name": "CallHandlingNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "CallHandlingNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "CallHandlingNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "CallHandlingNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "CallHandlingNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "CallHandlingNavigationInfoUri",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "CallHandlingPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "PresetInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a greeting resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a greeting",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a greeting",
          "name": "name"
        }
      ]
    },
    {
      "name": "PromptInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a prompt",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Link to a prompt metadata",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a prompt media content",
          "name": "contentType"
        },
        {
          "type": "string",
          "description": "Link to a prompt media content",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Name of a prompt",
          "name": "filename"
        }
      ]
    },
    {
      "name": "PromptLanguageInfo",
      "description": "For 'TextToSpeech' mode only. Prompt language metadata",
      "fields": [
        {
          "type": "string",
          "description": "Link to a prompt language",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Language name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Language locale code",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "QueueInfo",
      "description": "Queue settings applied for department (call queue) extension type, with the 'AgentQueue' value specified as a call handling action",
      "fields": [
        {
          "type": "string",
          "description": "Specifies how calls are transferred to group members",
          "enum": [
            "Rotating",
            "Simultaneous",
            "FixedOrder"
          ],
          "name": "transferMode"
        },
        {
          "type": "array",
          "description": "Call transfer information",
          "items": {
            "$ref": "TransferInfo"
          },
          "name": "transfer"
        },
        {
          "type": "string",
          "description": "Specifies the type of action to be taken if: members are available but no one answers, or all members are busy/unavailable. This option is available for Business hours only. For simultaneous transfer mode only 'WaitPrimaryMembers' and 'WaitPrimaryAndOverflowMembers' are supported",
          "enum": [
            "WaitPrimaryMembers",
            "WaitPrimaryAndOverflowMembers",
            "Voicemail",
            "TransferToExtension",
            "UnconditionalForwarding"
          ],
          "name": "noAnswerAction"
        },
        {
          "type": "array",
          "description": "Information on a call forwarding rule",
          "items": {
            "$ref": "FixedOrderAgents"
          },
          "name": "fixedOrderAgents"
        },
        {
          "type": "string",
          "description": "Connecting audio interruption mode",
          "enum": [
            "Never",
            "WhenMusicEnds",
            "Periodically"
          ],
          "name": "holdAudioInterruptionMode"
        },
        {
          "type": "integer",
          "description": "Connecting audio interruption message period in seconds",
          "name": "holdAudioInterruptionPeriod"
        },
        {
          "type": "string",
          "description": "Specifies the type of action to be taken after the hold time (waiting for an available call queue member) expires. If 'TransferToExtension' option is selected, the extension specified in `transfer` field is used. The default value is `Voicemail`",
          "default": "Voicemail",
          "enum": [
            "TransferToExtension",
            "UnconditionalForwarding",
            "Voicemail"
          ],
          "name": "holdTimeExpirationAction"
        },
        {
          "type": "integer",
          "description": "Maximum time in seconds to wait for a call queue member before trying the next member",
          "name": "agentTimeout"
        },
        {
          "type": "integer",
          "description": "Minimum post-call wrap up time in seconds before agent status is automatically set; the value range is from 180 to 300",
          "name": "wrapUpTime"
        },
        {
          "type": "integer",
          "description": "Maximum hold time in seconds to wait for an available call queue member",
          "name": "holdTime"
        },
        {
          "type": "integer",
          "description": "Maximum count of callers on hold; the limitation is 25 callers",
          "name": "maxCallers"
        },
        {
          "type": "string",
          "description": "Specifies the type of action to be taken if count of callers on hold exceeds the supported maximum",
          "enum": [
            "Voicemail",
            "Announcement",
            "TransferToExtension",
            "UnconditionalForwarding"
          ],
          "name": "maxCallersAction"
        },
        {
          "type": "array",
          "items": {
            "$ref": "UnconditionalForwardingInfo"
          },
          "name": "unconditionalForwarding"
        }
      ]
    },
    {
      "name": "TransferInfo",
      "fields": [
        {
          "$ref": "TransferExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Event that initiates transferring to the specified extension",
          "enum": [
            "HoldTimeExpiration",
            "MaxCallers",
            "NoAnswer"
          ],
          "name": "action"
        }
      ]
    },
    {
      "name": "TransferExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension the call is transferred to",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "RangesInfo",
      "fields": [
        {
          "type": "string",
          "description": "Starting datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), for example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Ending datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), for example *2018-10-29T14:00:00*, *2018-10-29T14:00:00Z*, *2018-10-29T14:00:00+0100*",
          "name": "to"
        }
      ]
    },
    {
      "name": "RecipientInfo",
      "description": "Recipient data",
      "fields": [
        {
          "type": "string",
          "description": "Link to a recipient extension resource",
          "name": "uri"
        },
        {
          "type": "integer",
          "description": "Internal identifier of a recipient extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "RuleInfo",
      "fields": [
        {
          "type": "integer",
          "description": "Forwarding number (or group) ordinal",
          "name": "index"
        },
        {
          "type": "integer",
          "description": "Number of rings for a forwarding number (or group)",
          "name": "ringCount"
        },
        {
          "type": "boolean",
          "description": "Forwarding number status. Returned only if `showInactiveNumbers` is set to `true`",
          "name": "enabled"
        },
        {
          "type": "array",
          "description": "Forwarding number (or group) data",
          "items": {
            "$ref": "CreateAnsweringRuleForwardingNumberInfo"
          },
          "name": "forwardingNumbers"
        }
      ]
    },
    {
      "name": "RuleInfoCreateRuleRequest",
      "fields": [
        {
          "type": "integer",
          "description": "Forwarding number (or group) ordinal. Not returned for inactive numbers",
          "name": "index"
        },
        {
          "type": "integer",
          "description": "Number of rings for a forwarding number (or group). For inactive numbers the default value ('4') is returned",
          "name": "ringCount"
        },
        {
          "type": "boolean",
          "description": "Phone number status",
          "name": "enabled"
        },
        {
          "type": "array",
          "description": "Forwarding number (or group) data",
          "items": {
            "$ref": "ForwardingNumberInfoRulesCreateRuleRequest"
          },
          "name": "forwardingNumbers"
        }
      ]
    },
    {
      "name": "ScheduleInfo",
      "description": "Schedule when an answering rule should be applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        },
        {
          "type": "array",
          "description": "Specific data ranges",
          "items": {
            "$ref": "RangesInfo"
          },
          "name": "ranges"
        },
        {
          "type": "string",
          "description": "The user's schedule specified for business hours or after hours; it can also be set/retrieved calling the corresponding method",
          "enum": [
            "BusinessHours",
            "AfterHours"
          ],
          "name": "ref"
        }
      ]
    },
    {
      "name": "ScheduleInfoUserBusinessHours",
      "description": "Schedule when an answering rule is applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        }
      ]
    },
    {
      "name": "TimeInterval",
      "fields": [
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Time in format hh:mm",
          "name": "to"
        }
      ]
    },
    {
      "name": "TransferredExtensionInfo",
      "description": "Transfer settings applied for department (call queue) extension type, with 'TransferToExtension' call handling action",
      "fields": [
        {
          "$ref": "ExtensionInfo",
          "name": "extension"
        }
      ]
    },
    {
      "name": "UnconditionalForwardingInfo",
      "description": "Unconditional forwarding parameters. Returned if 'UnconditionalForwarding' is specified in 'callHandlingAction'",
      "fields": [
        {
          "type": "string",
          "description": "Phone number to which the call is forwarded. In addition to common e.164 format, the following number patterns are supported: 11xxxxxxxxxxx, 444xxxxxxxxxxx, 616xxxxxxxxxxx; where xxxxxxxxxxx is a phone number in e.164 format (without '+' sign)",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Event that initiates forwarding to the specified phone number",
          "enum": [
            "HoldTimeExpiration",
            "MaxCallers",
            "NoAnswer"
          ],
          "name": "action"
        }
      ]
    },
    {
      "name": "UpdateAnsweringRuleRequest",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of an answering rule",
          "name": "id"
        },
        {
          "$ref": "ForwardingInfoCreateRuleRequest",
          "name": "forwarding"
        },
        {
          "type": "boolean",
          "description": "Specifies if the rule is active or inactive. The default value is 'True'",
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Answering rule will be applied when calls are received from the specified caller(s)",
          "items": {
            "$ref": "CallersInfoRequest"
          },
          "name": "callers"
        },
        {
          "type": "array",
          "description": "Answering rules are applied when calling to selected number(s)",
          "items": {
            "$ref": "CalledNumberInfo"
          },
          "name": "calledNumbers"
        },
        {
          "$ref": "ScheduleInfo",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Specifies how incoming calls are forwarded",
          "enum": [
            "ForwardCalls",
            "UnconditionalForwarding",
            "AgentQueue",
            "TransferToExtension",
            "TakeMessagesOnly",
            "PlayAnnouncementOnly",
            "SharedLines"
          ],
          "name": "callHandlingAction"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "$ref": "UnconditionalForwardingInfo",
          "name": "unconditionalForwarding"
        },
        {
          "$ref": "QueueInfo",
          "name": "queue"
        },
        {
          "$ref": "VoicemailInfo",
          "name": "voicemail"
        },
        {
          "type": "array",
          "description": "Greetings applied for an answering rule; only predefined greetings can be applied, see Dictionary Greeting List",
          "items": {
            "$ref": "GreetingInfo"
          },
          "name": "greetings"
        },
        {
          "type": "string",
          "description": "Call screening status. 'Off' - no call screening; 'NoCallerId' - if caller ID is missing, then callers are asked to say their name before connecting; 'UnknownCallerId' - if caller ID is not in contact list, then callers are asked to say their name before connecting; 'Always' - the callers are always asked to say their name before connecting. The default value is 'Off'",
          "enum": [
            "Off",
            "NoCallerId",
            "UnknownCallerId",
            "Always"
          ],
          "name": "screening"
        },
        {
          "type": "boolean",
          "description": "Indicates whether inactive numbers should be returned or not",
          "name": "showInactiveNumbers"
        },
        {
          "$ref": "TransferredExtensionInfo",
          "name": "transfer"
        }
      ]
    },
    {
      "name": "UpdateForwardingNumberRequest",
      "fields": [
        {
          "type": "string",
          "description": "Forwarding/Call flip phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Forwarding/Call flip number title",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Number assigned to the call flip phone number, corresponds to the shortcut dial number",
          "name": "flipNumber"
        },
        {
          "type": "string",
          "description": "Forwarding phone number type",
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "PhoneLine",
            "Outage",
            "Other",
            "BusinessMobilePhone",
            "ExternalCarrier"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "UserBusinessHoursScheduleInfo",
      "description": "Schedule when an answering rule is applied",
      "fields": [
        {
          "$ref": "WeeklyScheduleInfo",
          "name": "weeklyRanges"
        }
      ]
    },
    {
      "name": "UserBusinessHoursUpdateResponse",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a business-hours resource",
          "name": "uri"
        },
        {
          "$ref": "UserBusinessHoursScheduleInfo",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "UserBusinessHoursUpdateRequest",
      "fields": [
        {
          "$ref": "UserBusinessHoursScheduleInfo",
          "name": "schedule"
        }
      ]
    },
    {
      "name": "VoicemailInfo",
      "description": "Specifies whether to take a voicemail and who should do it",
      "fields": [
        {
          "type": "boolean",
          "description": "If 'True' then voicemails are allowed to be received",
          "name": "enabled"
        },
        {
          "$ref": "RecipientInfo",
          "name": "recipient"
        }
      ]
    },
    {
      "name": "WeeklyScheduleInfo",
      "description": "Weekly schedule",
      "fields": [
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "monday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "tuesday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "wednesday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "thursday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "friday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "saturday"
        },
        {
          "type": "array",
          "description": "Time intervals for a particular day",
          "items": {
            "$ref": "TimeInterval"
          },
          "name": "sunday"
        }
      ]
    },
    {
      "name": "BulkAccountCallRecordingsResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionResource"
          },
          "name": "addedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionResource"
          },
          "name": "updatedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionResource"
          },
          "name": "removedExtensions"
        }
      ]
    },
    {
      "name": "CallRecordingExtensionResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Direction of call",
          "enum": [
            "Outbound",
            "Inbound",
            "All"
          ],
          "name": "callDirection"
        }
      ]
    },
    {
      "name": "CallRecordingSettingsResource",
      "fields": [
        {
          "$ref": "OnDemandResource",
          "name": "onDemand"
        },
        {
          "$ref": "AutomaticRecordingResource",
          "name": "automatic"
        },
        {
          "type": "array",
          "description": "Collection of Greeting Info",
          "items": {
            "$ref": "GreetingResource"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "GreetingResource",
      "fields": [
        {
          "type": "string",
          "enum": [
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "'Default' value specifies that all greetings of that type (in all languages) are default, if at least one greeting (in any language) of the specified type is custom, then 'Custom' value is returned.",
          "enum": [
            "Default",
            "Custom"
          ],
          "name": "mode"
        }
      ]
    },
    {
      "name": "AutomaticRecordingResource",
      "fields": [
        {
          "type": "boolean",
          "description": "Flag for controling Automatic Call Recording settings",
          "name": "enabled"
        },
        {
          "type": "boolean",
          "description": "Flag for controlling 'Play Call Recording Announcement for Outbound Calls' settings",
          "name": "outboundCallTones"
        },
        {
          "type": "boolean",
          "description": "Flag for controlling 'Play periodic tones for outbound calls' settings",
          "name": "outboundCallAnnouncement"
        },
        {
          "type": "boolean",
          "description": "Flag for controlling 'Allow mute in auto call recording' settings",
          "name": "allowMute"
        },
        {
          "type": "integer",
          "description": "Total amount of extension that are used in call recordings",
          "name": "extensionCount"
        },
        {
          "type": "integer",
          "description": "Retention period of a call recording, the default value is 90 days",
          "name": "retentionPeriod"
        },
        {
          "type": "integer",
          "description": "Max number of automatic call recordings per account, the default value is 100 000",
          "name": "maxNumberLimit"
        }
      ]
    },
    {
      "name": "OnDemandResource",
      "fields": [
        {
          "type": "boolean",
          "description": "Flag for controlling OnDemand Call Recording settings",
          "name": "enabled"
        },
        {
          "type": "integer",
          "description": "Retention period of a call recording, the default value is 90 days",
          "name": "retentionPeriod"
        }
      ]
    },
    {
      "name": "CustomUserGreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a custom user greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a custom user greeting",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a custom user greeting",
          "enum": [
            "Introductory",
            "Announcement",
            "InterruptPrompt",
            "ConnectingAudio",
            "ConnectingMessage",
            "Voicemail",
            "Unavailable",
            "HoldMusic",
            "PronouncedName"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Content media type",
          "enum": [
            "audio/mpeg",
            "audio/wav"
          ],
          "name": "contentType"
        },
        {
          "type": "string",
          "description": "Link to a greeting content (audio file)",
          "name": "contentUri"
        },
        {
          "$ref": "CustomGreetingAnsweringRuleInfo",
          "name": "answeringRule"
        }
      ]
    },
    {
      "name": "CustomCompanyGreetingLanguageInfo",
      "description": "Information on a greeting language. Supported for types 'StopRecording', 'StartRecording', 'AutomaticRecording'",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a greeting language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a greeting language",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a greeting language",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Locale code of a greeting language",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "CallerBlockingSettings",
      "description": "Returns the lists of blocked and allowed phone numbers",
      "fields": [
        {
          "type": "string",
          "description": "Call blocking options: either specific or all calls and faxes",
          "enum": [
            "Specific",
            "All"
          ],
          "name": "mode"
        },
        {
          "type": "string",
          "description": " Determines how to handle calls with no caller ID in 'Specific' mode",
          "enum": [
            "BlockCallsAndFaxes",
            "BlockFaxes",
            "Allow"
          ],
          "name": "noCallerId"
        },
        {
          "type": "string",
          "description": "Blocking settings for pay phones",
          "enum": [
            "Block",
            "Allow"
          ],
          "name": "payPhones"
        },
        {
          "type": "array",
          "description": "List of greetings played for blocked callers",
          "items": {
            "$ref": "BlockedCallerGreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "BlockedCallerGreetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Type of a greeting",
          "name": "type"
        },
        {
          "$ref": "PresetInfo",
          "name": "preset"
        }
      ]
    },
    {
      "name": "CallerBlockingSettingsUpdate",
      "description": "Returns the lists of blocked and allowed phone numbers",
      "fields": [
        {
          "type": "string",
          "description": "Call blocking options: either specific or all calls and faxes",
          "enum": [
            "Specific",
            "All"
          ],
          "name": "mode"
        },
        {
          "type": "string",
          "description": "Determines how to handle calls with no caller ID in 'Specific' mode",
          "enum": [
            "BlockCallsAndFaxes",
            "BlockFaxes",
            "Allow"
          ],
          "name": "noCallerId"
        },
        {
          "type": "string",
          "description": "Blocking settings for pay phones",
          "enum": [
            "Block",
            "Allow"
          ],
          "name": "payPhones"
        },
        {
          "type": "array",
          "description": "List of greetings played for blocked callers",
          "items": {
            "$ref": "BlockedCallerGreetingInfo"
          },
          "name": "greetings"
        }
      ]
    },
    {
      "name": "BlockedAllowedPhoneNumbersList",
      "description": "List of blocked or allowed phone numbers",
      "fields": [
        {
          "type": "string",
          "description": "Link to a list of blocked/allowed phone numbers resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "BlockedAllowedPhoneNumberInfo"
          },
          "name": "records"
        },
        {
          "$ref": "CallHandlingNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "CallHandlingPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "BlockedAllowedPhoneNumberInfo",
      "description": "Information on a blocked/allowed phone number",
      "fields": [
        {
          "type": "string",
          "description": "Link to a blocked/allowed phone number",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a blocked/allowed phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Custom name of a blocked/allowed phone number",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Status of a phone number",
          "enum": [
            "Blocked",
            "Allowed"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "AddBlockedAllowedPhoneNumber",
      "description": "Updates either blocked or allowed phone number list with a new phone number.",
      "fields": [
        {
          "type": "string",
          "description": "A blocked/allowed phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Custom name of a blocked/allowed phone number",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Status of a phone number",
          "default": "Blocked",
          "enum": [
            "Blocked",
            "Allowed"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreetings",
      "description": "Returns data on call recording custom greetings.",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingCustomGreeting"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreeting",
      "fields": [
        {
          "type": "string",
          "enum": [
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ],
          "name": "type"
        },
        {
          "$ref": "CallRecordingCustomGreetingData",
          "name": "custom"
        },
        {
          "$ref": "CallRecordingCustomGreetingLanguage",
          "name": "language"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreetingData",
      "description": "Custom greeting data",
      "fields": [
        {
          "type": "string",
          "description": "Link to a custom company greeting",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a custom company greeting",
          "name": "id"
        }
      ]
    },
    {
      "name": "CustomGreetingInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a custom user greeting",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallRecordingCustomGreetingLanguage",
      "description": "Custom greeting language",
      "fields": [
        {
          "type": "string",
          "description": "Link to a language",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Language name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Language locale code",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "UserAnsweringRuleList",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of an answering rule list resource",
          "example": "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule?page=1&perPage=100",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of answering rules",
          "items": {
            "$ref": "UserAnsweringRuleListRecord"
          },
          "name": "records"
        },
        {
          "$ref": "UserAnsweringRuleListPaging",
          "name": "paging"
        },
        {
          "$ref": "UserAnsweringRuleListNavigation",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "UserAnsweringRuleListRecord",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI to an answering rule resource",
          "example": "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule/business-hours-rule",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an asnwering rule",
          "example": "business-hours-rule",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of an answering rule",
          "enum": [
            "BusinessHours",
            "AfterHours",
            "Custom"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of an answering rule specified by user",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Specifies if an answering rule is active or inactive",
          "name": "enabled"
        },
        {
          "$ref": "SharedLinesInfo",
          "name": "sharedLines"
        }
      ]
    },
    {
      "name": "UserAnsweringRuleListPaging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "example": 1,
          "name": "page"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset.",
          "example": 1,
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "example": 100,
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset.",
          "example": 1,
          "name": "totalElements"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "example": 0,
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "example": 0,
          "name": "pageEnd"
        }
      ]
    },
    {
      "name": "UserAnsweringRuleListNavigation",
      "fields": [
        {
          "$ref": "UserAnsweringRuleListNavigationPage",
          "name": "firstPage"
        },
        {
          "$ref": "UserAnsweringRuleListNavigationPage",
          "name": "nextPage"
        },
        {
          "$ref": "UserAnsweringRuleListNavigationPage",
          "name": "previousPage"
        },
        {
          "$ref": "UserAnsweringRuleListNavigationPage",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "UserAnsweringRuleListNavigationPage",
      "fields": [
        {
          "type": "string",
          "example": "https://platform.ringcentral.com/restapi/v1.0/account/240913004/extension/240972004/answering-rule?page=1&perPage=100",
          "name": "uri"
        }
      ]
    },
    {
      "name": "CallRecordingExtensions",
      "fields": [
        {
          "type": "string",
          "description": "Link to call recording extension list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallRecordingExtensionInfo"
          },
          "name": "records"
        },
        {
          "$ref": "CallHandlingNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "CallHandlingPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "CallRecordingExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of an extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of an extension",
          "name": "name"
        }
      ]
    },
    {
      "name": "UpdateIVRPromptRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of a file to be uploaded as a prompt",
          "name": "filename"
        }
      ]
    },
    {
      "name": "CompanyAnsweringRuleExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "GetVersionsResponse",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of the API version",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "Full API version information: uri, number, release date",
          "items": {
            "$ref": "VersionInfo"
          },
          "name": "apiVersions"
        },
        {
          "type": "string",
          "description": "Server version",
          "name": "serverVersion"
        },
        {
          "type": "string",
          "description": "Server revision",
          "name": "serverRevision"
        }
      ]
    },
    {
      "name": "VersionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of API versions",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Version of the RingCentral REST API",
          "name": "versionString"
        },
        {
          "type": "string",
          "description": "Release date of this version",
          "name": "releaseDate"
        },
        {
          "type": "string",
          "description": "URI part determining the current version",
          "name": "uriString"
        }
      ]
    },
    {
      "name": "GetVersionResponse",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of the version info resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Version of the RingCentral REST API",
          "name": "versionString"
        },
        {
          "type": "string",
          "description": "Release date of this version",
          "name": "releaseDate"
        },
        {
          "type": "string",
          "description": "URI part determining the current version",
          "name": "uriString"
        }
      ]
    },
    {
      "name": "CreateSMSMessageBatchRequest",
      "description": "Batch of A2P SMS messages. This object provides specification to send message(s) to many recipients. It contains top-level attributes, such as `text` which apply to all `messages`. In addition to that, it is possible to override this attribute for each message. This way a single API call may be used to send individual messages to many recipients.",
      "fields": [
        {
          "type": "string",
          "description": "Sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format.",
          "example": 15551234567,
          "name": "from",
          "required": true
        },
        {
          "type": "string",
          "description": "Text to send to `messages.to` phone numbers. Can be overridden on a per-message basis",
          "example": "Hello, World!",
          "name": "text",
          "required": false
        },
        {
          "type": "array",
          "description": "Individual messages",
          "items": {
            "$ref": "MessageCreateRequest"
          },
          "name": "messages",
          "required": true
        }
      ]
    },
    {
      "name": "MessageBatchResponse",
      "description": "Batch of A2P SMS messages. This object provides a specification to send message(s) to many recipients. It contains top-level attributes which apply to all messages. In addition to that, it is possible to override this attribute for each message. This way a single API call may be used to send individual messages to many recipients",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of the message batch",
          "readOnly": true,
          "example": "12345",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the messages are going to be sent",
          "example": 15551234567,
          "name": "from",
          "required": true
        },
        {
          "type": "integer",
          "description": "Total number of messages in the accepted batch",
          "example": 5,
          "name": "batchSize",
          "required": false
        },
        {
          "type": "integer",
          "description": "Total number of messages currently processed in the batch",
          "example": 1,
          "name": "processedCount",
          "required": false
        },
        {
          "type": "string",
          "description": "The last time the batch was processed.\n",
          "format": "date-time",
          "name": "lastModifiedTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Current status of a message batch",
          "example": "Processing",
          "enum": [
            "Processing",
            "Sent",
            "Completed"
          ],
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "description": "The time at which the batch was created\n",
          "format": "date-time",
          "name": "creationTime",
          "required": false
        }
      ]
    },
    {
      "name": "CreateMessageBatchResponse",
      "description": "Batch of A2P SMS messages. This object provides a specification to send message(s) to many recipients. It contains top-level attributes which apply to all messages. In addition to that, it is possible to override this attribute for each message. This way a single API call may be used to send individual messages to many recipients",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of the message batch",
          "readOnly": true,
          "example": "12345",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the messages are going to be sent",
          "example": 15551234567,
          "name": "from",
          "required": true
        },
        {
          "type": "integer",
          "description": "Total number of messages in the accepted batch",
          "example": 5,
          "name": "batchSize",
          "required": false
        },
        {
          "type": "integer",
          "description": "Total number of messages currently processed in the batch",
          "example": 1,
          "name": "processedCount",
          "required": false
        },
        {
          "type": "string",
          "description": "The last time the batch was processed.\n",
          "format": "date-time",
          "name": "lastModifiedTime",
          "required": false
        },
        {
          "type": "string",
          "description": "Current status of a message batch",
          "example": "Processing",
          "enum": [
            "Processing",
            "Sent",
            "Completed"
          ],
          "name": "status",
          "required": false
        },
        {
          "type": "string",
          "description": "The time at which the batch was created\n",
          "format": "date-time",
          "name": "creationTime",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "RejectedMessageInfo"
          },
          "name": "rejected",
          "required": false
        }
      ]
    },
    {
      "name": "RejectedMessageInfo",
      "description": "Information about the message that failed to be sent",
      "fields": [
        {
          "type": "integer",
          "description": "Index of the rejected message in the request",
          "example": 2,
          "name": "index"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Phone number specified exactly as in the request, if available",
            "example": [
              "234456"
            ]
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Standard error code",
          "example": "CMN-100",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Standard error description",
          "example": "Parameter [to] value is invalid",
          "name": "description"
        }
      ]
    },
    {
      "name": "MessageCreateRequest",
      "description": "Single individual SMS resource",
      "fields": [
        {
          "type": "array",
          "description": "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format, recipients of this message. Currently only one number is supported",
          "example": 15551234567,
          "items": {
            "type": "string"
          },
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Text to send, maximum number of characters is 1000",
          "example": "Hello, World!",
          "name": "text",
          "required": false
        }
      ]
    },
    {
      "name": "MessageDetailsResponse",
      "description": "Detailed information on a message",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "example": "1234",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the message was sent",
          "example": 15551234567,
          "name": "from"
        },
        {
          "type": "array",
          "description": "List of phone numbers in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format to which the message was sent",
          "example": 15551234567,
          "items": {
            "type": "string"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Text of a message, maximum number of characters is 1000",
          "example": "Hello, World!",
          "name": "text"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time when this is message was created.",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time when this message was last updated.",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Current status of a message",
          "example": "Queued",
          "enum": [
            "Queued",
            "Delivered",
            "Sent",
            "SendingFailed",
            "DeliveryFailed"
          ],
          "name": "messageStatus"
        },
        {
          "type": "integer",
          "description": "Number of segments of a message",
          "format": "int64",
          "example": 1,
          "name": "segmentCount"
        },
        {
          "type": "number",
          "description": "Cost of a message",
          "format": "double",
          "example": 0.007,
          "name": "cost"
        },
        {
          "type": "string",
          "description": "The batch in which the message was submitted",
          "example": "batch12345",
          "name": "batchId"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Indicates whether the message is outbound or inbound",
          "example": "out",
          "name": "direction"
        },
        {
          "type": "string",
          "description": "RC error code of the message sending failure reason",
          "example": "SMS-RC-503",
          "name": "errorCode"
        }
      ]
    },
    {
      "name": "MessageListResponse",
      "description": "List of messages retrieved for an account and other filter criteria such as `batchId` and `fromPhoneNumber` specified in the request",
      "fields": [
        {
          "type": "array",
          "description": "An array containing individual messages",
          "items": {
            "$ref": "MessageListMessageResponse"
          },
          "name": "records"
        },
        {
          "$ref": "PagingResource",
          "name": "paging"
        }
      ]
    },
    {
      "name": "MessageListMessageResponse",
      "description": "Infomation on a message returned within the specified batch",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message",
          "format": "int64",
          "example": 1234,
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of a batch the message was submitted in",
          "example": "12345",
          "name": "batchId"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the message is sent",
          "example": 15551234567,
          "name": "from"
        },
        {
          "type": "array",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format to which a message is sent",
          "example": 15551234567,
          "items": {
            "type": "string"
          },
          "name": "to"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the message was created",
          "name": "creationTime"
        },
        {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the messages was last updated",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Current status of a message",
          "example": "Queued",
          "enum": [
            "Queued",
            "Delivered",
            "Sent",
            "SendingFailed",
            "DeliveryFailed"
          ],
          "name": "messageStatus"
        },
        {
          "type": "integer",
          "description": "Number of segments of a message",
          "format": "int64",
          "example": 1,
          "name": "segmentCount"
        },
        {
          "type": "string",
          "description": "Text of a message. Returned if the `view` parameter is set to 'Detailed'",
          "name": "text"
        },
        {
          "type": "number",
          "description": "Cost of a message",
          "format": "double",
          "example": 0.007,
          "name": "cost"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "description": "Indicates whether the message was outbound or inbound",
          "example": "out",
          "name": "direction"
        },
        {
          "type": "string",
          "description": "The RC error code of the message sending failure reason",
          "example": "SMS-RC-503",
          "name": "errorCode"
        }
      ]
    },
    {
      "name": "OptOutListResponse",
      "description": "Opt-out phone numbers information",
      "fields": [
        {
          "type": "array",
          "description": "List of individual opt-out number records",
          "items": {
            "$ref": "OptOutResponse"
          },
          "name": "records"
        },
        {
          "$ref": "PagingResource",
          "name": "paging"
        }
      ]
    },
    {
      "name": "OptOutResponse",
      "description": "Opt-out record",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format from which the recipient has opted out",
          "example": 15551234567,
          "name": "from"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format which is opted out",
          "example": 15551234567,
          "name": "to"
        }
      ]
    },
    {
      "name": "PagingResource",
      "description": "Pagination details",
      "fields": [
        {
          "type": "string",
          "description": "Page token of the current response list",
          "example": "pgt1",
          "name": "pageToken"
        },
        {
          "type": "integer",
          "description": "Number of records per page",
          "example": 3,
          "name": "perPage"
        },
        {
          "type": "string",
          "description": "First page token of the current filter criteria",
          "example": "fpgt1",
          "name": "firstPageToken"
        },
        {
          "type": "string",
          "description": "Previous page token of the current filter criteria",
          "example": "lpgt1",
          "name": "previousPageToken"
        },
        {
          "type": "string",
          "description": "Next page token of the current filter criteria",
          "example": "npgt1",
          "name": "nextPageToken"
        }
      ]
    },
    {
      "name": "ASGErrorResponse",
      "description": "Error response",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Human-readable description of an error. Not suitable for end users",
          "example": "AccountId 1234 is invalid",
          "name": "description"
        }
      ]
    },
    {
      "name": "UserCallLogResponse",
      "fields": [
        {
          "type": "array",
          "description": "List of call log records",
          "items": {
            "$ref": "UserCallLogRecord"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "CallLogNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "CallLogPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CallLogSync",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of call log records with sync information",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of call log records with synchronization information. For ISync the total number of returned records is limited to 250; this includes both new records and the old ones, specified by the recordCount parameter",
          "items": {
            "$ref": "UserCallLogRecord"
          },
          "name": "records"
        },
        {
          "$ref": "SyncInfoCallLog",
          "name": "syncInfo"
        }
      ]
    },
    {
      "name": "UserCallLogRecord",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a cal log record",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a call log record",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId"
        },
        {
          "$ref": "CallLogCallerInfo",
          "name": "from"
        },
        {
          "$ref": "CallLogCallerInfo",
          "name": "to"
        },
        {
          "$ref": "ExtensionInfoCallLog",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Call type",
          "enum": [
            "Voice",
            "Fax"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "For 'Detailed' view only. Call transport",
          "enum": [
            "PSTN",
            "VoIP"
          ],
          "name": "transport"
        },
        {
          "type": "array",
          "description": "For 'Detailed' view only. Leg description",
          "items": {
            "$ref": "CallLogRecordLegInfo"
          },
          "name": "legs"
        },
        {
          "$ref": "BillingInfo",
          "name": "billing"
        },
        {
          "type": "string",
          "description": "Call direction",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "$ref": "CallLogRecordMessage",
          "name": "message"
        },
        {
          "type": "string",
          "description": "The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z",
          "name": "startTime"
        },
        {
          "$ref": "DelegateInfo",
          "name": "delegate"
        },
        {
          "type": "boolean",
          "description": "Indicates whether the record is deleted. Returned for deleted records, for ISync requests",
          "name": "deleted"
        },
        {
          "type": "integer",
          "description": "Call duration in seconds",
          "name": "duration"
        },
        {
          "type": "string",
          "description": "For 'Detailed' view only. The datetime when the call log record was modified in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "$ref": "CallLogRecordingInfo",
          "name": "recording"
        },
        {
          "type": "boolean",
          "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false",
          "name": "shortRecording"
        },
        {
          "type": "string",
          "description": "Action description of the call operation",
          "enum": [
            "Unknown",
            "Phone Login",
            "Calling Card",
            "VoIP Call",
            "Phone Call",
            "Paging",
            "Hunting",
            "Call Park",
            "Monitoring",
            "Text Relay",
            "External Application",
            "Park Location",
            "CallOut-CallMe",
            "Conference Call",
            "Move",
            "RC Meetings",
            "Accept Call",
            "FindMe",
            "FollowMe",
            "RingMe",
            "Transfer",
            "Call Return",
            "Ring Directly",
            "RingOut Web",
            "RingOut PC",
            "RingOut Mobile",
            "Emergency",
            "E911 Update",
            "Support",
            "Incoming Fax",
            "Outgoing Fax"
          ],
          "name": "action"
        },
        {
          "type": "string",
          "description": "Status description of the call operation",
          "enum": [
            "Unknown",
            "Accepted",
            "Call connected",
            "In Progress",
            "Voicemail",
            "Reply",
            "Missed",
            "Busy",
            "Rejected",
            "No Answer",
            "Hang Up",
            "Blocked",
            "Suspended account",
            "Call Failed",
            "Call Failure",
            "Internal Error",
            "IP Phone Offline",
            "No Calling Credit",
            "Not Allowed",
            "Restricted Number",
            "Wrong Number",
            "Answered Not Accepted",
            "Stopped",
            "International Disabled",
            "International Restricted",
            "Abandoned",
            "Declined",
            "Received",
            "Fax on Demand",
            "Partial Receive",
            "Receive Error",
            "Fax Receipt Error",
            "Sent",
            "Fax Partially Sent",
            "Send Error",
            "Fax Not Sent",
            "Fax Poor Line"
          ],
          "name": "result"
        },
        {
          "type": "string",
          "description": "Reason of a call result:\n * `Accepted` - The call was connected to and accepted by this number\n * `Connected` - The call was answered, but there was no response on how to handle the call (for example, a voice mail system answered the call and did not push \"1\" to accept)\n * `Line Busy` - The phone number you dialed was busy\n * `Not Answered` - The phone number you dialed was not answered\n * `No Answer` - You did not answer the call\n * `Hang Up` - The caller hung up before the call was answered\n * `Stopped` - This attempt was stopped because the call was answered by another phone\n * `Internal Error` - An internal error occurred when making the call. Please try again\n * `No Credit` - There was not enough Calling Credit on your account to make this call\n * `Restricted Number` - The number you dialed is restricted by RingCentral\n * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone number. Please check the number and try again\n * `International Disabled` - International calling is not enabled on your account. Contact customer service to activate International Calling\n * `International Restricted` - The country and/or area you attempted to call has been prohibited by your administrator\n * `Bad Number` - An error occurred when making the call. Please check the number before trying again\n * `Info 411 Restricted` - Calling to 411 Information Services is restricted\n * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer service at <(888) 555-1212>\n * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet connection\n * `Failed Try Again` - Call failed. Please try again\n * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit\n * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other Phone has reached its limit. Please contact customer service\n * `Calls Not Accepted` - Your account was not accepting calls at this time\n * `Number Not Allowed` - The number that was dialed to access your account is not allowed\n * `Number Blocked` - This number is in your Blocked Numbers list\n * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by your administrator\n * `Resource Error` - An error occurred when making the call. Please try again\n * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please check that you are not forwarding calls back to your own account\n * `Fax Not Received` - An incoming fax could not be received because a proper connection with the sender's fax machine could not be established\n * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone line quality to poor to maintain the connection or the call was dropped\n * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the receiving fax machine\n * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too poor to send the fax\n * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again\n * `Fax Save Error` - An internal error occurred when saving the fax. Please try again\n * `Fax Send Error` - An error occurred when sending the fax. Please try again\n",
          "enum": [
            "Accepted",
            "Connected",
            "line Busy",
            "Not Answered",
            "No Answer",
            "Hang Up",
            "Stopped",
            "Internal Error",
            "No Credit",
            "Restricted Number",
            "Wrong Number",
            "International Disabled",
            "International Restricted",
            "Bad Number",
            "Info 411 Restricted",
            "Customer 611 Restricted",
            "No Digital Line",
            "Failed Try Again",
            "Max Call Limit",
            "Too Many Calls",
            "Calls Not Accepted",
            "Number Not Allowed",
            "Number Blocked",
            "Number Disabled",
            "Resource Error",
            "Call Loop",
            "Fax Not Received",
            "Fax Partially Sent",
            "Fax Not Sent",
            "Fax Poor Line",
            "Fax Prepare Error",
            "Fax Save Error",
            "Fax Send Error"
          ],
          "name": "reason"
        },
        {
          "type": "string",
          "name": "reasonDescription"
        }
      ]
    },
    {
      "name": "CompanyActiveCallsResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of company active call records",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of call log records",
          "items": {
            "$ref": "CompanyCallLogRecord"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "CallLogNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "CallLogPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "UserActiveCallsResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of user active call records",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of call log records",
          "items": {
            "$ref": "UserCallLogRecord"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "CallLogNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "CallLogPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "BillingInfo",
      "description": "Billing information related to the call. Returned for 'Detailed' view only",
      "fields": [
        {
          "type": "number",
          "description": "Cost per minute, paid and already included in your RingCentral Plan. For example International Calls",
          "name": "costIncluded"
        },
        {
          "type": "number",
          "description": "Cost per minute, paid and not included in your RingCentral Plan",
          "name": "costPurchased"
        }
      ]
    },
    {
      "name": "AccountCallLogResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of company call log records",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of call log records",
          "items": {
            "$ref": "CompanyCallLogRecord"
          },
          "name": "records"
        },
        {
          "$ref": "CallLogNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "CallLogPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "GetCallRecordingResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call recording",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a call recording binary content",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Call recording file format. Supported format is audio/x-wav",
          "name": "contentType"
        },
        {
          "type": "integer",
          "description": "Recorded call duration",
          "name": "duration"
        }
      ]
    },
    {
      "name": "DelegateInfo",
      "fields": [
        {
          "$ref": "DelegateExtensionInfo",
          "name": "extension"
        },
        {
          "type": "boolean",
          "description": "Specifies whether secretary user is permitted to pickup calls on behalf of boss user role",
          "name": "callPickup"
        },
        {
          "type": "boolean",
          "description": "Specifies whether secretary user is permitted to organize conference on behalf of boss user role",
          "name": "conferencing"
        },
        {
          "type": "object",
          "$ref": "ConferencingSettingsInfo",
          "name": "conferencingSettings"
        },
        {
          "type": "array",
          "description": "List of the delegate users for the current boss user",
          "items": {
            "type": "string"
          },
          "name": "delegateIds"
        }
      ]
    },
    {
      "name": "CallLogRecordMessage",
      "description": "Linked message (Fax/Voicemail)",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of a message",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Link to a message resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "SyncInfoCallLog",
      "description": "Sync information (type, token and time)",
      "fields": [
        {
          "type": "string",
          "description": "Type of synchronization",
          "enum": [
            "FSync",
            "ISync"
          ],
          "name": "syncType"
        },
        {
          "type": "string",
          "description": "Synchronization token",
          "name": "syncToken"
        },
        {
          "type": "string",
          "description": "The last synchronization datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "syncTime"
        }
      ]
    },
    {
      "name": "CallLogCallerInfo",
      "description": "Information on caller ('from') or callee ('to')",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        },
        {
          "$ref": "CallLogRecordDeviceInfo",
          "name": "device"
        }
      ]
    },
    {
      "name": "CallLogRecordingInfo",
      "description": "Call recording data. Returned if the call is recorded - `withRecording` parameter is set to 'True' in this case",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the call recording",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to the call recording metadata resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Indicates recording mode used",
          "enum": [
            "Automatic",
            "OnDemand"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Link to the call recording binary content",
          "name": "contentUri"
        }
      ]
    },
    {
      "name": "CallLogRecordDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "string to a device",
          "name": "uri"
        }
      ]
    },
    {
      "name": "CallLogNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "CallLogNavigationInfoURI",
          "name": "firstPage"
        },
        {
          "$ref": "CallLogNavigationInfoURI",
          "name": "nextPage"
        },
        {
          "$ref": "CallLogNavigationInfoURI",
          "name": "previousPage"
        }
      ]
    },
    {
      "name": "CallLogPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "CallLogNavigationInfoURI",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "CallLogRecordLegInfo",
      "fields": [
        {
          "type": "string",
          "description": "Action description of the call operation",
          "enum": [
            "Unknown",
            "Phone Call",
            "Phone Login",
            "Incoming Fax",
            "Accept Call",
            "External Application",
            "FindMe",
            "FollowMe",
            "Outgoing Fax",
            "CallOut-CallMe",
            "Call Return",
            "Calling Card",
            "Monitoring",
            "Ring Directly",
            "RingOut Web",
            "Text Relay",
            "VoIP Call",
            "RingOut PC",
            "RingMe",
            "Transfer",
            "411 Info",
            "Emergency",
            "E911 Update",
            "Support",
            "RingOut Mobile",
            "MeetingsCall",
            "SilentMonitoring"
          ],
          "name": "action"
        },
        {
          "type": "string",
          "description": "Call direction",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "$ref": "BillingInfo",
          "name": "billing"
        },
        {
          "$ref": "DelegateInfo",
          "name": "delegate"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "integer",
          "description": "Call duration in seconds",
          "name": "duration"
        },
        {
          "$ref": "ExtensionInfoCallLog",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Leg type",
          "enum": [
            "SipForwarding",
            "ServiceMinus2",
            "ServiceMinus3",
            "PstnToSip",
            "Accept",
            "FindMe",
            "FollowMe",
            "TestCall",
            "FaxSent",
            "CallBack",
            "CallingCard",
            "RingDirectly",
            "RingOutWebToSubscriber",
            "RingOutWebToCaller",
            "SipToPstnMetered",
            "RingOutClientToSubscriber",
            "RingOutClientToCaller",
            "RingMe",
            "TransferCall",
            "SipToPstnUnmetered",
            "RingOutDeviceToSubscriber",
            "RingOutDeviceToCaller",
            "RingOutOneLegToCaller",
            "ExtensionToExtension",
            "CallPark",
            "PagingServer",
            "Hunting",
            "OutgoingFreeSpDl",
            "ParkLocation",
            "ConferenceCall",
            "MobileApp",
            "Monitoring",
            "MoveToConference",
            "Unknown"
          ],
          "name": "legType"
        },
        {
          "type": "string",
          "description": "The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Call type",
          "enum": [
            "Voice",
            "Fax"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Status description of the call operation",
          "enum": [
            "Unknown",
            "Accepted",
            "Call connected",
            "In Progress",
            "Voicemail",
            "Reply",
            "Missed",
            "Busy",
            "Rejected",
            "No Answer",
            "Hang Up",
            "Blocked",
            "Suspended account",
            "Call Failed",
            "Call Failure",
            "Internal Error",
            "IP Phone Offline",
            "No Calling Credit",
            "Not Allowed",
            "Restricted Number",
            "Wrong Number",
            "Answered Not Accepted",
            "Stopped",
            "International Disabled",
            "International Restricted",
            "Abandoned",
            "Declined",
            "Received",
            "Fax on Demand",
            "Partial Receive",
            "Receive Error",
            "Fax Receipt Error",
            "Sent",
            "Fax Partially Sent",
            "Send Error",
            "Fax Not Sent",
            "Fax Poor Line"
          ],
          "name": "result"
        },
        {
          "type": "string",
          "description": "Reason of a call result:\n * `Accepted` - The call was connected to and accepted by this number\n * `Connected` - The call was answered, but there was no response on how to handle the call (for example, a voice mail system answered the call and did not push \"1\" to accept)\n * `Line Busy` - The phone number you dialed was busy\n * `Not Answered` - The phone number you dialed was not answered\n * `No Answer` - You did not answer the call\n * `Hang Up` - The caller hung up before the call was answered\n * `Stopped` - This attempt was stopped because the call was answered by another phone\n * `Internal Error` - An internal error occurred when making the call. Please try again\n * `No Credit` - There was not enough Calling Credit on your account to make this call\n * `Restricted Number` - The number you dialed is restricted by RingCentral\n * `Wrong Number` - The number you dialed has either been disconnected or is not a valid phone number. Please check the number and try again\n * `International Disabled` - International calling is not enabled on your account. Contact customer service to activate International Calling\n * `International Restricted` - The country and/or area you attempted to call has been prohibited by your administrator\n * `Bad Number` - An error occurred when making the call. Please check the number before trying again\n * `Info 411 Restricted` - Calling to 411 Information Services is restricted\n * `Customer 611 Restricted` - 611 customer service is not supported. Please contact customer service at <(888) 555-1212>\n * `No Digital Line` - This DigitalLine was either not plugged in or did not have an internet connection\n * `Failed Try Again` - Call failed. Please try again\n * `Max Call Limit` - The number of simultaneous calls to your account has reached its limit\n * `Too Many Calls` - The number of simultaneous calls for per DigitalLine associated with Other Phone has reached its limit. Please contact customer service\n * `Calls Not Accepted` - Your account was not accepting calls at this time\n * `Number Not Allowed` - The number that was dialed to access your account is not allowed\n * `Number Blocked` - This number is in your Blocked Numbers list\n * `Number Disabled` - The phone number and/or area you attempted to call has been prohibited by your administrator\n * `Resource Error` - An error occurred when making the call. Please try again\n * `Call Loop` - A call loop occurred due to an incorrect call forwarding configuration. Please check that you are not forwarding calls back to your own account\n * `Fax Not Received` - An incoming fax could not be received because a proper connection with the sender's fax machine could not be established\n * `Fax Partially Sent` - The fax was only partially sent. Possible explanations include phone line quality to poor to maintain the connection or the call was dropped\n * `Fax Not Sent` - An attempt to send the fax was made, but could not connect with the receiving fax machine\n * `Fax Poor Line` - An attempt to send the fax was made, but the phone line quality was too poor to send the fax\n * `Fax Prepare Error` - An internal error occurred when preparing the fax. Please try again\n * `Fax Save Error` - An internal error occurred when saving the fax. Please try again\n * `Fax Send Error` - An error occurred when sending the fax. Please try again \n",
          "enum": [
            "Accepted",
            "Connected",
            "line Busy",
            "Not Answered",
            "No Answer",
            "Hang Up",
            "Stopped",
            "Internal Error",
            "No Credit",
            "Restricted Number",
            "Wrong Number",
            "International Disabled",
            "International Restricted",
            "Bad Number",
            "Info 411 Restricted",
            "Customer 611 Restricted",
            "No Digital Line",
            "Failed Try Again",
            "Max Call Limit",
            "Too Many Calls",
            "Calls Not Accepted",
            "Number Not Allowed",
            "Number Blocked",
            "Number Disabled",
            "Not Allowed",
            "Resource Error",
            "Call Loop",
            "Fax Not Received",
            "Fax Partially Sent",
            "Fax Not Sent",
            "Fax Poor Line",
            "Fax Prepare Error",
            "Fax Save Error",
            "Fax Send Error"
          ],
          "name": "reason"
        },
        {
          "type": "string",
          "name": "reasonDescription"
        },
        {
          "$ref": "CallLogCallerInfo",
          "name": "from"
        },
        {
          "$ref": "CallLogCallerInfo",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Call transport",
          "enum": [
            "PSTN",
            "VoIP"
          ],
          "name": "transport"
        },
        {
          "$ref": "CallLogRecordingInfo",
          "name": "recording"
        },
        {
          "type": "boolean",
          "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false",
          "name": "shortRecording"
        },
        {
          "type": "boolean",
          "description": "Returned for 'Detailed' call log. Specifies if the leg is master-leg",
          "name": "master"
        },
        {
          "$ref": "CallLogRecordMessage",
          "name": "message"
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId"
        }
      ]
    },
    {
      "name": "ExtensionInfoCallLog",
      "description": "Information on extension",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        }
      ]
    },
    {
      "name": "AccountCallLogSyncResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to account call log sync resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of call log records with synchronization information. For 'ISync' the total number of returned records is limited to 250; this includes both new records and the old ones, specified by the recordCount parameter",
          "items": {
            "$ref": "CompanyCallLogRecord"
          },
          "name": "records"
        },
        {
          "$ref": "CompanyCallLogSyncInfo",
          "name": "syncInfo"
        }
      ]
    },
    {
      "name": "CompanyCallLogRecord",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a cal log record",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a call log record",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "sessionId"
        },
        {
          "$ref": "ExtensionInfoCallLog",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Telephony identifier of a call session",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "description": "Call transport",
          "enum": [
            "PSTN",
            "VoIP"
          ],
          "name": "transport"
        },
        {
          "$ref": "CallLogCallerInfo",
          "name": "from"
        },
        {
          "$ref": "CallLogCallerInfo",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Call type",
          "enum": [
            "Voice",
            "Fax"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Call direction",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "$ref": "CallLogRecordMessage",
          "name": "message"
        },
        {
          "$ref": "DelegateInfo",
          "name": "delegate"
        },
        {
          "type": "boolean",
          "description": "Indicates whether the record is deleted. Returned for deleted records, for ISync requests",
          "name": "deleted"
        },
        {
          "type": "string",
          "description": "Action description of the call operation",
          "enum": [
            "Unknown",
            "Phone Login",
            "Calling Card",
            "VoIP Call",
            "Phone Call",
            "Paging",
            "Hunting",
            "Call Park",
            "Monitoring",
            "Text Relay",
            "External Application",
            "Park Location",
            "CallOut-CallMe",
            "Conference Call",
            "Move",
            "RC Meetings",
            "Accept Call",
            "FindMe",
            "FollowMe",
            "RingMe",
            "Transfer",
            "Call Return",
            "Ring Directly",
            "RingOut Web",
            "RingOut PC",
            "RingOut Mobile",
            "Emergency",
            "E911 Update",
            "Support",
            "Incoming Fax",
            "Outgoing Fax"
          ],
          "name": "action"
        },
        {
          "type": "string",
          "description": "Status description of the call operation",
          "enum": [
            "Unknown",
            "Accepted",
            "Call connected",
            "In Progress",
            "Voicemail",
            "Reply",
            "Missed",
            "Busy",
            "Rejected",
            "No Answer",
            "Hang Up",
            "Blocked",
            "Suspended account",
            "Call Failed",
            "Call Failure",
            "Internal Error",
            "IP Phone Offline",
            "No Calling Credit",
            "Restricted Number",
            "Wrong Number",
            "Answered Not Accepted",
            "Stopped",
            "International Disabled",
            "International Restricted",
            "Abandoned",
            "Declined",
            "Received",
            "Fax on Demand",
            "Partial Receive",
            "Receive Error",
            "Fax Receipt Error",
            "Sent",
            "Fax Partially Sent",
            "Send Error",
            "Fax Not Sent",
            "Fax Poor Line"
          ],
          "name": "result"
        },
        {
          "type": "string",
          "enum": [
            "Accepted",
            "Connected",
            "line Busy",
            "Not Answered",
            "No Answer",
            "Hang Up",
            "Stopped",
            "Internal Error",
            "No Credit",
            "Restricted Number",
            "Wrong Number",
            "International Disabled",
            "International Restricted",
            "Bad Number",
            "Info 411 Restricted",
            "Customer 611 Restricted",
            "No Digital Line",
            "Failed Try Again",
            "Max Call Limit",
            "Too Many Calls",
            "Calls Not Accepted",
            "Number Not Allowed",
            "Number Blocked",
            "Number Disabled",
            "Resource Error",
            "Call Loop",
            "Fax Not Received",
            "Fax Partially Sent",
            "Fax Not Sent",
            "Fax Poor Line",
            "Fax Prepare Error",
            "Fax Save Error",
            "Fax Send Error"
          ],
          "name": "reason"
        },
        {
          "type": "string",
          "name": "reasonDescription"
        },
        {
          "type": "string",
          "description": "The call start datetime in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "startTime"
        },
        {
          "type": "integer",
          "description": "Call duration in seconds",
          "name": "duration"
        },
        {
          "$ref": "CallLogRecordingInfo",
          "name": "recording"
        },
        {
          "type": "boolean",
          "description": "Indicates that the recording is too short and therefore wouldn't be returned. The flag is not returned if the value is false",
          "name": "shortRecording"
        },
        {
          "type": "array",
          "description": "For 'Detailed' view only. Leg description",
          "items": {
            "$ref": "CallLogRecordLegInfo"
          },
          "name": "legs"
        },
        {
          "$ref": "BillingInfo",
          "name": "billing"
        },
        {
          "type": "string",
          "description": "For 'Detailed' view only. The datetime when the call log record was modified in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "CompanyCallLogSyncInfo",
      "description": "Sync information (type, token and time)",
      "fields": [
        {
          "type": "string",
          "description": "Type of synchronization",
          "enum": [
            "FSync",
            "ISync"
          ],
          "name": "syncType"
        },
        {
          "type": "string",
          "description": "Synchronization token",
          "name": "syncToken"
        },
        {
          "type": "string",
          "description": "Time of last synchronization in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "syncTime"
        }
      ]
    },
    {
      "name": "CreateSipRegistrationResponse",
      "fields": [
        {
          "$ref": "SipRegistrationDeviceInfo",
          "name": "device",
          "required": false
        },
        {
          "type": "array",
          "description": "SIP settings for device",
          "items": {
            "$ref": "SIPInfoResponse"
          },
          "name": "sipInfo",
          "required": true
        },
        {
          "type": "array",
          "description": "SIP PSTN settings for device",
          "items": {
            "$ref": "SIPInfoResponse"
          },
          "name": "sipInfoPstn",
          "required": false
        },
        {
          "$ref": "SIPFlagsResponse",
          "name": "sipFlags",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "sipErrorCodes",
          "required": false
        }
      ]
    },
    {
      "name": "SipRegistrationDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a device resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a Device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device type",
          "enum": [
            "HardPhone",
            "SoftPhone",
            "OtherPhone",
            "Paging",
            "WebPhone"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'",
          "name": "sku"
        },
        {
          "type": "string",
          "enum": [
            "Online",
            "Offline"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Device name. Mandatory if ordering  SoftPhone or OtherPhone. Optional for  HardPhone. If not specified for HardPhone, then device  model  name is used as device  name ",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone (is returned only when the phone is shipped and provisioned); endpoint_id for softphone and mobile applications",
          "name": "serial"
        },
        {
          "type": "string",
          "description": "PC name for softphone",
          "name": "computerName"
        },
        {
          "$ref": "DeviceModelInfo",
          "name": "model"
        },
        {
          "$ref": "DeviceExtensionInfo",
          "name": "extension"
        },
        {
          "$ref": "DeviceEmergencyServiceAddressResource",
          "name": "emergencyServiceAddress"
        },
        {
          "$ref": "SipRegistrationDeviceEmergencyInfo",
          "name": "emergency"
        },
        {
          "$ref": "Shipping",
          "name": "shipping"
        },
        {
          "type": "array",
          "description": "Phone lines information",
          "items": {
            "$ref": "DevicePhoneLinesInfo"
          },
          "name": "phoneLines"
        },
        {
          "type": "integer",
          "description": "Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to identify the device to be ordered. EitherT? model  structure, or  boxBillingId  must be specified forT?HardPhone",
          "name": "boxBillingId"
        },
        {
          "type": "boolean",
          "description": "Supported only for devices assigned to Limited extensions. If true, enables users to log in to this phone as a common phone.",
          "name": "useAsCommonPhone"
        },
        {
          "type": "string",
          "description": "Pooling type of a deviceHost - device with standalone paid phone line which can be linked to Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']",
          "enum": [
            "Host",
            "Guest",
            "None"
          ],
          "name": "linePooling"
        },
        {
          "type": "boolean",
          "description": "Network location status. 'True' if the device is located in the configured corporate network (On-Net); 'False' for Off-Net location. Parameter is not returned if `EmergencyAddressAutoUpdate` feature is not enabled for the account/user, or if device network location is not determined",
          "name": "inCompanyNet"
        },
        {
          "$ref": "DeviceSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Datetime of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z",
          "name": "lastLocationReportTime"
        }
      ]
    },
    {
      "name": "SipRegistrationDeviceEmergencyInfo",
      "description": "Emergency response location settings of a device",
      "fields": [
        {
          "$ref": "DeviceEmergencyServiceAddressResource",
          "name": "address"
        },
        {
          "$ref": "SipRegistrationDeviceLocationInfo",
          "name": "location"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress` parameter is set to 'True'",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "description": "Ability to register new emergency address for a phone line using devices sharing this line or only main device (line owner)",
          "enum": [
            "MainDevice",
            "AnyDevice"
          ],
          "name": "addressEditableStatus"
        },
        {
          "type": "boolean",
          "description": "'True' if emergency address is required for the country of a phone line",
          "name": "addressRequired"
        },
        {
          "type": "boolean",
          "description": "'True' if out of country emergency address is not allowed for the country of a phone line",
          "name": "addressLocationOnly"
        }
      ]
    },
    {
      "name": "SipRegistrationDeviceLocationInfo",
      "description": "Company emergency response location details",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        }
      ]
    },
    {
      "name": "DeviceSiteInfo",
      "description": "Site data",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "DeviceModelInfo",
      "description": "HardPhone model information",
      "fields": [
        {
          "type": "string",
          "description": "Addon identifier. For HardPhones of certain types, which are compatible with this addon identifier",
          "name": "id",
          "required": false
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name",
          "required": false
        },
        {
          "type": "array",
          "description": "Addons description",
          "items": {
            "$ref": "DeviceAddonInfo"
          },
          "name": "addons",
          "required": true
        },
        {
          "type": "array",
          "description": "Device feature or multiple features supported",
          "items": {
            "type": "string",
            "enum": [
              "BLA",
              "Intercom",
              "Paging",
              "HELD"
            ]
          },
          "name": "features",
          "required": false
        }
      ]
    },
    {
      "name": "DeviceAddonInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "format": "int32",
          "name": "count"
        }
      ]
    },
    {
      "name": "DeviceExtensionInfo",
      "description": "Internal identifier of an extension the device should be assigned to",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to an extension resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "DeviceEmergencyServiceAddressResource",
      "description": "Address for emergency cases. The same emergency address is assigned to all the numbers of one device",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        }
      ]
    },
    {
      "name": "SIPFlagsResponse",
      "description": "SIP flags data",
      "fields": [
        {
          "type": "string",
          "description": "If 'True' VoIP calling feature is enabled",
          "enum": [
            "True",
            "False"
          ],
          "name": "voipFeatureEnabled"
        },
        {
          "type": "string",
          "description": "If 'True' the request is sent from IP address of a country blocked for VoIP calling",
          "enum": [
            "True",
            "False"
          ],
          "name": "voipCountryBlocked"
        },
        {
          "type": "string",
          "description": "If 'True' outbound calls are enabled",
          "enum": [
            "True",
            "False"
          ],
          "name": "outboundCallsEnabled"
        },
        {
          "type": "boolean",
          "name": "dscpEnabled"
        },
        {
          "type": "integer",
          "name": "dscpSignaling"
        },
        {
          "type": "integer",
          "name": "dscpVoice"
        },
        {
          "type": "integer",
          "name": "dscpVideo"
        }
      ]
    },
    {
      "name": "SIPInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "User credentials",
          "name": "username"
        },
        {
          "type": "string",
          "description": "User password",
          "name": "password"
        },
        {
          "type": "string",
          "description": "Identifier for SIP authorization",
          "name": "authorizationId"
        },
        {
          "type": "string",
          "description": "SIP domain",
          "name": "domain"
        },
        {
          "type": "string",
          "description": "SIP outbound proxy",
          "name": "outboundProxy"
        },
        {
          "type": "string",
          "description": "SIP outbound IPv6 proxy",
          "name": "outboundProxyIPv6"
        },
        {
          "type": "string",
          "description": "SIP outbound proxy backup",
          "name": "outboundProxyBackup"
        },
        {
          "type": "string",
          "description": "SIP outbound IPv6 proxy backup",
          "name": "outboundProxyIPv6Backup"
        },
        {
          "type": "string",
          "description": "Preferred transport. SIP info will be returned for this transport if supported",
          "enum": [
            "UDP",
            "TCP",
            "TLS",
            "WS",
            "WSS"
          ],
          "name": "transport"
        },
        {
          "type": "string",
          "description": "For TLS transport only Base64 encoded certificate",
          "name": "certificate"
        },
        {
          "type": "integer",
          "description": "The interval in seconds after which the app must try to switch back to primary proxy if it was previously switched to backup. If this parameter is not returned, the app must stay on backup proxy and try to switch to primary proxy after the next SIP-provision call.",
          "name": "switchBackInterval"
        }
      ]
    },
    {
      "name": "CreateSipRegistrationRequest",
      "fields": [
        {
          "$ref": "DeviceInfoRequest",
          "name": "device"
        },
        {
          "type": "array",
          "description": "SIP settings for device",
          "items": {
            "$ref": "SIPInfoRequest"
          },
          "name": "sipInfo"
        }
      ]
    },
    {
      "name": "DeviceInfoRequest",
      "description": "Device information",
      "fields": [
        {
          "type": "string",
          "description": "Device unique identifier, retrieved at previous session (if any)",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Supported for iOS devices only. Certificate name (used by iOS applications for APNS subscription)",
          "name": "appExternalId"
        },
        {
          "type": "string",
          "description": "Supported for SoftPhone only. Computer name",
          "name": "computerName"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone; `endpoint_id` for softphone and mobile applications. Returned only when the phone is shipped and provisioned",
          "name": "serial"
        }
      ]
    },
    {
      "name": "SIPInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Supported transport. SIP info will be returned for this transport if supported",
          "enum": [
            "UDP",
            "TCP",
            "TLS",
            "WS",
            "WSS"
          ],
          "name": "transport"
        }
      ]
    },
    {
      "name": "DevicePhoneLinesInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone line",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of phone line",
          "enum": [
            "Standalone",
            "StandaloneFree",
            "BlaPrimary",
            "BlaSecondary"
          ],
          "name": "lineType"
        },
        {
          "$ref": "DevicePhoneLinesEmergencyAddressInfo",
          "name": "emergencyAddress"
        },
        {
          "$ref": "DevicePhoneNumberInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "DevicePhoneLinesEmergencyAddressInfo",
      "fields": [
        {
          "type": "boolean",
          "description": " 'True' if specifying of emergency address is required",
          "name": "required"
        },
        {
          "type": "boolean",
          "description": " 'True' if only local emergency address can be specified",
          "name": "localOnly"
        }
      ]
    },
    {
      "name": "DevicePhoneNumberInfo",
      "description": "Phone number information",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "$ref": "DevicePhoneNumberCountryInfo",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system = ['External', 'TollFree', 'Local']",
          "enum": [
            "External",
            "TollFree",
            "Local"
          ],
          "name": "paymentType"
        },
        {
          "maxLength": 128,
          "minLength": 0,
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "enum": [
            "CompanyNumber",
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber"
          ],
          "name": "usageType"
        },
        {
          "type": "string",
          "description": "Type of a phone number",
          "enum": [
            "VoiceFax",
            "FaxOnly",
            "VoiceOnly"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "DevicePhoneNumberCountryInfo",
      "description": "Brief information on a phone number country",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a home country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a home country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Official name of a home country",
          "name": "name"
        }
      ]
    },
    {
      "name": "Shipping",
      "description": "Shipping information, according to which devices (in case of HardPhone ) or e911 stickers (in case of SoftPhone and OtherPhone ) will be delivered to the customer",
      "fields": [
        {
          "$ref": "DeviceEmergencyServiceAddressResource",
          "name": "address"
        },
        {
          "$ref": "MethodResource",
          "name": "method"
        },
        {
          "type": "string",
          "name": "status"
        },
        {
          "type": "string",
          "name": "carrier"
        },
        {
          "type": "string",
          "name": "trackingNumber"
        }
      ]
    },
    {
      "name": "MethodResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "CustomFieldsResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CustomFieldResource",
      "fields": [
        {
          "type": "string",
          "description": "Custom field identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Object category to attach custom fields",
          "enum": [
            "User"
          ],
          "name": "category"
        },
        {
          "type": "string",
          "description": "Custom field display name",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "CustomFieldCreateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Object category to attach custom fields",
          "enum": [
            "User"
          ],
          "name": "category"
        },
        {
          "type": "string",
          "description": "Custom field display name",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "CustomFieldUpdateRequest",
      "fields": [
        {
          "type": "string",
          "description": "Custom field display name",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "GetDeviceInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a device",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'",
          "name": "sku"
        },
        {
          "type": "string",
          "description": "Device type",
          "default": "HardPhone",
          "enum": [
            "BLA",
            "SoftPhone",
            "OtherPhone",
            "HardPhone",
            "WebPhone",
            "Paging"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Device name. Mandatory if ordering  SoftPhone  or  OtherPhone. Optional for  HardPhone. If not specified for HardPhone, then device model name is used as device name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone (is returned only when the phone is shipped and provisioned); endpoint_id for softphone and mobile applications",
          "name": "serial"
        },
        {
          "type": "string",
          "description": "Device status",
          "enum": [
            "Offline",
            "Online"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "PC name for softphone",
          "name": "computerName"
        },
        {
          "$ref": "ModelInfo",
          "name": "model"
        },
        {
          "$ref": "ExtensionInfoIntId",
          "name": "extension"
        },
        {
          "$ref": "DeviceEmergencyInfo",
          "name": "emergency"
        },
        {
          "$ref": "EmergencyServiceAddressResource",
          "name": "emergencyServiceAddress"
        },
        {
          "type": "array",
          "description": "Phone lines information",
          "items": {
            "$ref": "PhoneLinesInfo"
          },
          "name": "phoneLines"
        },
        {
          "$ref": "ShippingInfo",
          "name": "shipping"
        },
        {
          "type": "integer",
          "description": "Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to identify the device to be ordered. EitherT? model  structure, or  boxBillingId  must be specified forT?HardPhone",
          "name": "boxBillingId"
        },
        {
          "type": "boolean",
          "description": "Supported only for devices assigned to Limited extensions. If true, enables users to log in to this phone as a common phone.",
          "name": "useAsCommonPhone"
        },
        {
          "type": "boolean",
          "description": "Network location status. 'True' if the device is located in the configured corporate network (On-Net); 'False' for Off-Net location. Parameter is not returned if `EmergencyAddressAutoUpdate` feature is not enabled for the account/user, or if device network location is not determined",
          "name": "inCompanyNet"
        },
        {
          "$ref": "DeviceSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Datetime of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z",
          "name": "lastLocationReportTime"
        },
        {
          "type": "string",
          "description": "Pooling type of a deviceHost - device with standalone paid phone line which can be linked to Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']",
          "enum": [
            "Host",
            "Guest",
            "None"
          ],
          "name": "linePooling"
        },
        {
          "$ref": "BillingStatementInfo",
          "name": "billingStatement"
        }
      ]
    },
    {
      "name": "BillingStatementInfo",
      "description": "Billing information. Returned for device update request if `prestatement` query parameter is set to 'true'",
      "fields": [
        {
          "type": "string",
          "description": "Currency code complying with [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217) standard",
          "name": "currency"
        },
        {
          "type": "array",
          "items": {
            "$ref": "BillingStatementCharges"
          },
          "name": "charges"
        },
        {
          "type": "array",
          "items": {
            "$ref": "BillingStatementFees"
          },
          "name": "fees"
        },
        {
          "type": "number",
          "name": "totalCharged"
        },
        {
          "type": "number",
          "name": "totalCharges"
        },
        {
          "type": "number",
          "name": "totalFees"
        },
        {
          "type": "number",
          "name": "subtotal"
        },
        {
          "type": "number",
          "name": "totalFreeServiceCredit"
        }
      ]
    },
    {
      "name": "BillingStatementCharges",
      "fields": [
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "number",
          "name": "amount"
        },
        {
          "type": "string",
          "name": "feature"
        },
        {
          "type": "number",
          "name": "freeServiceCredit"
        }
      ]
    },
    {
      "name": "BillingStatementFees",
      "fields": [
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "number",
          "name": "amount"
        },
        {
          "type": "number",
          "name": "freeServiceCredit"
        }
      ]
    },
    {
      "name": "ModelInfo",
      "description": "HardPhone model information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a HardPhone device model",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Addons description",
          "items": {
            "$ref": "AddonInfo"
          },
          "name": "addons"
        },
        {
          "type": "array",
          "description": "Device feature or multiple features supported",
          "items": {
            "type": "string",
            "enum": [
              "BLA",
              "CommonPhone",
              "Intercom",
              "Paging",
              "HELD"
            ]
          },
          "name": "features"
        },
        {
          "type": "integer",
          "description": "Max supported count of phone lines",
          "name": "lineCount"
        }
      ]
    },
    {
      "name": "AddonInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "integer",
          "name": "count"
        }
      ]
    },
    {
      "name": "EmergencyAddress",
      "fields": [
        {
          "type": "boolean",
          "description": " 'True' if specifying of emergency address is required",
          "name": "required"
        },
        {
          "type": "boolean",
          "description": " 'True' if only local emergency address can be specified",
          "name": "localOnly"
        }
      ]
    },
    {
      "name": "DeviceEmergencyAddress",
      "fields": [
        {
          "type": "string",
          "description": "Name of a customer",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "Street address, line 1 - street address, P.O. box, company name, c/o",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Street address, line 2 - apartment, suite, unit, building, floor, etc.",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Zip code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        }
      ]
    },
    {
      "name": "PhoneLinesInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone line",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Type of phone line",
          "enum": [
            "Standalone",
            "StandaloneFree",
            "BlaPrimary",
            "BlaSecondary"
          ],
          "name": "lineType"
        },
        {
          "$ref": "PhoneNumberInfoIntId",
          "name": "phoneInfo"
        },
        {
          "$ref": "EmergencyAddress",
          "name": "emergencyAddress"
        }
      ]
    },
    {
      "name": "ShippingInfo",
      "description": "Shipping information, according to which devices (in case of  HardPhone ) or e911 stickers (in case of  SoftPhone  and  OtherPhone ) will be delivered to the customer",
      "fields": [
        {
          "type": "string",
          "description": "Shipping status of the order item. It is set to 'Initial' when the order is submitted. Then it is changed to 'Accepted' when a distributor starts processing the order. Finally the status is changed to 'Shipped' which means that distributor shipped the device.",
          "enum": [
            "Initial",
            "Accepted",
            "Shipped",
            "Won't ship"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Shipping carrier name. Appears only if the device status is 'Shipped'",
          "name": "carrier"
        },
        {
          "type": "string",
          "description": "Carrier-specific tracking number. Appears only if the device status is 'Shipped'",
          "name": "trackingNumber"
        },
        {
          "$ref": "MethodInfo",
          "name": "method"
        },
        {
          "$ref": "ShippingAddressInfo",
          "name": "address"
        }
      ]
    },
    {
      "name": "ShippingAddressInfo",
      "description": "Shipping address for the order. If it coincides with the Emergency Service Address, then can be omitted. By default the same value as the emergencyServiceAddress. Multiple addresses can be specified; in case the order contains several devices, they can be delivered to different addresses",
      "fields": [
        {
          "type": "string",
          "description": "Name of a primary contact person (receiver)",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "Name of an additional contact person. Should be specified for countries except the US, Canada, the UK and Australia.",
          "name": "additionalCustomerName"
        },
        {
          "type": "string",
          "description": "Email of a primary contact person (receiver). Should be specified for countries except the US, Canada, the UK and Australia.",
          "name": "customerEmail"
        },
        {
          "type": "string",
          "description": "Email of an additional contact person. Should be specified for countries except the US, Canada, the UK and Australia.",
          "name": "additionalCustomerEmail"
        },
        {
          "type": "string",
          "description": "Phone number of a primary contact person (receiver). Should be specified for countries except the US, Canada, the UK and Australia",
          "name": "customerPhone"
        },
        {
          "type": "string",
          "description": "Phone number of an additional contact person. Should be specified for countries except the US, Canada, the UK & Australia.",
          "name": "additionalCustomerPhone"
        },
        {
          "type": "string",
          "description": "Street address, line 1 - street address, P.O. box, company name, c/o",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Street address, line 2 - apartment, suite, unit, building, floor, etc.",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "Zip code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "National taxpayer identification number. Should be specified for Brazil (CNPJ/CPF number) and Argentina (CUIT number).",
          "name": "taxId"
        }
      ]
    },
    {
      "name": "MethodInfo",
      "description": "Shipping method information",
      "fields": [
        {
          "type": "string",
          "description": "Method identifier. The default value is 1 (Ground)",
          "enum": [
            "1",
            "2",
            "3"
          ],
          "name": "id"
        },
        {
          "type": "string",
          "description": "Method name, corresponding to the identifier",
          "enum": [
            "Ground",
            "2 Day",
            "Overnight"
          ],
          "name": "name"
        }
      ]
    },
    {
      "name": "GetExtensionDevicesResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of extension devices",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of extension devices",
          "items": {
            "$ref": "ExtensionDeviceResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "DeviceProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "DeviceProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionDeviceResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a device",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'",
          "name": "sku"
        },
        {
          "type": "string",
          "description": "Device type",
          "default": "HardPhone",
          "enum": [
            "SoftPhone",
            "OtherPhone",
            "HardPhone",
            "Paging"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Device name. Mandatory if ordering  SoftPhone  or  OtherPhone. Optional for  HardPhone. If not specified for HardPhone, then device model name is used as device name ",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Device status",
          "enum": [
            "Offline",
            "Online"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone (is returned only when the phone is shipped and provisioned); endpoint_id for softphone and mobile applications",
          "name": "serial"
        },
        {
          "type": "string",
          "description": "PC name for softphone",
          "name": "computerName"
        },
        {
          "$ref": "ModelInfo",
          "name": "model"
        },
        {
          "$ref": "ExtensionInfoIntId",
          "name": "extension"
        },
        {
          "$ref": "EmergencyServiceAddressResource",
          "name": "emergencyServiceAddress"
        },
        {
          "$ref": "DeviceEmergencyInfo",
          "name": "emergency"
        },
        {
          "type": "array",
          "description": "Phone lines information",
          "items": {
            "$ref": "PhoneLinesInfo"
          },
          "name": "phoneLines"
        },
        {
          "$ref": "ShippingInfo",
          "name": "shipping"
        },
        {
          "type": "integer",
          "description": "Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to identify the device to be ordered. EitherT? model  structure, or  boxBillingId  must be specified forT?HardPhone",
          "name": "boxBillingId"
        },
        {
          "type": "boolean",
          "description": "Supported only for devices assigned to Limited extensions. If true, enables users to log in to this phone as a common phone.",
          "name": "useAsCommonPhone"
        },
        {
          "type": "string",
          "description": "Pooling type of a deviceHost - device with standalone paid phone line which can be linked to Glip/Softphone instanceGuest - device with a linked phone lineNone - device without a phone line or with specific line (free, BLA, etc.) = ['Host', 'Guest', 'None']",
          "enum": [
            "Host",
            "Guest",
            "None"
          ],
          "name": "linePooling"
        },
        {
          "type": "boolean",
          "description": "Network location status. 'True' if the device is located in the configured corporate network (On-Net); 'False' for Off-Net location. Parameter is not returned if `EmergencyAddressAutoUpdate` feature is not enabled for the account/user, or if device network location is not determined",
          "name": "inCompanyNet"
        },
        {
          "$ref": "DeviceSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Datetime of receiving last location report in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z",
          "name": "lastLocationReportTime"
        }
      ]
    },
    {
      "name": "DeviceProvisioningNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "DeviceProvisioningNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "DeviceProvisioningNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "DeviceProvisioningNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "DeviceProvisioningNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "DeviceProvisioningPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "DeviceProvisioningNavigationInfoUri",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "PhoneNumberInfoIntId",
      "description": "Phone number information",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a phone number",
          "format": "int64",
          "name": "id"
        },
        {
          "$ref": "PhoneNumberCountryInfo",
          "name": "country"
        },
        {
          "$ref": "DeviceProvisioningExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom user name of a phone number, if any",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Location (City, State). Filled for local US numbers",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system",
          "enum": [
            "External",
            "TollFree",
            "Local"
          ],
          "name": "paymentType"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is 'Normal', the phone number is ready to be used. Otherwise it is an external number not yet ported to RingCentral",
          "name": "status"
        },
        {
          "type": "string",
          "description": "Phone number type",
          "enum": [
            "VoiceFax",
            "FaxOnly",
            "VoiceOnly"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Usage type of the phone number",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber"
          ],
          "name": "usageType"
        }
      ]
    },
    {
      "name": "DeviceProvisioningExtensionInfo",
      "description": "Information on the extension, to which the phone number is assigned. Returned only for the request of Account phone number list",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding account ID/extension ID for each partner ID of a client application. In request URIs partner IDs are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding account IDs and extension IDs. In all request and response bodies these values are reflected via partnerId attributes of account and extension",
          "name": "partnerId"
        }
      ]
    },
    {
      "name": "ExtensionInfoIntId",
      "description": "This attribute can be omitted for unassigned devices",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding account ID/extension ID for each partner ID of a client application. In request URIs partner IDs are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding account IDs and extension IDs. In all request and response bodies these values are reflected via partnerId attributes of account and extension",
          "name": "partnerId"
        }
      ]
    },
    {
      "name": "PhoneNumberCountryInfo",
      "description": "Brief information on a phone number country",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a home country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a home country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Official name of a home country",
          "name": "name"
        }
      ]
    },
    {
      "name": "EmergencyServiceAddressResourceRequest",
      "description": "Address for emergency cases. The same emergency address is assigned to all numbers of a single device. If the emergency address is also specified in `emergency` resource, then this value is ignored",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        }
      ]
    },
    {
      "name": "EmergencyServiceAddressResource",
      "description": "Address for emergency cases. The same emergency address is assigned to all the numbers of one device",
      "fields": [
        {
          "type": "string",
          "name": "street"
        },
        {
          "type": "string",
          "name": "street2"
        },
        {
          "type": "string",
          "name": "city"
        },
        {
          "type": "string",
          "name": "zip"
        },
        {
          "type": "string",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/province name",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress` parameter is set to 'True'",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "description": "Name of an additional contact person. Should be specified for countries except the US, Canada, the UK and Australia.",
          "name": "additionalCustomerName"
        },
        {
          "type": "string",
          "description": "Email of a primary contact person (receiver). Should be specified for countries except the US, Canada, the UK and Australia.",
          "name": "customerEmail"
        },
        {
          "type": "string",
          "description": "Email of an additional contact person. Should be specified for countries except the US, Canada, the UK and Australia.",
          "name": "additionalCustomerEmail"
        },
        {
          "type": "string",
          "description": "Phone number of a primary contact person (receiver). Should be specified for countries except the US, Canada, the UK and Australia",
          "name": "customerPhone"
        },
        {
          "type": "string",
          "description": "Phone number of an additional contact person. Should be specified for countries except the US, Canada, the UK & Australia.",
          "name": "additionalCustomerPhone"
        },
        {
          "type": "string",
          "description": "Internal identifier of a tax",
          "name": "taxId"
        }
      ]
    },
    {
      "name": "PhoneNumberExtensionInfo",
      "description": "Information on an extension to which the phone number is assigned",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "maxLength": 128,
          "minLength": 0,
          "pattern": "^[\\p{Alnum}\\.\\-_]*$",
          "type": "string",
          "name": "partnerId"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "loginName"
        },
        {
          "$ref": "ExtensionContactInfo",
          "name": "contact"
        },
        {
          "type": "array",
          "items": {
            "$ref": "Reference"
          },
          "name": "references"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "Unknown",
            "User",
            "Department",
            "Announcement",
            "Voicemail",
            "DigitalUser",
            "VirtualUser",
            "FaxUser",
            "PagingOnly",
            "SharedLinesGroup",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "$ref": "StatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "array",
          "items": {
            "$ref": "DepartmentResource"
          },
          "name": "departments"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ServiceFeatureValue"
          },
          "name": "serviceFeatures"
        },
        {
          "$ref": "RegionalSettingsInfo",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed",
            "Unknown"
          ],
          "name": "setupWizardState"
        },
        {
          "$ref": "ExtensionPermissionsResource",
          "name": "permissions"
        },
        {
          "type": "string",
          "name": "password"
        },
        {
          "type": "string",
          "name": "ivrPin"
        },
        {
          "$ref": "ProfileImageResource",
          "name": "profileImage"
        }
      ]
    },
    {
      "name": "ProfileImageResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "etag"
        },
        {
          "type": "string",
          "name": "contentType"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "lastModified"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ScaledProfileImageResource"
          },
          "name": "scales"
        }
      ]
    },
    {
      "name": "ExtensionPermissionsResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "$ref": "Permission",
          "name": "admin"
        },
        {
          "$ref": "Permission",
          "name": "internationalCalling"
        },
        {
          "$ref": "Permission",
          "name": "freeSoftPhoneDigitalLine"
        }
      ]
    },
    {
      "name": "RegionalSettingsInfo",
      "fields": [
        {
          "$ref": "TimezoneResource",
          "name": "timezone"
        },
        {
          "$ref": "CountryResource",
          "name": "homeCountry"
        },
        {
          "$ref": "LanguageResource",
          "name": "language"
        },
        {
          "$ref": "LanguageResource",
          "name": "greetingLanguage"
        },
        {
          "$ref": "LanguageResource",
          "name": "formattingLocale"
        }
      ]
    },
    {
      "name": "StatusInfo",
      "fields": [
        {
          "type": "string",
          "name": "reason"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "till"
        },
        {
          "type": "string",
          "name": "comment"
        }
      ]
    },
    {
      "name": "ExtensionContactInfo",
      "fields": [
        {
          "type": "string",
          "description": "For User extension type only. Extension user first name",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "For User extension type only. Extension user last name",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Extension user company name",
          "name": "company"
        },
        {
          "type": "string",
          "description": "Email of extension user",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Extension user contact phone number",
          "name": "businessPhone"
        },
        {
          "$ref": "ContactAddressInfoDevices",
          "name": "businessAddress"
        }
      ]
    },
    {
      "name": "ContactAddressInfoDevices",
      "description": "Business address of extension user company",
      "fields": [
        {
          "type": "string",
          "description": "Country name of extension user company. Not returned for Address Book",
          "name": "country"
        },
        {
          "type": "string",
          "description": "State/province name of extension user company",
          "name": "state"
        },
        {
          "type": "string",
          "description": "City name of extension user company",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Street address of extension user company",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Zip code of extension user company",
          "name": "zip"
        }
      ]
    },
    {
      "name": "LanguageResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "localeCode"
        }
      ]
    },
    {
      "name": "CountryResource",
      "description": "Brief information on a phone number country",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "isoCode"
        },
        {
          "type": "string",
          "name": "callingCode"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "emergencyCalling"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "numberSelling"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "loginAllowed"
        }
      ]
    },
    {
      "name": "TimezoneResource",
      "description": "Timezone setting. For extension bulk assignment is configured automatically based on contact info setting",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "string",
          "name": "bias"
        }
      ]
    },
    {
      "name": "Permission",
      "fields": [
        {
          "type": "boolean",
          "default": false,
          "name": "enabled"
        }
      ]
    },
    {
      "name": "Reference",
      "fields": [
        {
          "type": "string",
          "enum": [
            "PartnerId",
            "CustomerDirectoryId"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "name": "ref"
        }
      ]
    },
    {
      "name": "ScaledProfileImageResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "DepartmentResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "ServiceFeatureValue",
      "fields": [
        {
          "type": "string",
          "name": "featureName"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "enabled"
        },
        {
          "type": "string",
          "enum": [
            "Available",
            "AccountTypeLimitation",
            "ExtensionTypeLimitation",
            "AccountLimitation",
            "ExtensionLimitation",
            "InsufficientPermissions",
            "ApplicationLimitation"
          ],
          "name": "reason"
        }
      ]
    },
    {
      "name": "AccountDeviceUpdate",
      "fields": [
        {
          "$ref": "EmergencyServiceAddressResourceRequest",
          "name": "emergencyServiceAddress"
        },
        {
          "$ref": "DeviceEmergencyInfo",
          "name": "emergency"
        },
        {
          "$ref": "DeviceUpdateExtensionInfo",
          "name": "extension"
        },
        {
          "$ref": "DeviceUpdatePhoneLinesInfo",
          "name": "phoneLines"
        },
        {
          "type": "boolean",
          "description": "Supported only for devices assigned to Limited extensions. If true, enables users to log in to this phone as a common phone.",
          "name": "useAsCommonPhone"
        }
      ]
    },
    {
      "name": "DeviceEmergencyInfo",
      "description": "Device emergency settings",
      "fields": [
        {
          "$ref": "DeviceEmergencyAddress",
          "name": "address"
        },
        {
          "$ref": "DeviceEmergencyLocationInfo",
          "name": "location"
        },
        {
          "type": "boolean",
          "description": "Specifies if emergency address is out of country",
          "name": "outOfCountry"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress` parameter is set to 'True'",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "NotRequired",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "description": "Ability to register new emergency address for a phone line using devices sharing this line or only main device (line owner)",
          "enum": [
            "MainDevice",
            "AnyDevice"
          ],
          "name": "addressEditableStatus"
        }
      ]
    },
    {
      "name": "DeviceEmergencyLocationInfo",
      "description": "Company emergency response location details",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the emergency response location",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Location name",
          "name": "name"
        }
      ]
    },
    {
      "name": "DeviceUpdateExtensionInfo",
      "description": "Information on extension that the device is assigned to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        }
      ]
    },
    {
      "name": "DeviceUpdatePhoneLinesInfo",
      "description": "Information on phone lines added to a device",
      "fields": [
        {
          "type": "array",
          "description": "Information on phone lines added to a device",
          "items": {
            "$ref": "UpdateDevicePhoneInfo"
          },
          "name": "phoneLines"
        }
      ]
    },
    {
      "name": "UpdateDevicePhoneInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone number",
          "name": "id"
        }
      ]
    },
    {
      "name": "ListMeetingRecordingsResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "MeetingRecording"
          },
          "name": "records"
        },
        {
          "$ref": "MeetingRecordingsPagingInfo",
          "name": "paging"
        },
        {
          "$ref": "MeetingRecordingsNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "MeetingRecording",
      "fields": [
        {
          "$ref": "MeetingInfo",
          "name": "meeting"
        },
        {
          "type": "array",
          "items": {
            "$ref": "MeetingRecordingInfo"
          },
          "name": "recording"
        }
      ]
    },
    {
      "name": "MeetingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of a meeting instance",
          "name": "uuid"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "topic"
        },
        {
          "type": "string",
          "name": "startTime"
        }
      ]
    },
    {
      "name": "MeetingRecordingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of a meeting instance",
          "name": "uuid"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link for downloading the recorded file (mp4, mp3 audio and text/plain chat file)",
          "name": "contentDownloadUri"
        },
        {
          "type": "string",
          "enum": [
            "video/mp4",
            "audio/m4a",
            "text/plain"
          ],
          "name": "contentType"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "size"
        },
        {
          "type": "string",
          "description": "Starting time of a recording",
          "name": "startTime"
        },
        {
          "type": "string",
          "description": "Ending time of a recording",
          "name": "endTime"
        },
        {
          "type": "string",
          "enum": [
            "Completed",
            "Processing"
          ],
          "name": "status"
        }
      ]
    },
    {
      "name": "MeetingRecordingsNavigationInfo",
      "fields": [
        {
          "$ref": "MeetingRecordingsNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "MeetingRecordingsNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "MeetingRecordingsNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "MeetingRecordingsNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "MeetingRecordingsNavigationInfoUri",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "MeetingRecordingsPagingInfo",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "AccountLockedSettingResponse",
      "fields": [
        {
          "$ref": "ScheduleUserMeetingInfo",
          "name": "scheduleMeeting"
        },
        {
          "$ref": "UserMeetingRecordingSetting",
          "name": "recording"
        },
        {
          "$ref": "TelephonyLockedSettings",
          "name": "telephony"
        }
      ]
    },
    {
      "name": "PublicMeetingInvitationResponse",
      "fields": [
        {
          "type": "string",
          "description": "Meeting invitation",
          "name": "invitation"
        }
      ]
    },
    {
      "name": "MeetingsResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "MeetingResponseResource"
          },
          "name": "records"
        },
        {
          "$ref": "MeetingsPagingInfo",
          "name": "paging"
        },
        {
          "$ref": "MeetingsNavigationInfo",
          "name": "navigation"
        }
      ]
    },
    {
      "name": "MeetingResponseResource",
      "fields": [
        {
          "type": "string",
          "description": "Link to a meeting resource",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Universally unique identifier of a meeting\"",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Internal identifier of a meeting",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Custom topic of a meeting",
          "name": "topic"
        },
        {
          "type": "string",
          "enum": [
            "Instant",
            "Scheduled",
            "ScheduledRecurring",
            "Recurring"
          ],
          "name": "meetingType"
        },
        {
          "type": "string",
          "description": "Meeting password",
          "name": "password"
        },
        {
          "type": "string",
          "name": "h323Password"
        },
        {
          "type": "string",
          "description": "Status of a meeting",
          "name": "status"
        },
        {
          "$ref": "MeetingLinks",
          "name": "links"
        },
        {
          "$ref": "MeetingScheduleResource",
          "name": "schedule"
        },
        {
          "$ref": "HostInfoRequest",
          "name": "host"
        },
        {
          "type": "boolean",
          "description": "If true, then participants can join the meeting before host arrives",
          "default": false,
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with host video on/off (true/false)",
          "default": false,
          "name": "startHostVideo"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with participant video on/off (true/false)",
          "default": false,
          "name": "startParticipantsVideo"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Phone",
              "ComputerAudio"
            ]
          },
          "name": "audioOptions"
        },
        {
          "$ref": "RecurrenceInfo",
          "name": "reccurence"
        },
        {
          "type": "string",
          "description": "Automatic record type",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "name": "autoRecordType"
        },
        {
          "type": "boolean",
          "description": "If true, then only signed-in users can join this meeting",
          "name": "enforceLogin"
        },
        {
          "type": "boolean",
          "description": "If true, then participants are muted on entry",
          "name": "muteParticipantsOnEntry"
        },
        {
          "type": "boolean",
          "description": "If true, then the waiting room for participants is enabled",
          "name": "enableWaitingRoom"
        },
        {
          "type": "array",
          "description": "List of global dial-in countries (eg. US, UK, AU, etc.)",
          "items": {
            "type": "string"
          },
          "name": "globalDialInCountries"
        }
      ]
    },
    {
      "name": "MeetingLinks",
      "description": "Meeting links",
      "fields": [
        {
          "type": "string",
          "name": "startUri"
        },
        {
          "type": "string",
          "name": "joinUri"
        }
      ]
    },
    {
      "name": "MeetingScheduleResource",
      "description": "Timing of a meeting",
      "fields": [
        {
          "type": "string",
          "name": "startTime"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "durationInMinutes"
        },
        {
          "$ref": "TimezoneResource",
          "name": "timeZone"
        }
      ]
    },
    {
      "name": "MeetingsNavigationInfo",
      "fields": [
        {
          "$ref": "MeetingsNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "MeetingsNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "MeetingsNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "MeetingsNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "MeetingsNavigationInfoUri",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        }
      ]
    },
    {
      "name": "MeetingRequestResource",
      "fields": [
        {
          "type": "string",
          "description": "Custom topic of a meeting",
          "name": "topic"
        },
        {
          "type": "string",
          "enum": [
            "Instant",
            "Scheduled",
            "ScheduledRecurring",
            "Recurring"
          ],
          "name": "meetingType"
        },
        {
          "$ref": "MeetingScheduleResource",
          "name": "schedule"
        },
        {
          "type": "string",
          "description": "Meeting password",
          "name": "password"
        },
        {
          "$ref": "HostInfoRequest",
          "name": "host"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "startHostVideo"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with participant video on/off (true/false)",
          "default": false,
          "name": "startParticipantsVideo"
        },
        {
          "type": "boolean",
          "description": "If true, then personal user's meeting ID is applied for creation of this meeting",
          "name": "usePersonalMeetingId"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Phone",
              "ComputerAudio"
            ]
          },
          "name": "audioOptions"
        },
        {
          "$ref": "RecurrenceInfo",
          "name": "recurrence"
        },
        {
          "type": "string",
          "description": "Automatic record type",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "name": "autoRecordType"
        },
        {
          "type": "boolean",
          "description": "If true, then only signed-in users can join this meeting",
          "name": "enforceLogin"
        },
        {
          "type": "boolean",
          "description": "If true, then participants are muted on entry",
          "name": "muteParticipantsOnEntry"
        },
        {
          "type": "boolean",
          "description": "If true, then the waiting room for participants is enabled",
          "name": "enableWaitingRoom"
        },
        {
          "type": "array",
          "description": "List of global dial-in countries (eg. US, UK, AU, etc.)",
          "items": {
            "type": "string"
          },
          "name": "globalDialInCountries"
        }
      ]
    },
    {
      "name": "RecurrenceInfo",
      "description": "Meeting recurrence information",
      "fields": [
        {
          "type": "string",
          "description": "Recurrence time frame",
          "enum": [
            "Daily",
            "Weekly",
            "Monthly"
          ],
          "name": "frequency"
        },
        {
          "type": "integer",
          "description": "Reccurence interval. The supported ranges are: 1-90 for `Daily`; 1-12 for `Weekly`; 1-3 for `Monthly`",
          "name": "interval"
        },
        {
          "type": "string",
          "description": "Supported together with `weeklyByDay`",
          "enum": [
            "Last",
            "First",
            "Second",
            "Third",
            "Fourth"
          ],
          "name": "monthlyByWeek"
        },
        {
          "type": "string",
          "description": "This field is used only if you're scheduling a recurring meeting of type `3` to state which day in a month the meeting should recur. The value range is 1 - 31. For instance, if the meeting should recur each month on 23rd, provide `23` as the value of this field and `1` as the value of the recurrence `interval` field. And if the meeting should recur every three months, on 23rd of the month, change the value of the recurrence `interval` field to `3`.",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "name": "weeklyByDay"
        },
        {
          "type": "string",
          "description": "This field is used only if you're scheduling a recurring meeting of type `2` to state which day(s) of the week the meeting should recur. The values are: 1 - Sunday; 2 - Monday; 3- Tuesday; 4 - Wednesday; 5 - Thursday; 6 - Friday; 7 - Saturday. Multiple values are supported, should be specified separated by comma",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "name": "weeklyByDays"
        },
        {
          "type": "integer",
          "description": "The supported range is 1-31",
          "name": "monthlyByDay"
        },
        {
          "type": "integer",
          "description": "This field is used only if you're scheduling a recurring meeting of type `3` to state a specific day in a week when the monthly meeting should recur; it works together with `MonthlyByWeek` field. The values are: 1 - Sunday; 2 - Monday; 3 - Tuesday; 4 - Wednesday; 5 - Thursday; 6 - Friday; 7- Saturday",
          "name": "monthlyByWeekDay"
        },
        {
          "type": "integer",
          "description": "Number of meeting occurrences",
          "name": "count"
        },
        {
          "type": "string",
          "description": "Meeting expiration datetime",
          "name": "until"
        }
      ]
    },
    {
      "name": "HostInfoRequest",
      "description": "Meeting host information",
      "fields": [
        {
          "type": "string",
          "description": "Link to the meeting host resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension which is assigned to be a meeting host. The default value is currently logged-in extension identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "MeetingServiceInfoResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "supportUri"
        },
        {
          "type": "string",
          "name": "intlDialInNumbersUri"
        },
        {
          "$ref": "MeetingExternalUserInfoResource",
          "name": "externalUserInfo"
        },
        {
          "type": "array",
          "items": {
            "$ref": "DialInNumberResource"
          },
          "name": "dialInNumbers"
        }
      ]
    },
    {
      "name": "MeetingExternalUserInfoResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "userId"
        },
        {
          "type": "string",
          "name": "accountId"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "userType"
        },
        {
          "type": "string",
          "name": "userToken"
        },
        {
          "type": "string",
          "name": "hostKey"
        },
        {
          "type": "string",
          "name": "personalMeetingId"
        },
        {
          "type": "string",
          "description": "Link to the user's personal meeting room, used as an alias for personal meeting URL (with personal meeting ID)",
          "example": "https://meetings.ringcentral.com/my/jsmith",
          "name": "personalLink"
        },
        {
          "type": "boolean",
          "description": "Enables using personal meeting ID for instant meetings",
          "default": false,
          "name": "usePmiForInstantMeetings"
        }
      ]
    },
    {
      "name": "DialInNumberResource",
      "fields": [
        {
          "type": "string",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "name": "formattedNumber"
        },
        {
          "type": "string",
          "name": "location"
        },
        {
          "$ref": "CountryResource",
          "name": "country"
        }
      ]
    },
    {
      "name": "MeetingsPagingInfo",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "name": "page"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "perPage"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "totalElements"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "pageEnd"
        }
      ]
    },
    {
      "name": "AssistantsResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "AssistantResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "AssistantResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "AssistedUsersResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "AssistedUserResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "AssistedUserResource",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "MeetingServiceInfoRequest",
      "fields": [
        {
          "$ref": "MeetingExternalUserInfoResource",
          "name": "externalUserInfo"
        }
      ]
    },
    {
      "name": "MeetingUserSettingsResponse",
      "fields": [
        {
          "$ref": "UserMeetingRecordingSetting",
          "name": "recording"
        },
        {
          "$ref": "ScheduleUserMeetingInfo",
          "name": "scheduleMeeting"
        },
        {
          "$ref": "TelephonyUserMeetingSettings",
          "name": "telephony"
        }
      ]
    },
    {
      "name": "ScheduleUserMeetingInfo",
      "description": "Scheduling meeting settings locked on account level || Settings defining how to schedule user meetingsxs",
      "fields": [
        {
          "type": "boolean",
          "description": "If true, then only signed-in users can join this meeting",
          "name": "enforceLogin"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with host video on/off (true/false)",
          "name": "startHostVideo"
        },
        {
          "type": "boolean",
          "description": "Starting meetings with participant video on/off (true/false)",
          "name": "startParticipantsVideo"
        },
        {
          "type": "array",
          "description": "Determines how participants can join the audio channel of a meeting",
          "items": {
            "type": "string",
            "enum": [
              "Phone",
              "ComputerAudio",
              "ThirdParty"
            ]
          },
          "name": "audioOptions"
        },
        {
          "type": "boolean",
          "description": "Allows participants to join the meeting before the host arrives",
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "boolean",
          "description": "Determines whether to use Personal Meeting ID (PMI) when scheduling a meeting",
          "name": "usePmiForScheduledMeetings"
        },
        {
          "type": "boolean",
          "description": "Determines whether to use Personal Meeting ID (PMI) when starting an instant meeting",
          "name": "usePmiForInstantMeetings"
        },
        {
          "type": "boolean",
          "description": "A password will be generated when scheduling a meeting and participants will require password to join a meeting. The Personal Meeting ID (PMI) meetings are not included",
          "name": "requirePasswordForSchedulingNewMeetings"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to require a password for meetings which have already been scheduled",
          "name": "requirePasswordForScheduledMeetings"
        },
        {
          "type": "string",
          "description": "Password for already scheduled meetings. Users can set it individually",
          "name": "defaultPasswordForScheduledMeetings"
        },
        {
          "type": "boolean",
          "description": "A random password will be generated for an instant meeting, if set to 'True'. If you use PMI for your instant meetings, this option will be disabled",
          "name": "requirePasswordForInstantMeetings"
        },
        {
          "type": "string",
          "description": "Specifies whether to require a password for meetings using Personal Meeting ID (PMI). The supported values are: 'none', 'all' and 'jbhOnly' (joined before host only)",
          "enum": [
            "all",
            "none",
            "jbhOnly"
          ],
          "name": "requirePasswordForPmiMeetings"
        },
        {
          "type": "string",
          "description": "The default password for Personal Meeting ID (PMI) meetings",
          "name": "pmiPassword"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to generate and require a password for participants joining by phone",
          "name": "pstnPasswordProtected"
        }
      ]
    },
    {
      "name": "UserMeetingRecordingSetting",
      "description": "Meeting recording settings locked on account level",
      "fields": [
        {
          "type": "boolean",
          "description": "Allows hosts and participants to record a meeting to a local file",
          "name": "localRecording"
        },
        {
          "type": "boolean",
          "description": "Allows hosts to record and save a meeting/webinar in the cloud",
          "name": "cloudRecording"
        },
        {
          "type": "boolean",
          "description": "Allows to record active speaker with the shared screen",
          "default": false,
          "name": "recordSpeakerView"
        },
        {
          "type": "boolean",
          "description": "Allows to record gallery view with the shared screen",
          "default": false,
          "name": "recordGalleryView"
        },
        {
          "type": "boolean",
          "description": "Allows to record an audio-only file",
          "default": false,
          "name": "recordAudioFile"
        },
        {
          "type": "boolean",
          "description": "Allows to save chat text from a meeting",
          "default": false,
          "name": "saveChatText"
        },
        {
          "type": "boolean",
          "description": "Allows to show timestamp on video",
          "default": false,
          "name": "showTimestamp"
        },
        {
          "type": "string",
          "description": "Automatical recording (local/cloud/none) of meetings as they start",
          "default": "local",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "name": "autoRecording"
        },
        {
          "type": "string",
          "description": "Automatical deletion of cloud recordings",
          "default": "false",
          "name": "autoDeleteCmr"
        },
        {
          "type": "integer",
          "description": "A specified number of days for automatical deletion of cloud recordings, the value range is 1-60",
          "name": "autoDeleteCmrDays"
        }
      ]
    },
    {
      "name": "TelephonyUserMeetingSettings",
      "fields": [
        {
          "type": "boolean",
          "description": "ThirdParty audio option",
          "name": "thirdPartyAudio"
        },
        {
          "type": "boolean",
          "description": "Users can join the meeting using the existing 3rd party audio configuration",
          "name": "audioConferenceInfo"
        }
      ]
    },
    {
      "name": "TelephonyLockedSettings",
      "fields": [
        {
          "type": "boolean",
          "description": "ThirdParty audio option",
          "name": "thirdPartyAudio"
        }
      ]
    },
    {
      "name": "GetMessageInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "array",
          "description": "The list of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message availability status. Message in 'Deleted' state is still preserved with all its attachments and can be restored. 'Purged' means that all attachments are already deleted and the message itself is about to be physically deleted shortly",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "name": "availability"
        },
        {
          "type": "integer",
          "description": "SMS and Pager only. Identifier of a conversation the message belongs to",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "SMS only. Delivery error code returned by gateway",
          "name": "deliveryErrorCode"
        },
        {
          "type": "string",
          "description": "Message direction. Note that for some message types not all directions are allowed. For example voicemail messages can be only inbound",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "integer",
          "description": "Fax only. Page count in a fax message",
          "name": "faxPageCount"
        },
        {
          "type": "string",
          "description": "Fax only. Resolution of a fax message. 'High' for black and white image scanned at 200 dpi, 'Low' for black and white image scanned at 100 dpi",
          "enum": [
            "High",
            "Low"
          ],
          "name": "faxResolution"
        },
        {
          "$ref": "MessageStoreCallerInfoResponseFrom",
          "name": "from"
        },
        {
          "type": "string",
          "description": "The datetime when the message was modified on server in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different allowed status values. For outbound faxes the aggregated message status is returned: If status for at least one recipient is 'Queued', then 'Queued' value is returned If status for at least one recipient is 'SendingFailed', then 'SendingFailed' value is returned In other cases Sent status is returned",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "boolean",
          "description": "'Pager' only. 'True' if at least one of the message recipients is 'Department' extension",
          "name": "pgToDepartment"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "string",
          "description": "Message read status",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "SMS only. The datetime when outbound SMS was delivered to recipient's handset in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. It is filled only if the carrier sends a delivery receipt to RingCentral",
          "format": "date-time",
          "name": "smsDeliveryTime"
        },
        {
          "type": "integer",
          "description": "SMS only. Number of attempts made to send an outbound SMS to the gateway (if gateway is temporary unavailable)",
          "name": "smsSendingAttemptsCount"
        },
        {
          "type": "string",
          "description": "Message subject. For SMS and Pager messages it replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "MessageStoreCallerInfoResponseTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Voicemail only. Status of voicemail to text transcription. If VoicemailToText feature is not activated for account, the 'NotAvailable' value is returned",
          "enum": [
            "NotAvailable",
            "InProgress",
            "TimedOut",
            "Completed",
            "CompletedPartially",
            "Failed",
            "Unknown"
          ],
          "name": "vmTranscriptionStatus"
        },
        {
          "type": "integer",
          "description": "Cover page identifier. For the list of available cover page identifiers please call the Fax Cover Pages method",
          "name": "coverIndex"
        },
        {
          "type": "string",
          "description": "Cover page text, entered by the fax sender and printed on the cover page. Maximum length is limited to 1024 symbols",
          "name": "coverPageText"
        }
      ]
    },
    {
      "name": "GetInternalTextMessageInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "The list of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message availability status. Message in 'Deleted' state is still preserved with all its attachments and can be restored. 'Purged' means that all attachments are already deleted and the message itself is about to be physically deleted shortly",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "name": "availability"
        },
        {
          "type": "integer",
          "description": "SMS and Pager only. Identifier of a conversation that the message belongs to",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Message direction. Note that for some message types not all directions are allowed. For example voicemail messages can be only inbound",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "$ref": "MessageStoreCallerInfoResponseFrom",
          "name": "from"
        },
        {
          "type": "string",
          "description": "The datetime when the message was modified on server in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different allowed status values. For outbound faxes the aggregated message status is returned: If status for at least one recipient is 'Queued', then 'Queued' value is returned If status for at least one recipient is 'SendingFailed', then 'SendingFailed' value is returned In other cases Sent status is returned",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "boolean",
          "description": "'Pager' only. 'True' if at least one of the message recipients is 'Department' extension",
          "name": "pgToDepartment"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "string",
          "description": "Message read status",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "Message subject. For SMS and Pager messages it replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "MessageStoreCallerInfoResponseTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "GetSMSMessageInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "The list of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message availability status. Message in 'Deleted' state is still preserved with all its attachments and can be restored. 'Purged' means that all attachments are already deleted and the message itself is about to be physically deleted shortly",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "name": "availability"
        },
        {
          "type": "integer",
          "description": "SMS and Pager only. Identifier of a conversation that the message belongs to",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "SMS only. Delivery error code returned by gateway",
          "name": "deliveryErrorCode"
        },
        {
          "type": "string",
          "description": "Message direction. Note that for some message types not all directions are allowed. For example voicemail messages can be only inbound",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "$ref": "MessageStoreCallerInfoResponseFrom",
          "name": "from"
        },
        {
          "type": "string",
          "description": "The datetime when the message was modified on server in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different allowed status values. For outbound faxes the aggregated message status is returned: If status for at least one recipient is 'Queued', then 'Queued' value is returned If status for at least one recipient is 'SendingFailed', then 'SendingFailed' value is returned In other cases Sent status is returned",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "string",
          "description": "Message read status",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "SMS only. The datetime when outbound SMS was delivered to recipient's handset in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. It is filled only if the carrier sends a delivery receipt to RingCentral",
          "format": "date-time",
          "name": "smsDeliveryTime"
        },
        {
          "type": "integer",
          "description": "SMS only. Number of attempts made to send an outbound SMS to the gateway (if gateway is temporary unavailable)",
          "name": "smsSendingAttemptsCount"
        },
        {
          "type": "string",
          "description": "Message subject. For SMS and Pager messages it replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "MessageStoreCallerInfoResponseTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "GetMessageInfoMultiResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a resource",
          "name": "resourceId"
        },
        {
          "type": "integer",
          "description": "Status code of resource retrieval",
          "name": "status"
        },
        {
          "$ref": "MessageBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "MessageBody",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "array",
          "description": "The list of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message availability status. Message in 'Deleted' state is still preserved with all its attachments and can be restored. 'Purged' means that all attachments are already deleted and the message itself is about to be physically deleted shortly",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "name": "availability"
        },
        {
          "type": "integer",
          "description": "SMS and Pager only. Identifier of a conversation the message belongs to",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "SMS only. Delivery error code returned by gateway",
          "name": "deliveryErrorCode"
        },
        {
          "type": "string",
          "description": "Message direction. Note that for some message types not all directions are allowed. For example voicemail messages can be only inbound",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "integer",
          "description": "Fax only. Page count in a fax message",
          "name": "faxPageCount"
        },
        {
          "type": "string",
          "description": "Fax only. Resolution of a fax message. 'High' for black and white image scanned at 200 dpi, 'Low' for black and white image scanned at 100 dpi",
          "enum": [
            "High",
            "Low"
          ],
          "name": "faxResolution"
        },
        {
          "$ref": "MessageSenderInfo",
          "name": "from"
        },
        {
          "type": "string",
          "description": "The datetime when the message was modified on server in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Message status. Different message types may have different allowed status values.For outbound faxes the aggregated message status is returned: If status for at least one recipient is 'Queued', then 'Queued' value is returned If status for at least one recipient is 'SendingFailed', then 'SendingFailed' value is returned In other cases Sent status is returned",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "boolean",
          "description": "'Pager' only. 'True' if at least one of the message recipients is 'Department' extension",
          "name": "pgToDepartment"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "string",
          "description": "Message read status",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "SMS only. The datetime when outbound SMS was delivered to recipient's handset in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. It is filled only if the carrier sends a delivery receipt to RingCentral",
          "format": "date-time",
          "name": "smsDeliveryTime"
        },
        {
          "type": "integer",
          "description": "SMS only. Number of attempts made to send an outbound SMS to the gateway (if gateway is temporary unavailable)",
          "name": "smsSendingAttemptsCount"
        },
        {
          "type": "string",
          "description": "Message subject. For SMS and Pager messages it replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "MessageRecipientInfo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Voicemail only. Status of voicemail to text transcription. If VoicemailToText feature is not activated for account, the 'NotAvailable' value is returned",
          "enum": [
            "NotAvailable",
            "InProgress",
            "TimedOut",
            "Completed",
            "CompletedPartially",
            "Failed"
          ],
          "name": "vmTranscriptionStatus"
        }
      ]
    },
    {
      "name": "MessageRecipientInfo",
      "fields": [
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "MessageSenderInfo",
      "description": "Sender information",
      "fields": [
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "name": "MessageStoreCallerInfoResponseTo",
      "fields": [
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "type": "boolean",
          "description": "'True' specifies that message is sent exactly to this recipient. Returned in to field for group MMS. Useful if one extension has several phone numbers",
          "name": "target"
        },
        {
          "type": "string",
          "description": "Status of a message. Returned for outbound fax messages only",
          "enum": [
            "Queued",
            "Sent",
            "Delivered",
            "DeliveryFailed",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Error code returned in case of fax sending failure. Returned if messageStatus value is 'SendingFailed'. Supported for fax messages only",
          "enum": [
            "AllLinesInUse",
            "Undefined",
            "NoFaxSendPermission",
            "NoInternationalPermission",
            "NoFaxMachine",
            "NoAnswer",
            "LineBusy",
            "CallerHungUp",
            "NotEnoughCredits",
            "SentPartially",
            "InternationalCallingDisabled",
            "DestinationCountryDisabled",
            "UnknownCountryCode",
            "NotAccepted",
            "InvalidNumber",
            "CallDeclined",
            "TooManyCallsPerLine",
            "CallFailed",
            "RenderingFailed",
            "TooManyPages",
            "ReturnToDBQueue",
            "NoCallTime",
            "WrongNumber",
            "ProhibitedNumber",
            "InternalError",
            "FaxSendingProhibited",
            "ThePhoneIsBlacklisted",
            "UserNotFound",
            "ConvertError",
            "DBGeneralError",
            "SkypeBillingFailed",
            "AccountSuspended",
            "ProhibitedDestination",
            "InternationalDisabled"
          ],
          "name": "faxErrorCode"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "MessageStoreCallerInfoResponseFrom",
      "description": "Sender information",
      "fields": [
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "MessageAttachmentInfo",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message attachment",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a message attachment",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Type of message attachment",
          "enum": [
            "AudioRecording",
            "AudioTranscription",
            "Text",
            "SourceDocument",
            "RenderedDocument",
            "MmsAttachment"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "MIME type for a given attachment, for instance 'audio/wav'",
          "name": "contentType"
        },
        {
          "type": "integer",
          "description": "Supported for `Voicemail` only. Duration of a voicemail in seconds",
          "name": "vmDuration"
        },
        {
          "type": "string",
          "description": "Name of a file attached",
          "name": "fileName"
        },
        {
          "type": "integer",
          "description": "Size of attachment in bytes",
          "name": "size"
        },
        {
          "type": "integer",
          "description": "Attachment height in pixels if available",
          "name": "height"
        },
        {
          "type": "integer",
          "description": "Attachment width in pixels if available",
          "name": "width"
        }
      ]
    },
    {
      "name": "MessageAttachmentInfoIntId",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message attachment",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a message attachment",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Type of message attachment",
          "enum": [
            "AudioRecording",
            "AudioTranscription",
            "Text",
            "SourceDocument",
            "RenderedDocument",
            "MmsAttachment"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "MIME type for a given attachment, for instance 'audio/wav'",
          "name": "contentType"
        },
        {
          "type": "integer",
          "description": "Voicemail only Duration of the voicemail in seconds",
          "name": "vmDuration"
        },
        {
          "type": "string",
          "description": "Name of a file attached",
          "name": "filename"
        },
        {
          "type": "integer",
          "description": "Size of attachment in bytes",
          "name": "size"
        }
      ]
    },
    {
      "name": "CreateInternalTextMessageRequest",
      "fields": [
        {
          "$ref": "PagerCallerInfoRequest",
          "name": "from",
          "required": false
        },
        {
          "type": "integer",
          "description": "Internal identifier of a message this message replies to",
          "name": "replyOn",
          "required": false
        },
        {
          "type": "string",
          "description": "Text of a pager message. Max length is 1024 symbols (2-byte UTF-16 encoded). If a character is encoded in 4 bytes in UTF-16 it is treated as 2 characters, thus restricting the maximum message length to 512 symbols",
          "example": "hello world",
          "name": "text",
          "required": true
        },
        {
          "type": "array",
          "description": "Optional if replyOn parameter is specified. Receiver of a pager message.",
          "items": {
            "$ref": "PagerCallerInfoRequest"
          },
          "name": "to",
          "required": false
        }
      ]
    },
    {
      "name": "PagerCallerInfoRequest",
      "description": "Sender of a pager message.",
      "fields": [
        {
          "type": "string",
          "description": "Extension identifier",
          "example": "123456789",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Extension number",
          "example": "105",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "MessageStoreCallerInfoRequest",
      "description": "Message sender information. The `phoneNumber` value should be one the account phone numbers allowed to send the current type of messages",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "UpdateMessageRequest",
      "fields": [
        {
          "type": "string",
          "description": "Read status of a message to be changed. Multiple values are accepted",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        }
      ]
    },
    {
      "name": "FaxResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a message",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a message",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Message type - 'Fax'",
          "name": "type"
        },
        {
          "$ref": "CallerInfoFrom",
          "name": "from"
        },
        {
          "type": "array",
          "description": "Recipient information",
          "items": {
            "$ref": "CallerInfoTo"
          },
          "name": "to"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Message read status",
          "enum": [
            "Read",
            "Unread"
          ],
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "Message priority",
          "enum": [
            "Normal",
            "High"
          ],
          "name": "priority"
        },
        {
          "type": "array",
          "description": "The list of message attachments",
          "items": {
            "$ref": "MessageAttachmentInfoIntId"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message direction",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Message availability status. Message in 'Deleted' state is still preserved with all its attachments and can be restored. 'Purged' means that all attachments are already deleted and the message itself is about to be physically deleted shortly",
          "enum": [
            "Alive",
            "Deleted",
            "Purged"
          ],
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Message status. 'Queued' - the message is queued for sending; 'Sent' - a message is successfully sent; 'SendingFailed' - a message sending attempt has failed; 'Received' - a message is received (inbound messages have this status by default)",
          "enum": [
            "Queued",
            "Sent",
            "SendingFailed",
            "Received"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Resolution of a fax message. ('High' for black and white image scanned at 200 dpi, 'Low' for black and white image scanned at 100 dpi)",
          "enum": [
            "High",
            "Low"
          ],
          "name": "faxResolution"
        },
        {
          "type": "integer",
          "description": "Page count in a fax message",
          "name": "faxPageCount"
        },
        {
          "type": "string",
          "description": "Datetime when the message was modified on server in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "integer",
          "description": "Cover page identifier. For the list of available cover page identifiers please call the Fax Cover Pages method",
          "name": "coverIndex"
        },
        {
          "type": "string",
          "description": "Cover page text, entered by the fax sender and printed on the cover page. Maximum length is limited to 1024 symbols",
          "name": "coverPageText"
        }
      ]
    },
    {
      "name": "GetMessageSyncResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the message sync resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of message records with synchronization information",
          "items": {
            "$ref": "GetMessageInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "SyncInfoMessages",
          "name": "syncInfo",
          "required": true
        }
      ]
    },
    {
      "name": "SyncInfoMessages",
      "description": "Sync type, token and time",
      "fields": [
        {
          "type": "string",
          "description": "Type of synchronization",
          "enum": [
            "FSync",
            "ISync"
          ],
          "name": "syncType"
        },
        {
          "type": "string",
          "description": "Synchronization token",
          "name": "syncToken"
        },
        {
          "type": "string",
          "description": "Last synchronization datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "syncTime"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "olderRecordsExist"
        }
      ]
    },
    {
      "name": "CallerInfoFrom",
      "description": "Sender information",
      "fields": [
        {
          "type": "string",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "location"
        }
      ]
    },
    {
      "name": "CallerInfoTo",
      "fields": [
        {
          "type": "string",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "location"
        },
        {
          "type": "string",
          "enum": [
            "Sent",
            "SendingFailed",
            "Queued"
          ],
          "name": "messageStatus"
        },
        {
          "type": "string",
          "enum": [
            "Undefined",
            "NoFaxSendPermission",
            "NoInternationalPermission",
            "NoFaxMachine",
            "NoAnswer",
            "LineBusy",
            "CallerHungUp",
            "NotEnoughCredits",
            "SentPartially",
            "InternationalCallingDisabled",
            "DestinationCountryDisabled",
            "UnknownCountryCode",
            "NotAccepted",
            "InvalidNumber",
            "CallDeclined",
            "TooManyCallsPerLine",
            "CallFailed",
            "RenderingFailed",
            "TooManyPages",
            "ReturnToDBQueue",
            "NoCallTime",
            "WrongNumber",
            "ProhibitedNumber",
            "InternalError",
            "FaxSendingProhibited",
            "ThePhoneIsBlacklisted",
            "UserNotFound",
            "ConvertError",
            "DBGeneralError",
            "SkypeBillingFailed",
            "AccountSuspended",
            "ProhibitedDestination",
            "InternationalDisabled"
          ],
          "name": "faxErrorCode"
        }
      ]
    },
    {
      "name": "GetMessageList",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of user messages",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of records with message information",
          "items": {
            "$ref": "GetMessageInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "MessagingNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "MessagingPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "MessagingNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "firstPage"
        },
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "nextPage"
        },
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "previousPage"
        },
        {
          "$ref": "MessagingNavigationInfoURI",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "MessagingPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "MessagingNavigationInfoURI",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "CreateMMSMessage",
      "fields": [
        {
          "$ref": "MessageStoreCallerInfoRequest",
          "name": "from",
          "required": true
        },
        {
          "type": "array",
          "description": "Message receiver(s) information. The `phoneNumber` value is required",
          "items": {
            "$ref": "MessageStoreCallerInfoRequest"
          },
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16 encoded). If a character is encoded in 4 bytes in UTF-16 it is treated as 2 characters, thus restricting the maximum message length to 500 symbols",
          "name": "text",
          "required": false
        },
        {
          "$ref": "MessageCountryInfo",
          "name": "country",
          "required": false
        },
        {
          "description": "Files to send",
          "type": "array",
          "collectionFormat": "multi",
          "items": {
            "$ref": "Attachment"
          },
          "name": "attachments",
          "required": true
        }
      ]
    },
    {
      "name": "CreateSMSMessage",
      "fields": [
        {
          "$ref": "MessageStoreCallerInfoRequest",
          "name": "from",
          "required": true
        },
        {
          "type": "array",
          "description": "Message receiver(s) information. The `phoneNumber` value is required",
          "items": {
            "$ref": "MessageStoreCallerInfoRequest"
          },
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Text of a message. Max length is 1000 symbols (2-byte UTF-16 encoded). If a character is encoded in 4 bytes in UTF-16 it is treated as 2 characters, thus restricting the maximum message length to 500 symbols",
          "name": "text",
          "required": true
        },
        {
          "$ref": "MessageCountryInfo",
          "name": "country",
          "required": false
        }
      ]
    },
    {
      "name": "InboundMessageEvent",
      "fields": [
        {
          "$ref": "NotificationInfo",
          "name": "aps"
        },
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "messageId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a conversation",
          "name": "conversationId"
        },
        {
          "type": "string",
          "description": "Sender phone number. For GCM transport type '_from' property should be used",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Receiver phone number",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "NotificationInfo",
      "description": "Information on a notification",
      "fields": [
        {
          "$ref": "AlertInfo",
          "name": "alert"
        },
        {
          "type": "string",
          "description": "Number of incoming messages",
          "name": "badge"
        },
        {
          "type": "string",
          "description": "Message sound",
          "name": "sound"
        },
        {
          "type": "string",
          "description": "Content availability",
          "name": "content-available"
        },
        {
          "type": "string",
          "description": "Category of a message",
          "name": "category"
        }
      ]
    },
    {
      "name": "AlertInfo",
      "description": "Alert information",
      "fields": [
        {
          "type": "string",
          "description": "Title of a message",
          "name": "title"
        },
        {
          "type": "string",
          "description": "Message Description",
          "name": "body"
        }
      ]
    },
    {
      "name": "InstantMessageEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "InstantMessageEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "InstantMessageEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "array",
          "description": "Message receiver(s) information",
          "items": {
            "$ref": "NotificationRecipientInfo"
          },
          "name": "to"
        },
        {
          "$ref": "SenderInfo",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Type of a message. The default value is 'SMS'",
          "name": "type"
        },
        {
          "type": "string",
          "description": "Message creation datetime in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Datetime when the message was modified in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Status of a message",
          "default": "Unread",
          "name": "readStatus"
        },
        {
          "type": "string",
          "default": "Normal",
          "name": "priority"
        },
        {
          "type": "array",
          "description": "Message attachment data",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message direction",
          "default": "Inbound",
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Message availability status",
          "default": "Alive",
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Message subject. It replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "string",
          "description": "Status of a message",
          "default": "Received",
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Deprecated. Identifier of a conversation the message belongs to",
          "name": "conversationId"
        },
        {
          "$ref": "ConversationInfo",
          "name": "conversation"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "NotificationRecipientInfo",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 (with '+' sign) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "boolean",
          "description": "'True' specifies that message is sent exactly to this recipient. Returned in to field for group MMS. Useful if one extension has several phone numbers",
          "name": "target"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a caller/callee. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        }
      ]
    },
    {
      "name": "SenderInfo",
      "description": "Extension Type. For GCM transport type '_from' property should be used || Message sender information",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 (with '+' sign) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Symbolic name associated with a caller/callee. If the phone does not belong to the known extension, only the location is returned, the name is not determined then",
          "name": "name"
        }
      ]
    },
    {
      "name": "MessageEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "MessageEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "MessageEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Datetime when the message was last modified in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastUpdated"
        },
        {
          "type": "array",
          "description": "Message Changes",
          "items": {
            "$ref": "MessageChanges"
          },
          "name": "changes"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "MessageChanges",
      "fields": [
        {
          "type": "string",
          "description": "Message type",
          "enum": [
            "Voicemail",
            "SMS",
            "Fax",
            "Pager"
          ],
          "name": "type"
        },
        {
          "type": "integer",
          "description": "The number of new messages. Can be omitted if the value is zero",
          "name": "newCount"
        },
        {
          "type": "integer",
          "description": "The number of updated messages. Can be omitted if the value is zero",
          "name": "updatedCount"
        }
      ]
    },
    {
      "name": "ConversationInfo",
      "description": "SMS and Pager only. Information about a conversation the message belongs to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a conversation",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Deprecated. Link to a conversation resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "MessageStoreConfiguration",
      "fields": [
        {
          "maximum": 90,
          "minimum": 7,
          "type": "integer",
          "description": "Retention policy setting, specifying how long to keep messages; the supported value range is 7-90 days",
          "name": "retentionPeriod"
        }
      ]
    },
    {
      "name": "ListFaxCoverPagesResponse",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "FaxCoverPageInfo"
          },
          "name": "records"
        },
        {
          "$ref": "MessagingNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "MessagingPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "FaxCoverPageInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a fax cover page. The possible value range is 0-13 (for language setting en-US) and 0, 15-28 (for all other languages)",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a fax cover page pattern",
          "name": "name"
        }
      ]
    },
    {
      "name": "VoicemailMessageEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "VoicemailMessageEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "VoicemailMessageEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "array",
          "description": "Message receiver(s) information",
          "items": {
            "$ref": "NotificationRecipientInfo"
          },
          "name": "to"
        },
        {
          "$ref": "SenderInfo",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Type of a message",
          "enum": [
            "Voicemail"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Message creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2019-03-10T18:07:52.534Z*",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Datetime when the message was modified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2019-03-10T18:07:52.534Z*",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Status of a message",
          "default": "Unread",
          "name": "readStatus"
        },
        {
          "type": "string",
          "description": "Message priority",
          "default": "Normal",
          "name": "priority"
        },
        {
          "type": "array",
          "description": "Message attachment data",
          "items": {
            "$ref": "MessageAttachmentInfo"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message direction",
          "default": "Inbound",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Message availability status",
          "default": "Alive",
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Message subject. It replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "string",
          "description": "Status of a message",
          "default": "Received",
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Internal identifier of a conversation this message belongs to",
          "name": "conversationId"
        },
        {
          "type": "string",
          "description": "Specifies if a voicemail message transcription is already completed or not",
          "name": "vmTranscriptionStatus"
        }
      ]
    },
    {
      "name": "FaxMessageEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "FaxMessageEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "FaxMessageEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message",
          "name": "id"
        },
        {
          "type": "array",
          "items": {
            "$ref": "NotificationRecipientInfo"
          },
          "name": "to"
        },
        {
          "$ref": "SenderInfo",
          "name": "from"
        },
        {
          "type": "string",
          "description": "Type of a message",
          "enum": [
            "Fax"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Message creation datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Datetime when the message was modified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Status of a message",
          "default": "Unread",
          "name": "readStatus"
        },
        {
          "type": "string",
          "default": "Normal",
          "name": "priority"
        },
        {
          "type": "array",
          "description": "Message attachment data",
          "items": {
            "$ref": "FaxMessageAttachment"
          },
          "name": "attachments"
        },
        {
          "type": "string",
          "description": "Message direction",
          "default": "Inbound",
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Message availability status",
          "default": "Alive",
          "name": "availability"
        },
        {
          "type": "string",
          "description": "Message subject. It replicates message text which is also returned as an attachment",
          "name": "subject"
        },
        {
          "type": "string",
          "description": "Status of a message",
          "default": "Received",
          "name": "messageStatus"
        },
        {
          "type": "string",
          "description": "Internal identifier of a conversation this message belongs to",
          "name": "conversationId"
        },
        {
          "type": "string",
          "description": "Resolution of a fax message. ('High' for black and white image scanned at 200 dpi, 'Low' for black and white image scanned at 100 dpi)",
          "name": "faxResolution"
        },
        {
          "type": "integer",
          "description": "Page count of a fax message",
          "name": "faxPageCount"
        }
      ]
    },
    {
      "name": "FaxMessageAttachment",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message attachment",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a message attachment",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Type of message attachment",
          "enum": [
            "AudioRecording",
            "AudioTranscription",
            "Text",
            "SourceDocument",
            "RenderedDocument",
            "MmsAttachment"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "MIME type for a given attachment, for instance 'audio/wav'",
          "name": "contentType"
        },
        {
          "type": "string",
          "description": "Name of a file attached",
          "name": "filename"
        },
        {
          "type": "integer",
          "description": "Size of attachment in bytes",
          "name": "size"
        }
      ]
    },
    {
      "name": "MessageCountryInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Official name of a country",
          "name": "name"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Calling code of a country",
          "name": "callingCode"
        }
      ]
    },
    {
      "name": "ParsePhoneNumberRequest",
      "fields": [
        {
          "type": "array",
          "description": "Phone numbers passed in a string. The maximum value of phone numbers is limited to 64. The maximum number of symbols in each phone number in a string is 64",
          "items": {
            "type": "string"
          },
          "name": "originalStrings"
        }
      ]
    },
    {
      "name": "ParsePhoneNumberResponse",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a resource",
          "name": "uri",
          "required": false
        },
        {
          "$ref": "GetCountryInfoNumberParser",
          "name": "homeCountry",
          "required": true
        },
        {
          "type": "array",
          "description": "Parsed phone numbers data",
          "items": {
            "$ref": "PhoneNumberInfoNumberParser"
          },
          "name": "phoneNumbers",
          "required": true
        }
      ]
    },
    {
      "name": "GetCountryInfoNumberParser",
      "description": "Information on a user home country || Information on a country the phone number belongs to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Country calling code defined by ITU-T recommendations E.123 and E.164, see Calling Codes",
          "name": "callingCode"
        },
        {
          "type": "boolean",
          "description": "Emergency calling feature availability/emergency address requirement indicator",
          "name": "emergencyCalling"
        },
        {
          "type": "string",
          "description": "Country code according to the ISO standard, see ISO 3166",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a country",
          "name": "name"
        }
      ]
    },
    {
      "name": "PhoneNumberInfoNumberParser",
      "fields": [
        {
          "type": "string",
          "description": "Area code of location. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) number that identifies a specific geographic region/numbering area of the national numbering plan (NANP); that can be summarized as `NPA-NXX-xxxx` and covers Canada, the United States, parts of the Caribbean Sea, and some Atlantic and Pacific islands. See [North American Numbering Plan] (https://en.wikipedia.org/wiki/North_American_Numbering_Plan) for details",
          "name": "areaCode"
        },
        {
          "$ref": "GetCountryInfoNumberParser",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Dialing format of a phone number",
          "name": "dialable"
        },
        {
          "type": "string",
          "description": "Phone number [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "e164"
        },
        {
          "type": "string",
          "description": "International format of a phone number",
          "name": "formattedInternational"
        },
        {
          "type": "string",
          "description": "Domestic format of a phone number",
          "name": "formattedNational"
        },
        {
          "type": "string",
          "description": "One of the numbers to be parsed, passed as a string in response",
          "name": "originalString"
        },
        {
          "type": "boolean",
          "description": "'True' if the number is in a special format (for example N11 code)",
          "name": "special"
        },
        {
          "type": "string",
          "description": "Phone number [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format without plus sign ('+')",
          "name": "normalized"
        },
        {
          "type": "boolean",
          "description": "Specifies if a phone number is toll free or not",
          "name": "tollFree"
        },
        {
          "type": "string",
          "description": "Sub-Address. The portion of the number that identifies a subscriber into the subscriber internal (non-public) network.",
          "name": "subAddress"
        },
        {
          "type": "string",
          "description": " Subscriber number. The portion of the [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) number that identifies a subscriber in a network or numbering area.",
          "name": "subscriberNumber"
        },
        {
          "type": "string",
          "description": "DTMF (Dual Tone Multi-Frequency) postfix",
          "name": "dtmfPostfix"
        }
      ]
    },
    {
      "name": "CreateMessageStoreReportRequest",
      "fields": [
        {
          "type": "string",
          "description": "Starting time for collecting messages. The default value equals to the current time minus 24 hours",
          "name": "dateFrom"
        },
        {
          "type": "string",
          "description": "Ending time for collecting messages. The default value is the current time",
          "name": "dateTo"
        }
      ]
    },
    {
      "name": "MessageStoreReport",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a message store report task",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a task",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Status of a message store report task",
          "enum": [
            "Accepted",
            "Pending",
            "InProgress",
            "AttemptFailed",
            "Failed",
            "Completed",
            "Cancelled"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Task creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Time of the last task modification",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Ending time for collecting messages",
          "name": "dateTo"
        },
        {
          "type": "string",
          "description": "Starting time for collecting messages",
          "name": "dateFrom"
        }
      ]
    },
    {
      "name": "MessageStoreReportArchive",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ArchiveInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ArchiveInfo",
      "fields": [
        {
          "type": "integer",
          "description": "Archive size in bytes",
          "name": "size"
        },
        {
          "type": "string",
          "description": "Link for archive download",
          "name": "uri"
        }
      ]
    },
    {
      "name": "SwitchesList",
      "fields": [
        {
          "type": "string",
          "description": "Link to the switches list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "Switches map",
          "items": {
            "$ref": "SwitchInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "SwitchInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to the network switch resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a network switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Name of a network switch",
          "name": "name"
        },
        {
          "$ref": "SwitchSiteInfo",
          "name": "site"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfo",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Deprecated. Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "CreateSwitchInfo",
      "fields": [
        {
          "type": "string",
          "description": "Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)",
          "name": "chassisId",
          "required": true
        },
        {
          "type": "string",
          "description": "Name of a network switch",
          "name": "name",
          "required": false
        },
        {
          "$ref": "SwitchSiteInfo",
          "name": "site",
          "required": false
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfoRequest",
          "name": "emergencyAddress",
          "required": false
        },
        {
          "type": "string",
          "description": "Deprecated. Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId",
          "required": false
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation",
          "required": false
        }
      ]
    },
    {
      "name": "UpdateSwitchInfo",
      "fields": [
        {
          "type": "string",
          "description": "internal identifier of a switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch. The supported formats are: XX:XX:XX:XX:XX:XX (symbols 0-9 and A-F) for MAC address and X.X.X.X for IP address (symbols 0-255)",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Name of a network switch",
          "name": "name"
        },
        {
          "$ref": "SwitchSiteInfo",
          "name": "site"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfoRequest",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Deprecated. Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "LocationUpdatesEmergencyAddressInfoRequest",
      "description": "Emergency address assigned to the switch. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "First line address",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor, etc.)",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        }
      ]
    },
    {
      "name": "LocationUpdatesEmergencyAddressInfo",
      "description": "Emergency address information (or information assigned to the switch or wireless point - in case of using them). Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "First line address",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor, etc.)",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        }
      ]
    },
    {
      "name": "SwitchSiteInfo",
      "description": "Site data",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site. The company identifier value is 'main-site'",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        }
      ]
    },
    {
      "name": "GetExtensionPhoneNumbersResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the user's phone number list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of phone numbers",
          "items": {
            "$ref": "UserPhoneNumberInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "UserPhoneNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to the user's phone number resource",
          "name": "uri"
        },
        {
          "type": "integer",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "$ref": "CountryInfo",
          "name": "country"
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider"
        },
        {
          "$ref": "UserPhoneNumberExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom user name of a phone number, if any",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Location (City, State). Filled for local US numbers",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system",
          "enum": [
            "External",
            "TollFree",
            "Local",
            "BusinessMobileNumberProvider",
            "ExternalNumberProvider"
          ],
          "name": "paymentType"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is 'Normal', the phone number is ready to be used. Otherwise it is an external number not yet ported to RingCentral",
          "name": "status"
        },
        {
          "type": "string",
          "description": "Phone number type",
          "enum": [
            "VoiceFax",
            "FaxOnly",
            "VoiceOnly"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Usage type of a phone number. Numbers of 'NumberPool' type wont't be returned for phone number list requests",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber",
            "ConferencingNumber",
            "NumberPool",
            "BusinessMobileNumber",
            "ExternalMobileNumber"
          ],
          "name": "usageType"
        },
        {
          "type": "array",
          "description": "List of features of a phone number",
          "items": {
            "type": "string",
            "enum": [
              "CallerId",
              "SmsSender",
              "A2PSmsSender",
              "MmsSender",
              "InternationalSmsSender",
              "Delegated"
            ]
          },
          "name": "features"
        }
      ]
    },
    {
      "name": "CompanyPhoneNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a company phone number resource",
          "name": "uri"
        },
        {
          "type": "integer",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "$ref": "CountryInfo",
          "name": "country"
        },
        {
          "$ref": "ExtensionInfo",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Custom user name of a phone number, if any",
          "name": "label"
        },
        {
          "type": "string",
          "description": "Location (City, State). Filled for local US numbers",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system",
          "enum": [
            "External",
            "TollFree",
            "Local",
            "BusinessMobileNumberProvider",
            "ExternalNumberProvider"
          ],
          "name": "paymentType"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Status of a phone number. If the value is 'Normal', the phone number is ready to be used. Otherwise it is an external number not yet ported to RingCentral",
          "name": "status"
        },
        {
          "type": "string",
          "description": "Phone number type",
          "enum": [
            "VoiceFax",
            "FaxOnly",
            "VoiceOnly"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Usage type of a phone number. Usage type of a phone number. Numbers of 'NumberPool' type wont't be returned for phone number list requests",
          "enum": [
            "MainCompanyNumber",
            "AdditionalCompanyNumber",
            "CompanyNumber",
            "DirectNumber",
            "CompanyFaxNumber",
            "ForwardedNumber",
            "ForwardedCompanyNumber",
            "ContactCenterNumber",
            "ConferencingNumber",
            "MeetingsNumber",
            "NumberPool",
            "BusinessMobileNumber",
            "ExternalMobileNumber"
          ],
          "name": "usageType"
        },
        {
          "$ref": "TemporaryNumberInfo",
          "name": "temporaryNumber"
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider"
        },
        {
          "type": "string",
          "description": "Vanity pattern for this number. Returned only when vanity search option is requested. Vanity pattern corresponds to request parameters nxx plus line or numberPattern",
          "name": "vanityPattern"
        }
      ]
    },
    {
      "name": "ContactCenterProvider",
      "description": "CCRN (Contact Center Routing Number) provider. If not specified then the default value 'InContact/North America' is used, its ID is '1'",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the provider",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Provider's name",
          "name": "name"
        }
      ]
    },
    {
      "name": "TemporaryNumberInfo",
      "description": "Temporary phone number, if any. Returned for phone numbers in `Pending` porting status only",
      "fields": [
        {
          "type": "string",
          "description": "Temporary phone number identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Temporary phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "CountryInfo",
      "description": "Country information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a home country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a home country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Official name of a home country",
          "name": "name"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Calling code of a country",
          "name": "callingCode"
        }
      ]
    },
    {
      "name": "UserPhoneNumberExtensionInfo",
      "description": "Information on the extension, to which the phone number is assigned. Returned only for the request of Account phone number list",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding account ID/extension ID for each partner ID of a client application. In request URIs partner IDs are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding account IDs and extension IDs. In all request and response bodies these values are reflected via partnerId attributes of account and extension",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "FaxUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Site"
          ],
          "name": "type"
        },
        {
          "$ref": "ContactCenterProvider",
          "name": "contactCenterProvider"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination of the specified first name and last name",
          "name": "name"
        }
      ]
    },
    {
      "name": "ExtensionCreationResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "$ref": "ContactInfo",
          "name": "contact"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination of the specified first name and last name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding account ID/extension ID for each partner ID of a client application. In request URIs partner IDs are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding account IDs and extension IDs. In all request and response bodies these values are reflected via partnerId attributes of account and extension",
          "name": "partnerId"
        },
        {
          "$ref": "ExtensionPermissions",
          "name": "permissions"
        },
        {
          "$ref": "ProfileImageInfo",
          "name": "profileImage"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "array",
          "description": "Extension service features returned in response only when the logged-in user requests his/her own extension info, see also Extension Service Features",
          "items": {
            "$ref": "ExtensionServiceFeatureInfo"
          },
          "name": "serviceFeatures"
        },
        {
          "type": "string",
          "description": "Specifies extension configuration wizard state (web service setup). The default value is 'NotStarted'",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "name": "setupWizardState"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension current state. If 'Unassigned' is specified, then extensions without ‘extensionNumber’ are returned. If not specified, then all extensions are returned",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "ParkLocation",
            "Limited"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for extensions of User type only",
          "name": "hidden"
        }
      ]
    },
    {
      "name": "ProvisioningNavigationInfo",
      "description": "Information on navigation",
      "fields": [
        {
          "$ref": "ProvisioningNavigationInfoUri",
          "name": "firstPage"
        },
        {
          "$ref": "ProvisioningNavigationInfoUri",
          "name": "nextPage"
        },
        {
          "$ref": "ProvisioningNavigationInfoUri",
          "name": "previousPage"
        },
        {
          "$ref": "ProvisioningNavigationInfoUri",
          "name": "lastPage"
        }
      ]
    },
    {
      "name": "ProvisioningNavigationInfoUri",
      "description": "Canonical URI for the corresponding page of the list",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ProvisioningPagingInfo",
      "description": "Information on paging",
      "fields": [
        {
          "type": "integer",
          "description": "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)",
          "name": "page"
        },
        {
          "type": "integer",
          "description": "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied",
          "name": "perPage"
        },
        {
          "type": "integer",
          "description": "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageStart"
        },
        {
          "type": "integer",
          "description": "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty",
          "name": "pageEnd"
        },
        {
          "type": "integer",
          "description": "The total number of pages in a dataset. May be omitted for some resources due to performance reasons",
          "name": "totalPages"
        },
        {
          "type": "integer",
          "description": "The total number of elements in a dataset. May be omitted for some resource due to performance reasons",
          "name": "totalElements"
        }
      ]
    },
    {
      "name": "GetExtensionListResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the extension list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of extensions with extension information",
          "items": {
            "$ref": "GetExtensionListInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": false
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": false
        }
      ]
    },
    {
      "name": "GetExtensionInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "$ref": "GetExtensionAccountInfo",
          "name": "account"
        },
        {
          "$ref": "ContactInfo",
          "name": "contact"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "array",
          "description": "Information on department extension(s), to which the requested extension belongs. Returned only for user extensions, members of department, requested by single extensionId. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "items": {
            "$ref": "DepartmentInfo"
          },
          "name": "departments"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "extensionNumbers"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination of the specified first name and last name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding account ID/extension ID for each partner ID of a client application. In request URIs partner IDs are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding account IDs and extension IDs. In all request and response bodies these values are reflected via partnerId attributes of account and extension",
          "name": "partnerId"
        },
        {
          "$ref": "ExtensionPermissions",
          "name": "permissions"
        },
        {
          "$ref": "ProfileImageInfo",
          "name": "profileImage"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        },
        {
          "type": "array",
          "items": {
            "$ref": "Roles"
          },
          "name": "roles"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "array",
          "description": "Extension service features returned in response only when the logged-in user requests his/her own extension info, see also Extension Service Features",
          "items": {
            "$ref": "ExtensionServiceFeatureInfo"
          },
          "name": "serviceFeatures"
        },
        {
          "type": "string",
          "description": "Specifies extension configuration wizard state (web service setup).",
          "default": "NotStarted",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "name": "setupWizardState"
        },
        {
          "type": "string",
          "description": "Extension current state. If 'Unassigned' is specified, then extensions without ‘extensionNumber’ are returned. If not specified, then all extensions are returned",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "FaxUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Bot",
            "Room",
            "Limited",
            "Site",
            "ProxyAdmin",
            "DelegatedLinesGroup",
            "GroupCallPickup"
          ],
          "name": "type"
        },
        {
          "$ref": "CallQueueExtensionInfo",
          "name": "callQueueInfo"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for extensions of User type only",
          "name": "hidden"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        }
      ]
    },
    {
      "name": "GetExtensionListInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an extension",
          "format": "int64",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "$ref": "ContactInfo",
          "name": "contact"
        },
        {
          "type": "string",
          "description": "Number of an extension",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Extension name. For user extension types the value is a combination of the specified first name and last name",
          "name": "name"
        },
        {
          "$ref": "ExtensionPermissions",
          "name": "permissions"
        },
        {
          "$ref": "ProfileImageInfo",
          "name": "profileImage"
        },
        {
          "type": "string",
          "description": "Extension current state. If 'Unassigned' is specified, then extensions without ‘extensionNumber’ are returned. If not specified, then all extensions are returned",
          "enum": [
            "Enabled",
            "Disabled",
            "Frozen",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "FaxUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Bot",
            "Room",
            "Limited",
            "Site",
            "ProxyAdmin",
            "DelegatedLinesGroup",
            "GroupCallPickup"
          ],
          "name": "type"
        },
        {
          "$ref": "CallQueueExtensionInfo",
          "name": "callQueueInfo"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for extensions of User type only",
          "name": "hidden"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        }
      ]
    },
    {
      "name": "GetExtensionAccountInfo",
      "description": "Account information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an account",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ContactInfo",
      "description": "Contact detailed information",
      "fields": [
        {
          "type": "string",
          "description": "For User extension type only. Extension user first name",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "For User extension type only. Extension user last name",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Extension user company name",
          "name": "company"
        },
        {
          "type": "string",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Email of extension user",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Extension user contact phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Extension user mobile (**non** Toll Free) phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format",
          "name": "mobilePhone"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "boolean",
          "description": "If 'True' then contact email is enabled as login name for this user. Please note that email should be unique in this case.",
          "default": false,
          "name": "emailAsLoginName"
        },
        {
          "$ref": "PronouncedNameInfo",
          "name": "pronouncedName"
        },
        {
          "type": "string",
          "description": "Extension user department, if any",
          "name": "department"
        }
      ]
    },
    {
      "name": "ContactBusinessAddressInfo",
      "description": "Extension user business address. The default is Company (Auto-Receptionist) settings",
      "fields": [
        {
          "type": "string",
          "description": "Country name of an extension user company",
          "name": "country"
        },
        {
          "type": "string",
          "description": "State/province name of an extension user company. Mandatory for the USA, UK and Canada",
          "name": "state"
        },
        {
          "type": "string",
          "description": "City name of an extension user company",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Street address of an extension user company",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Zip code of an extension user company",
          "name": "zip"
        }
      ]
    },
    {
      "name": "DepartmentInfo",
      "description": "Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a department extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a department extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Number of a department extension",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "ExtensionPermissions",
      "description": "Extension permissions, corresponding to the Service Web permissions 'Admin' and 'InternationalCalling'",
      "fields": [
        {
          "$ref": "PermissionInfoAdmin",
          "name": "admin"
        },
        {
          "$ref": "PermissionInfoInt",
          "name": "internationalCalling"
        }
      ]
    },
    {
      "name": "PermissionInfoAdmin",
      "description": "Admin permission",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a permission is enabled or not",
          "name": "enabled"
        }
      ]
    },
    {
      "name": "PermissionInfoInt",
      "description": "International Calling permission",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a permission is enabled or not",
          "name": "enabled"
        }
      ]
    },
    {
      "name": "ProfileImageInfo",
      "description": "Information on profile image",
      "fields": [
        {
          "type": "string",
          "description": "Link to a profile image. If an image is not uploaded for an extension, only uri is returned",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Identifier of an image",
          "name": "etag",
          "required": false
        },
        {
          "type": "string",
          "description": "The datetime when an image was last updated in ISO 8601 format, for example 2016-03-10T18:07:52.534Z",
          "format": "date-time",
          "name": "lastModified",
          "required": false
        },
        {
          "type": "string",
          "description": "The type of an image",
          "name": "contentType",
          "required": false
        },
        {
          "type": "array",
          "description": "List of URIs to profile images in different dimensions",
          "items": {
            "$ref": "ProfileImageInfoURI"
          },
          "name": "scales",
          "required": false
        }
      ]
    },
    {
      "name": "ProfileImageInfoURI",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        }
      ]
    },
    {
      "name": "ReferenceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Non-RC identifier of an extension",
          "name": "ref"
        },
        {
          "type": "string",
          "description": "Type of external identifier",
          "enum": [
            "PartnerId",
            "CustomerDirectoryId"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "RegionalSettings",
      "description": "Regional data (timezone, home country, language) of an extension/account. The default is Company (Auto-Receptionist) settings",
      "fields": [
        {
          "$ref": "CountryInfo",
          "name": "homeCountry"
        },
        {
          "$ref": "TimezoneInfo",
          "name": "timezone"
        },
        {
          "$ref": "LanguageInfo",
          "name": "language"
        },
        {
          "$ref": "GreetingLanguageInfo",
          "name": "greetingLanguage"
        },
        {
          "$ref": "FormattingLocaleInfo",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Time format setting. The default value is '12h' = ['12h', '24h']",
          "enum": [
            "12h",
            "24h"
          ],
          "name": "timeFormat"
        }
      ]
    },
    {
      "name": "AccountRegionalSettings",
      "description": "Account level region data (web service Auto-Receptionist settings)",
      "fields": [
        {
          "$ref": "CountryInfo",
          "name": "homeCountry"
        },
        {
          "$ref": "TimezoneInfo",
          "name": "timezone"
        },
        {
          "$ref": "LanguageInfo",
          "name": "language"
        },
        {
          "$ref": "GreetingLanguageInfo",
          "name": "greetingLanguage"
        },
        {
          "$ref": "FormattingLocaleInfo",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Time format setting. The default value is '12h' = ['12h', '24h']",
          "enum": [
            "12h",
            "24h"
          ],
          "name": "timeFormat"
        },
        {
          "$ref": "CurrencyInfo",
          "name": "currency"
        }
      ]
    },
    {
      "name": "TimezoneInfo",
      "description": "Extension timezone information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a timezone",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a timezone",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Short name of a timezone",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Meaningful description of the timezone",
          "name": "description"
        },
        {
          "type": "string",
          "name": "bias"
        }
      ]
    },
    {
      "name": "LanguageInfo",
      "description": "User interface language data",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a language",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a language is available as greeting language",
          "name": "greeting"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a language is available as formatting locale",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Localization code of a language",
          "name": "localeCode"
        },
        {
          "type": "string",
          "description": "Country code according to the ISO standard, see [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a language",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a language is available as UI language",
          "name": "ui"
        }
      ]
    },
    {
      "name": "GreetingLanguageInfo",
      "description": "Information on language used for telephony greetings",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a greeting language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Localization code of a greeting language",
          "name": "localeCode"
        },
        {
          "type": "string",
          "description": "Official name of a greeting language",
          "name": "name"
        }
      ]
    },
    {
      "name": "FormattingLocaleInfo",
      "description": "Formatting language preferences for numbers, dates and currencies",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a formatting language",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Localization code of a formatting language",
          "name": "localeCode"
        },
        {
          "type": "string",
          "description": "Official name of a formatting language",
          "name": "name"
        }
      ]
    },
    {
      "name": "ExtensionServiceFeatureInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Feature status; shows feature availability for an extension",
          "name": "enabled"
        },
        {
          "type": "string",
          "description": "Feature name",
          "enum": [
            "AccountFederation",
            "Archiver",
            "AutomaticCallRecordingMute",
            "AutomaticInboundCallRecording",
            "AutomaticOutboundCallRecording",
            "BlockedMessageForwarding",
            "Calendar",
            "CallerIdControl",
            "CallForwarding",
            "CallPark",
            "CallParkLocations",
            "CallSupervision",
            "CallSwitch",
            "CallQualitySurvey",
            "Conferencing",
            "ConferencingNumber",
            "ConfigureDelegates",
            "DeveloperPortal",
            "DND",
            "DynamicConference",
            "EmergencyAddressAutoUpdate",
            "EmergencyCalling",
            "EncryptionAtRest",
            "ExternalDirectoryIntegration",
            "Fax",
            "FaxReceiving",
            "FreeSoftPhoneLines",
            "HDVoice",
            "HipaaCompliance",
            "Intercom",
            "InternationalCalling",
            "InternationalSMS",
            "LinkedSoftphoneLines",
            "MMS",
            "MobileVoipEmergencyCalling",
            "OnDemandCallRecording",
            "Pager",
            "PagerReceiving",
            "Paging",
            "PasswordAuth",
            "PromoMessage",
            "Reports",
            "Presence",
            "RCTeams",
            "RingOut",
            "SalesForce",
            "SharedLines",
            "SingleExtensionUI",
            "SiteCodes",
            "SMS",
            "SMSReceiving",
            "SoftPhoneUpdate",
            "TelephonySessions",
            "UserManagement",
            "VideoConferencing",
            "VoipCalling",
            "VoipCallingOnMobile",
            "Voicemail",
            "VoicemailToText",
            "WebPhone"
          ],
          "name": "featureName"
        },
        {
          "type": "string",
          "description": "Reason for limitation of a particular service feature. Returned only if the enabled parameter value is 'False', see Service Feature Limitations and Reasons. When retrieving service features for an extension, the reasons for the limitations, if any, are returned in response",
          "name": "reason"
        }
      ]
    },
    {
      "name": "ExtensionStatusInfo",
      "description": "Status information (reason, comment). Returned for 'Disabled' status only",
      "fields": [
        {
          "type": "string",
          "description": "A free-form user comment, describing the status change reason",
          "name": "comment"
        },
        {
          "type": "string",
          "description": "Type of suspension",
          "enum": [
            "Voluntarily",
            "Involuntarily",
            "SuspendedVoluntarily",
            "SuspendedVoluntarily2"
          ],
          "name": "reason"
        }
      ]
    },
    {
      "name": "CallQueueExtensionInfo",
      "description": "For Call Queue extension type only. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
      "fields": [
        {
          "type": "integer",
          "description": "Target percentage of calls that must be answered by agents within the service level time threshold",
          "name": "slaGoal"
        },
        {
          "type": "integer",
          "description": "Period of time in seconds that is considered to be an acceptable service level",
          "name": "slaThresholdSeconds"
        },
        {
          "type": "boolean",
          "description": "If 'True' abandoned calls (hanged up prior to being served) are included into service level calculation",
          "name": "includeAbandonedCalls"
        },
        {
          "type": "integer",
          "description": "Period of time in seconds specifying abandoned calls duration - calls that are shorter will not be included into the calculation of service level.; zero value means that abandoned calls of any duration will be included into calculation",
          "name": "abandonedThresholdSeconds"
        }
      ]
    },
    {
      "name": "ExtensionCreationRequest",
      "fields": [
        {
          "$ref": "ContactInfoCreationRequest",
          "name": "contact"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "string",
          "description": "Password for extension. If not specified, the password is auto-generated",
          "name": "password"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "description": "Additional extension identifier, created by partner application and applied on client side",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "IVR PIN",
          "name": "ivrPin"
        },
        {
          "type": "string",
          "description": "Specifies extension configuration wizard state (web service setup).",
          "default": "NotStarted",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "name": "setupWizardState"
        },
        {
          "$ref": "SiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension current state",
          "enum": [
            "Enabled",
            "Disabled",
            "NotActivated",
            "Unassigned",
            "Frozen"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "ParkLocation",
            "Limited"
          ],
          "name": "type"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for extensions of User type only. For unassigned extensions the value is set to 'True' by default. For assigned extensions the value is set to 'False' by default",
          "name": "hidden"
        }
      ]
    },
    {
      "name": "ContactInfoCreationRequest",
      "description": "Contact Information",
      "fields": [
        {
          "type": "string",
          "description": "For User extension type only. Extension user first name",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "For User extension type only. Extension user last name",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Extension user company name",
          "name": "company"
        },
        {
          "type": "string",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Email of extension user",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Extension user contact phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Extension user mobile (**non** Toll Free) phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format",
          "name": "mobilePhone"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "boolean",
          "description": " If 'True' then contact email is enabled as login name for this user. Please note that email should be unique in this case. The default value is 'False'",
          "name": "emailAsLoginName"
        },
        {
          "$ref": "PronouncedNameInfo",
          "name": "pronouncedName"
        },
        {
          "type": "string",
          "description": "Extension user department, if any",
          "name": "department"
        }
      ]
    },
    {
      "name": "PronouncedNameInfo",
      "fields": [
        {
          "type": "string",
          "description": "Voice name type. 'Default' - default extension name; first name and last name specified in user profile; 'TextToSpeech' - custom text; user name spelled the way it sounds and specified by user; 'Recorded' - custom audio, user name recorded in user's own voice (supported only for extension retrieval)",
          "enum": [
            "Default",
            "TextToSpeech",
            "Recorded"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Custom text",
          "name": "text"
        },
        {
          "$ref": "PronouncedNamePromptInfo",
          "name": "prompt"
        }
      ]
    },
    {
      "name": "PronouncedNamePromptInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a prompt resource",
          "name": "contentUri"
        },
        {
          "type": "string",
          "description": "Content media type",
          "enum": [
            "audio/mpeg",
            "audio/wav"
          ],
          "name": "contentType"
        }
      ]
    },
    {
      "name": "ExtensionUpdateRequest",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "NotActivated",
            "Frozen"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Type of suspension",
          "name": "reason"
        },
        {
          "type": "string",
          "description": "Free Form user comment",
          "name": "comment"
        },
        {
          "type": "string",
          "description": "Extension number available",
          "name": "extensionNumber"
        },
        {
          "$ref": "ContactInfoUpdateRequest",
          "name": "contact"
        },
        {
          "$ref": "ExtensionRegionalSettingRequest",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "name": "setupWizardState"
        },
        {
          "type": "string",
          "description": "Additional extension identifier, created by partner application and applied on client side",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "IVR PIN",
          "name": "ivrPin"
        },
        {
          "type": "string",
          "description": "Password for extension",
          "name": "password"
        },
        {
          "$ref": "CallQueueInfoRequest",
          "name": "callQueueInfo"
        },
        {
          "type": "object",
          "$ref": "UserTransitionInfo",
          "name": "transition"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for extensions of User type only",
          "name": "hidden"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "Fax User",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "DelegatedLinesGroup",
            "GroupCallPickup"
          ],
          "name": "type"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        }
      ]
    },
    {
      "name": "UserTransitionInfo",
      "description": "For NotActivated extensions only. Welcome email settings",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a welcome/activation email is sent to the existing users during account confirmation",
          "name": "sendWelcomeEmailsToUsers"
        },
        {
          "type": "boolean",
          "description": "Specifies if a welcome/activation email is sent to the new users (within extension status changing from 'Unsassigned' to 'NotActivated/Disabled')",
          "name": "sendWelcomeEmail"
        }
      ]
    },
    {
      "name": "CustomFieldInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a custom field",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Custom field value",
          "name": "value"
        },
        {
          "type": "string",
          "name": "displayName"
        }
      ]
    },
    {
      "name": "ContactInfoUpdateRequest",
      "fields": [
        {
          "type": "string",
          "description": "For User extension type only. Extension user first name",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "For User extension type only. Extension user last name",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Extension user company name",
          "name": "company"
        },
        {
          "type": "string",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Email of extension user",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Extension user contact phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "Extension user mobile (**non** Toll Free) phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format",
          "name": "mobilePhone"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "boolean",
          "description": " If 'True' then contact email is enabled as login name for this user. Please note that email should be unique in this case. The default value is 'False'",
          "name": "emailAsLoginName"
        },
        {
          "$ref": "PronouncedNameInfo",
          "name": "pronouncedName"
        },
        {
          "type": "string",
          "description": "Extension user department, if any",
          "name": "department"
        }
      ]
    },
    {
      "name": "CallQueueInfoRequest",
      "description": "For Call Queue extension type only. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
      "fields": [
        {
          "type": "integer",
          "description": "Target percentage of calls that must be answered by agents within the service level time threshold",
          "name": "slaGoal"
        },
        {
          "type": "integer",
          "name": "slaThresholdSeconds"
        },
        {
          "type": "boolean",
          "name": "includeAbandonedCalls"
        },
        {
          "type": "integer",
          "name": "abandonedThresholdSeconds"
        }
      ]
    },
    {
      "name": "ExtensionRegionalSettingRequest",
      "fields": [
        {
          "$ref": "ExtensionCountryInfoRequest",
          "name": "homeCountry"
        },
        {
          "$ref": "ExtensionTimezoneInfoRequest",
          "name": "timezone"
        },
        {
          "$ref": "ExtensionLanguageInfoRequest",
          "name": "language"
        },
        {
          "$ref": "ExtensionGreetingLanguageInfoRequest",
          "name": "greetingLanguage"
        },
        {
          "$ref": "ExtensionFormattingLocaleInfoRequest",
          "name": "formattingLocale"
        },
        {
          "type": "string",
          "description": "Time format setting",
          "default": "12h",
          "enum": [
            "12h",
            "24h"
          ],
          "name": "timeFormat"
        }
      ]
    },
    {
      "name": "ExtensionCountryInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "internal Identifier of a country",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionTimezoneInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "internal Identifier of a timezone",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionLanguageInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "internal Identifier of a language",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionGreetingLanguageInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "internal Identifier of a greeting language",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionFormattingLocaleInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal Identifier of a formatting language",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionCallerIdInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URL of a caller ID resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallerIdByDevice"
          },
          "name": "byDevice"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallerIdByFeature"
          },
          "name": "byFeature"
        },
        {
          "type": "boolean",
          "description": "If 'True', then user first name and last name will be used as caller ID when making outbound calls from extension",
          "name": "extensionNameForOutboundCalls"
        },
        {
          "type": "boolean",
          "description": "If 'True', then extension number will be used as caller ID when making internal calls",
          "name": "extensionNumberForInternalCalls"
        }
      ]
    },
    {
      "name": "CallerIdByDevice",
      "description": "Caller ID settings by device",
      "fields": [
        {
          "$ref": "CallerIdDeviceInfo",
          "name": "device"
        },
        {
          "$ref": "CallerIdByDeviceInfo",
          "name": "callerId"
        }
      ]
    },
    {
      "name": "CallerIdByFeature",
      "description": "Caller ID settings by feature",
      "fields": [
        {
          "type": "string",
          "enum": [
            "RingOut",
            "RingMe",
            "CallFlip",
            "FaxNumber",
            "AdditionalSoftphone",
            "Alternate",
            "CommonPhone",
            "MobileApp",
            "Delegated"
          ],
          "name": "feature"
        },
        {
          "$ref": "CallerIdByFeatureInfo",
          "name": "callerId"
        }
      ]
    },
    {
      "name": "CallerIdDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a device resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a device",
          "name": "name"
        }
      ]
    },
    {
      "name": "CallerIdByDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "If 'PhoneNumber' value is specified, then a certain phone number is shown as a caller ID when using this telephony feature. If 'Blocked' value is specified, then a caller ID is hidden. The value 'CurrentLocation' can be specified for 'RingOut' feature only. The default is 'PhoneNumber' = ['PhoneNumber', 'Blocked', 'CurrentLocation']",
          "name": "type"
        },
        {
          "$ref": "CallerIdPhoneInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "CallerIdByFeatureInfo",
      "fields": [
        {
          "type": "string",
          "description": "If 'PhoneNumber' value is specified, then a certain phone number is shown as a caller ID when using this telephony feature. If 'Blocked' value is specified, then a caller ID is hidden. The value 'CurrentLocation' can be specified for 'RingOut' feature only. The default is 'PhoneNumber' = ['PhoneNumber', 'Blocked', 'CurrentLocation']",
          "name": "type"
        },
        {
          "$ref": "CallerIdPhoneInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "CallerIdPhoneInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a phone number resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (with '+' sign) format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "GetConferencingInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a conferencing",
          "name": "uri"
        },
        {
          "type": "boolean",
          "description": "Determines if host user allows conference participants to join before the host",
          "name": "allowJoinBeforeHost"
        },
        {
          "type": "string",
          "description": "Access code for a host user",
          "name": "hostCode"
        },
        {
          "type": "string",
          "description": "Internal parameter specifying conferencing engine",
          "name": "mode"
        },
        {
          "type": "string",
          "description": "Access code for any participant",
          "name": "participantCode"
        },
        {
          "type": "string",
          "description": "Primary conference phone number for user's home country returned in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Short URL leading to the service web page Tap to Join for audio conference bridge",
          "name": "tapToJoinUri"
        },
        {
          "type": "array",
          "description": "List of multiple dial-in phone numbers to connect to audio conference service, relevant for user's brand. Each number is given with the country and location information, in order to let the user choose the less expensive way to connect to a conference. The first number in the list is the primary conference number, that is default and domestic",
          "items": {
            "$ref": "PhoneNumberInfoConferencing"
          },
          "name": "phoneNumbers"
        }
      ]
    },
    {
      "name": "PhoneNumberInfoConferencing",
      "fields": [
        {
          "$ref": "GetCountryInfoConferencing",
          "name": "country"
        },
        {
          "type": "boolean",
          "description": "'True' if the number is default for the conference. Default conference number is a domestic number that can be set by user (otherwise it is set by the system). Only one default number per country is allowed",
          "name": "default"
        },
        {
          "type": "boolean",
          "description": "'True' if the greeting message is played on this number",
          "name": "hasGreeting"
        },
        {
          "type": "string",
          "description": "Location (city, region, state) of a conference phone number",
          "name": "location"
        },
        {
          "type": "string",
          "description": "Dial-in phone number to connect to a conference",
          "name": "phoneNumber"
        },
        {
          "type": "boolean",
          "description": "Indicates if the number is 'premium' (account phone number with the `ConferencingNumber` usageType)",
          "name": "premium"
        }
      ]
    },
    {
      "name": "GetCountryInfoConferencing",
      "description": "Information on a home country of a conference phone number",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Country calling code defined by ITU-T recommendations [E.123](https://www.itu.int/rec/T-REC-E.123-200102-I/en) and [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)",
          "name": "callingCode"
        },
        {
          "type": "boolean",
          "description": "Emergency calling feature availability/emergency address requirement indicator",
          "name": "emergencyCalling"
        },
        {
          "type": "string",
          "description": "Country code according to the ISO standard, see [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a country",
          "name": "name"
        }
      ]
    },
    {
      "name": "GetExtensionGrantListResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of extension grants",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of extension grants with details",
          "items": {
            "$ref": "GrantInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "GrantInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a grant",
          "name": "uri"
        },
        {
          "$ref": "ExtensionInfoGrants",
          "name": "extension"
        },
        {
          "type": "boolean",
          "description": "Specifies if picking up of other extensions' calls is allowed for the extension. If 'Presence' feature is disabled for the given extension, the flag is not returned",
          "name": "callPickup"
        },
        {
          "type": "boolean",
          "description": "Specifies if monitoring of other extensions' calls is allowed for the extension. If 'CallMonitoring' feature is disabled for the given extension, the flag is not returned",
          "name": "callMonitoring"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is able to make or receive calls on behalf of the user referenced in extension object",
          "name": "callOnBehalfOf"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension can delegate a call to the user referenced in extension object",
          "name": "callDelegation"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is allowed to call Paging Only group referenced to in extension object",
          "name": "groupPaging"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is assigned as a Full-Access manager in the call queue referenced in extension object",
          "name": "callQueueSetup"
        },
        {
          "type": "boolean",
          "description": "Specifies whether the current extension is assigned as a Members-Only manager in the call queue referenced in extension object",
          "name": "callQueueMembersSetup"
        }
      ]
    },
    {
      "name": "ExtensionInfoGrants",
      "description": "Extension information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension short number (usually 3 or 4 digits)",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of extension",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "Fax User",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "UpdateConferencingInfoRequest",
      "fields": [
        {
          "type": "array",
          "description": "Multiple dial-in phone numbers to connect to audio conference service, relevant for user's brand. Each number is given with the country and location information, in order to let the user choose the less expensive way to connect to a conference. The first number in the list is the primary conference number, that is default and domestic",
          "items": {
            "$ref": "ConferencePhoneNumberInfo"
          },
          "name": "phoneNumbers"
        },
        {
          "type": "boolean",
          "description": "Determines if host user allows conference participants to join before the host",
          "name": "allowJoinBeforeHost"
        }
      ]
    },
    {
      "name": "ConferencePhoneNumberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Dial-in phone number to connect to a conference",
          "name": "phoneNumber"
        },
        {
          "type": "boolean",
          "description": "'True' if the number is default for the conference. Default conference number is a domestic number that can be set by user (otherwise it is set by the system). Only one default number per country is allowed",
          "name": "default"
        }
      ]
    },
    {
      "name": "NotificationSettings",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of notifications settings resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of extensions specified as email notification recipients. Returned only for call queues where queue managers are assigned as user extensions.",
          "items": {
            "$ref": "EmailRecipientInfo"
          },
          "name": "emailRecipients"
        },
        {
          "type": "array",
          "description": "List of notification recipient email addresses",
          "items": {
            "type": "string"
          },
          "name": "emailAddresses"
        },
        {
          "type": "array",
          "description": "List of notification recipient email addresses",
          "items": {
            "type": "string"
          },
          "name": "smsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Specifies notifications settings mode. If 'True' then advanced mode is on, it allows using different emails and/or phone numbers for each notification type. If 'False' then basic mode is on. Advanced mode settings are returned in both modes, if specified once, but if basic mode is switched on, they are not applied ",
          "name": "advancedMode"
        },
        {
          "$ref": "VoicemailsInfo",
          "name": "voicemails"
        },
        {
          "$ref": "InboundFaxesInfo",
          "name": "inboundFaxes"
        },
        {
          "$ref": "OutboundFaxesInfo",
          "name": "outboundFaxes"
        },
        {
          "$ref": "InboundTextsInfo",
          "name": "inboundTexts"
        },
        {
          "$ref": "MissedCallsInfo",
          "name": "missedCalls"
        }
      ]
    },
    {
      "name": "EmailRecipientInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "User full name",
          "name": "fullName"
        },
        {
          "type": "string",
          "description": "User extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Current state of an extension",
          "enum": [
            "Enabled",
            "Disable",
            "NotActivated",
            "Unassigned"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "description": "List of user email addresses from extension notification settings. By default main email address from contact information is returned",
          "items": {
            "type": "string"
          },
          "name": "emailAddresses"
        },
        {
          "type": "string",
          "description": "Call queue manager permission",
          "enum": [
            "FullAccess",
            "MembersOnly"
          ],
          "name": "permission"
        }
      ]
    },
    {
      "name": "NotificationSettingsUpdateRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of notification recipient email addresses",
          "items": {
            "type": "string"
          },
          "name": "emailAddresses"
        },
        {
          "type": "array",
          "description": "List of notification recipient email addresses",
          "items": {
            "type": "string"
          },
          "name": "smsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Specifies notifications settings mode. If 'True' then advanced mode is on, it allows using different emails and/or phone numbers for each notification type. If 'False' then basic mode is on. Advanced mode settings are returned in both modes, if specified once, but if basic mode is switched on, they are not applied ",
          "name": "advancedMode"
        },
        {
          "$ref": "VoicemailsInfo",
          "name": "voicemails"
        },
        {
          "$ref": "InboundFaxesInfo",
          "name": "inboundFaxes"
        },
        {
          "$ref": "OutboundFaxesInfo",
          "name": "outboundFaxes"
        },
        {
          "$ref": "InboundTextsInfo",
          "name": "inboundTexts"
        },
        {
          "$ref": "MissedCallsInfo",
          "name": "missedCalls"
        }
      ]
    },
    {
      "name": "VoicemailsInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for voicemail notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for voicemail notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Indicates whether voicemail should be attached to email",
          "name": "includeAttachment"
        },
        {
          "type": "boolean",
          "description": "Specifies whether to add voicemail transcription or not",
          "name": "includeTranscription"
        },
        {
          "type": "boolean",
          "description": "Indicates whether a voicemail should be automatically marked as read",
          "name": "markAsRead"
        }
      ]
    },
    {
      "name": "InboundFaxesInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for inbound fax notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for inbound fax notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        },
        {
          "type": "boolean",
          "description": "Indicates whether fax should be attached to email",
          "name": "includeAttachment"
        },
        {
          "type": "boolean",
          "description": "Indicates whether email should be automatically marked as read",
          "name": "markAsRead"
        }
      ]
    },
    {
      "name": "OutboundFaxesInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for outbound fax notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for outbound fax notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        }
      ]
    },
    {
      "name": "InboundTextsInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for inbound text message notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for inbound text message notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        }
      ]
    },
    {
      "name": "MissedCallsInfo",
      "fields": [
        {
          "type": "boolean",
          "description": "Email notification flag",
          "name": "notifyByEmail"
        },
        {
          "type": "boolean",
          "description": "SMS notification flag",
          "name": "notifyBySms"
        },
        {
          "type": "array",
          "description": "List of recipient email addresses for missed call notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedEmailAddresses"
        },
        {
          "type": "array",
          "description": "List of recipient phone numbers for missed call notifications. Returned if specified, in both modes (advanced/basic). Applied in advanced mode only",
          "items": {
            "type": "string"
          },
          "name": "advancedSmsEmailAddresses"
        }
      ]
    },
    {
      "name": "GetAccountInfoResponse",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of an account",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of an account",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account in the billing system",
          "name": "bsid"
        },
        {
          "type": "string",
          "description": "Main phone number of the current account",
          "name": "mainNumber"
        },
        {
          "$ref": "AccountOperatorInfo",
          "name": "operator"
        },
        {
          "type": "string",
          "description": "Additional account identifier, created by partner application and applied on client side",
          "name": "partnerId"
        },
        {
          "$ref": "ServiceInfo",
          "name": "serviceInfo"
        },
        {
          "type": "string",
          "description": "Specifies account configuration wizard state (web service setup)",
          "default": "NotStarted",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "name": "setupWizardState"
        },
        {
          "$ref": "SignupInfoResource",
          "name": "signupInfo"
        },
        {
          "type": "string",
          "description": "Status of the current account",
          "enum": [
            "Initial",
            "Confirmed",
            "Unconfirmed",
            "Disabled"
          ],
          "name": "status"
        },
        {
          "$ref": "AccountStatusInfo",
          "name": "statusInfo"
        },
        {
          "$ref": "AccountRegionalSettings",
          "name": "regionalSettings"
        },
        {
          "type": "boolean",
          "description": "Specifies whether an account is included into any federation of accounts or not",
          "name": "federated"
        },
        {
          "type": "integer",
          "description": "If outbound call prefix is not specified, or set to null (0), then the parameter is not returned; the supported value range is 2-9",
          "name": "outboundCallPrefix"
        },
        {
          "type": "string",
          "description": "Customer facing identifier. Returned for accounts with the turned off PBX features. Equals to main company number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) (without '+' sign)format ",
          "name": "cfid"
        },
        {
          "$ref": "AccountLimits",
          "name": "limits"
        }
      ]
    },
    {
      "name": "ServiceInfo",
      "description": "Account service information, including brand, service plan and billing plan",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a service info resource",
          "name": "uri"
        },
        {
          "$ref": "BillingPlanInfo",
          "name": "billingPlan"
        },
        {
          "$ref": "BrandInfo",
          "name": "brand"
        },
        {
          "$ref": "ServicePlanInfo",
          "name": "servicePlan"
        },
        {
          "$ref": "TargetServicePlanInfo",
          "name": "targetServicePlan"
        },
        {
          "$ref": "ContractedCountryInfo",
          "name": "contractedCountry"
        }
      ]
    },
    {
      "name": "ContractedCountryInfo",
      "description": "Information on the contracted country of account",
      "fields": [
        {
          "type": "string",
          "description": "Identifier of a contracted country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a contracted country",
          "name": "uri"
        }
      ]
    },
    {
      "name": "BillingPlanInfo",
      "description": "Information on account billing plan",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a billing plan",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Billing plan name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Duration period",
          "enum": [
            "Day",
            "Month",
            "Year"
          ],
          "name": "durationUnit"
        },
        {
          "type": "integer",
          "description": "Number of duration units",
          "name": "duration"
        },
        {
          "type": "string",
          "description": "Billing plan type",
          "enum": [
            "Initial",
            "Regular",
            "Suspended",
            "Trial",
            "TrialNoCC",
            "Free"
          ],
          "name": "type"
        },
        {
          "type": "integer",
          "description": "Included digital lines count",
          "name": "includedPhoneLines"
        }
      ]
    },
    {
      "name": "BrandInfo",
      "description": "Information on account brand",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a brand",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Brand name, for example  RingCentral UK ,  ClearFax ",
          "name": "name"
        },
        {
          "$ref": "CountryInfo",
          "name": "homeCountry"
        }
      ]
    },
    {
      "name": "ServicePlanInfo",
      "description": "Information on account service plan",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a service plan",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a service plan",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Edition of a service plan",
          "name": "edition"
        },
        {
          "type": "string",
          "enum": [
            "Freyja",
            "Phoenix"
          ],
          "name": "freemiumProductType"
        }
      ]
    },
    {
      "name": "TargetServicePlanInfo",
      "description": "Information on account target service plan",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a target service plan",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a target service plan",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Edition of a service plan",
          "name": "edition"
        },
        {
          "type": "string",
          "enum": [
            "Freyja",
            "Phoenix"
          ],
          "name": "freemiumProductType"
        }
      ]
    },
    {
      "name": "AccountStatusInfo",
      "description": "Status information (reason, comment, lifetime). Returned for 'Disabled' status only",
      "fields": [
        {
          "type": "string",
          "description": "A free-form user comment, describing the status change reason",
          "name": "comment"
        },
        {
          "type": "string",
          "description": "Type of suspension",
          "enum": [
            "SuspendedVoluntarily",
            "SuspendedInvoluntarily",
            "UserResumed"
          ],
          "name": "reason"
        },
        {
          "type": "string",
          "description": "Date until which the account will get deleted. The default value is 30 days since current date",
          "name": "till"
        }
      ]
    },
    {
      "name": "GetServiceInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of the account Service Info resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Account Service Plan name",
          "name": "servicePlanName"
        },
        {
          "$ref": "BrandInfo",
          "name": "brand"
        },
        {
          "$ref": "ContractedCountryInfo",
          "name": "contractedCountry"
        },
        {
          "$ref": "ServicePlanInfo",
          "name": "servicePlan"
        },
        {
          "$ref": "TargetServicePlanInfo",
          "name": "targetServicePlan"
        },
        {
          "$ref": "BillingPlanInfo",
          "name": "billingPlan"
        },
        {
          "type": "array",
          "description": "Service features information, see Service Feature List",
          "items": {
            "$ref": "ServiceFeatureInfo"
          },
          "name": "serviceFeatures"
        },
        {
          "$ref": "AccountLimits",
          "name": "limits"
        },
        {
          "$ref": "PackageInfo",
          "name": "package"
        }
      ]
    },
    {
      "name": "PackageInfo",
      "fields": [
        {
          "type": "string",
          "description": "Billing package version",
          "name": "version"
        },
        {
          "type": "string",
          "description": "Billing package identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "AccountLimits",
      "description": "Limits which are effective for the account",
      "fields": [
        {
          "type": "integer",
          "description": "Max number of free softphone phone lines per user extension",
          "name": "freeSoftPhoneLinesPerExtension"
        },
        {
          "type": "integer",
          "description": "Max number of participants in RingCentral meeting hosted by this account's user",
          "name": "meetingSize"
        },
        {
          "type": "integer",
          "description": "Meetings recording cloud storage limitaion in Gb",
          "name": "cloudRecordingStorage"
        },
        {
          "type": "integer",
          "description": "Max number of extensions which can be included in the list of users monitored for Presence",
          "name": "maxMonitoredExtensionsPerUser"
        },
        {
          "type": "integer",
          "description": "Max length of extension numbers of an account; the supported value is up to 8 symbols, depends on account type",
          "name": "maxExtensionNumberLength"
        },
        {
          "type": "integer",
          "description": "Length of a site code",
          "name": "siteCodeLength"
        },
        {
          "type": "integer",
          "description": "Length of a short extension number",
          "name": "shortExtensionNumberLength"
        }
      ]
    },
    {
      "name": "ServiceFeatureInfo",
      "fields": [
        {
          "type": "string",
          "description": "Feature name",
          "enum": [
            "AccountFederation",
            "Archiver",
            "AutomaticCallRecordingMute",
            "AutomaticInboundCallRecording",
            "AutomaticOutboundCallRecording",
            "BlockedMessageForwarding",
            "Calendar",
            "CallerIdControl",
            "CallForwarding",
            "CallPark",
            "CallParkLocations",
            "CallSupervision",
            "CallSwitch",
            "CallQualitySurvey",
            "Conferencing",
            "ConferencingNumber",
            "ConfigureDelegates",
            "DeveloperPortal",
            "DND",
            "DynamicConference",
            "EmergencyAddressAutoUpdate",
            "EmergencyCalling",
            "EncryptionAtRest",
            "ExternalDirectoryIntegration",
            "Fax",
            "FaxReceiving",
            "FreeSoftPhoneLines",
            "HDVoice",
            "HipaaCompliance",
            "Intercom",
            "InternationalCalling",
            "InternationalSMS",
            "LinkedSoftphoneLines",
            "MMS",
            "MobileVoipEmergencyCalling",
            "OnDemandCallRecording",
            "Pager",
            "PagerReceiving",
            "Paging",
            "PasswordAuth",
            "PromoMessage",
            "Reports",
            "Presence",
            "RCTeams",
            "RingOut",
            "SalesForce",
            "SharedLines",
            "SingleExtensionUI",
            "SiteCodes",
            "SMS",
            "SMSReceiving",
            "SoftPhoneUpdate",
            "TelephonySessions",
            "UserManagement",
            "VideoConferencing",
            "VoipCalling",
            "VoipCallingOnMobile",
            "Voicemail",
            "VoicemailToText",
            "WebPhone"
          ],
          "name": "featureName"
        },
        {
          "type": "boolean",
          "description": "Feature status, shows feature availability for the extension",
          "name": "enabled"
        }
      ]
    },
    {
      "name": "AccountBusinessAddressResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "string",
          "name": "company"
        },
        {
          "type": "string",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Custom site name",
          "name": "mainSiteName"
        }
      ]
    },
    {
      "name": "ModifyAccountBusinessAddressRequest",
      "fields": [
        {
          "type": "string",
          "description": "Company business name",
          "name": "company"
        },
        {
          "type": "string",
          "description": "Company business email address",
          "name": "email"
        },
        {
          "$ref": "BusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "type": "string",
          "description": "Custom site name",
          "name": "mainSiteName"
        }
      ]
    },
    {
      "name": "BusinessAddressInfo",
      "description": "Company business address",
      "fields": [
        {
          "type": "string",
          "description": "Name of a country",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Name of a state/province",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Name of a city",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Street address",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Zip code",
          "name": "zip"
        }
      ]
    },
    {
      "name": "SignupInfoResource",
      "description": "Account sign up data",
      "fields": [
        {
          "type": "boolean",
          "default": false,
          "name": "tosAccepted"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AccountCreated",
              "BillingEntered",
              "CreditCardApproved",
              "AccountConfirmed",
              "PhoneVerificationRequired",
              "PhoneVerificationPassed"
            ]
          },
          "name": "signupState"
        },
        {
          "type": "string",
          "enum": [
            "CC_Failed",
            "Phone_Suspicious",
            "CC_Phone_Not_Match",
            "AVS_Not_Available",
            "MaxMind",
            "CC_Blacklisted",
            "Email_Blacklisted",
            "Phone_Blacklisted",
            "Cookie_Blacklisted",
            "Device_Blacklisted",
            "IP_Blacklisted",
            "Agent_Instance_Blacklisted",
            "Charge_Limit",
            "Other_Country",
            "Unknown"
          ],
          "name": "verificationReason"
        },
        {
          "type": "boolean",
          "description": "Updates 'Send Marketing Information' flag on web interface",
          "name": "marketingAccepted"
        }
      ]
    },
    {
      "name": "LanguageList",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of the language list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "Language data",
          "items": {
            "$ref": "LanguageInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "GetCountryListResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of countries supported",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of countries with the country data",
          "items": {
            "$ref": "GetCountryInfoDictionaryResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "GetCountryInfoDictionaryResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a country",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Country calling code defined by ITU-T recommendations [E.123](https://www.itu.int/rec/T-REC-E.123-200102-I/en) and [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)",
          "name": "callingCode"
        },
        {
          "type": "boolean",
          "description": "Emergency calling feature availability/emergency address requirement indicator",
          "name": "emergencyCalling"
        },
        {
          "type": "string",
          "description": "Country code according to the ISO standard, see [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a country",
          "name": "name"
        },
        {
          "type": "boolean",
          "description": "Determines whether phone numbers are available for a country",
          "name": "numberSelling"
        },
        {
          "type": "boolean",
          "description": "Specifies whether login with the phone numbers of this country is enabled or not",
          "name": "loginAllowed"
        },
        {
          "type": "boolean",
          "description": "Indicates whether signup/billing is allowed for a country",
          "name": "signupAllowed"
        },
        {
          "type": "boolean",
          "description": "Specifies if free phone line for softphone is available for a country or not",
          "name": "freeSoftphoneLine"
        }
      ]
    },
    {
      "name": "GetLocationListResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the location list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of locations",
          "items": {
            "$ref": "LocationInfo"
          },
          "name": "records",
          "required": false
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "LocationInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of a location",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Area code of the location",
          "name": "areaCode"
        },
        {
          "type": "string",
          "description": "Official name of the city, belonging to the certain state",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Area code of the location (3-digit usually), according to the NANP number format, that can be summarized as NPA-NXX-xxxx and covers Canada, the United States, parts of the Caribbean Sea, and some Atlantic and Pacific islands. See for details North American Numbering Plan",
          "name": "npa"
        },
        {
          "type": "string",
          "description": "Central office code of the location, according to the NANP number format, that can be summarized as NPA-NXX-xxxx and covers Canada, the United States, parts of the Caribbean Sea, and some Atlantic and Pacific islands. See for details North American Numbering Plan",
          "name": "nxx"
        },
        {
          "$ref": "LocationStateInfo",
          "name": "state"
        }
      ]
    },
    {
      "name": "LocationStateInfo",
      "description": "Information on the state this location belongs to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a state resource",
          "name": "uri"
        }
      ]
    },
    {
      "name": "GetStateListResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the states list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of states",
          "items": {
            "$ref": "GetStateInfoResponse"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "GetStateInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a state",
          "name": "uri"
        },
        {
          "$ref": "GetCountryInfoState",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Short code for a state (2-letter usually)",
          "name": "isoCode"
        },
        {
          "type": "string",
          "description": "Official name of a state",
          "name": "name"
        }
      ]
    },
    {
      "name": "GetCountryInfoState",
      "description": "Information on a country the state belongs to",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a state",
          "name": "uri"
        }
      ]
    },
    {
      "name": "GetTimezoneListResponse",
      "fields": [
        {
          "type": "string",
          "description": "Link to the timezone list resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of timezones",
          "items": {
            "$ref": "GetTimezoneInfoResponse"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "GetTimezoneInfoResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a timezone",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Canonical URI of a timezone",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Short name of a timezone",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Description of a timezone",
          "name": "description"
        },
        {
          "type": "string",
          "name": "bias"
        }
      ]
    },
    {
      "name": "CurrencyInfo",
      "description": "Currency information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a currency",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Official code of a currency",
          "name": "code"
        },
        {
          "type": "string",
          "description": "Official name of a currency",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Graphic symbol of a currency",
          "name": "symbol"
        },
        {
          "type": "string",
          "description": "Minor graphic symbol of a currency",
          "name": "minorSymbol"
        }
      ]
    },
    {
      "name": "AccountOperatorInfo",
      "description": "Operator's extension information. This extension will receive all calls and messages intended for the operator.",
      "fields": [
        {
          "type": "string",
          "description": "Link to an operator extension resource",
          "name": "uri"
        },
        {
          "type": "integer",
          "description": "Internal identifier of an operator extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Number of an operator extension",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "AccountPhoneNumbers",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of account phone numbers",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of account phone numbers",
          "items": {
            "$ref": "CompanyPhoneNumberInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "Roles",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "description": "Link to a role",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a role",
          "name": "id"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "autoAssigned"
        },
        {
          "type": "string",
          "name": "displayName"
        },
        {
          "type": "boolean",
          "name": "siteCompatible"
        },
        {
          "type": "boolean",
          "name": "siteRestricted"
        }
      ]
    },
    {
      "name": "PagingOnlyGroupUsers",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of users allowed to page the Paging Only group",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of users allowed to page the Paging Only group",
          "items": {
            "$ref": "PagingGroupExtensionInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "PagingGroupExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a paging group user extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a paging group user extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension number of a paging group user",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Name of a paging group user",
          "name": "name"
        }
      ]
    },
    {
      "name": "PagingOnlyGroupDevices",
      "fields": [
        {
          "type": "string",
          "description": "Link to the list of devices assigned to the paging only group",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of paging devices assigned to this group",
          "items": {
            "$ref": "PagingDeviceInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "PagingDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a paging device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a paging device resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a paging device",
          "name": "name"
        }
      ]
    },
    {
      "name": "EditPagingGroupRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of users that will be allowed to page a group specified",
          "items": {
            "type": "string"
          },
          "name": "addedUserIds"
        },
        {
          "type": "array",
          "description": "List of users that will be unallowed to page a group specified",
          "items": {
            "type": "string"
          },
          "name": "removedUserIds"
        },
        {
          "type": "array",
          "description": "List of account devices that will be assigned to a paging group specified",
          "items": {
            "type": "string"
          },
          "name": "addedDeviceIds"
        },
        {
          "type": "array",
          "description": "List of account devices that will be unassigned from a paging group specified",
          "items": {
            "type": "string"
          },
          "name": "removedDeviceIds"
        }
      ]
    },
    {
      "name": "ErrorEntity",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message"
        },
        {
          "type": "string",
          "description": "Name of invalid parameter",
          "name": "parameterName"
        },
        {
          "type": "string",
          "description": "Value of invalid parameter",
          "name": "parameterValue"
        }
      ]
    },
    {
      "name": "EmergencyLocationList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "EmergencyLocationInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "EmergencyLocationInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the emergency response location",
          "name": "id"
        },
        {
          "$ref": "EmergencyLocationAddressInfo",
          "name": "address"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        },
        {
          "$ref": "ShortSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Status of emergency response location usage.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "usageStatus"
        },
        {
          "type": "string",
          "description": "Visibility of an emergency response location. If `Private` is set, then location is visible only for restricted number of users, specified in `owners` array",
          "default": "Public",
          "enum": [
            "Private",
            "Public"
          ],
          "name": "visibility"
        },
        {
          "type": "array",
          "description": "List of private location owners",
          "items": {
            "$ref": "LocationOwnerInfo"
          },
          "name": "owners"
        }
      ]
    },
    {
      "name": "EmergencyLocationInfo",
      "description": "Company emergency response location details",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the emergency response location",
          "name": "id"
        },
        {
          "$ref": "EmergencyLocationAddressInfo",
          "name": "address"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        },
        {
          "$ref": "ShortSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Emergency address status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "addressStatus"
        },
        {
          "type": "string",
          "description": "Status of emergency response location usage.",
          "enum": [
            "Active",
            "Inactive"
          ],
          "name": "usageStatus"
        },
        {
          "type": "string",
          "description": "Resulting status of emergency address synchronization. Returned if `syncEmergencyAddress` parameter is set to 'True'",
          "enum": [
            "Verified",
            "Updated",
            "Deleted",
            "ActivationProcess",
            "Unsupported",
            "Failed"
          ],
          "name": "syncStatus"
        },
        {
          "type": "string",
          "description": "Visibility of an emergency response location. If `Private` is set, then location is visible only for restricted number of users, specified in `owners` array",
          "default": "Public",
          "enum": [
            "Private",
            "Public"
          ],
          "name": "visibility"
        },
        {
          "type": "array",
          "description": "List of private location owners",
          "items": {
            "$ref": "LocationOwnerInfo"
          },
          "name": "owners"
        }
      ]
    },
    {
      "name": "LocationOwnerInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a user - private location owner",
          "name": "id"
        }
      ]
    },
    {
      "name": "EmergencyLocationAddressInfo",
      "fields": [
        {
          "type": "string",
          "description": "Country name",
          "name": "country"
        },
        {
          "type": "string",
          "description": "Internal identifier of a country",
          "name": "countryId"
        },
        {
          "type": "string",
          "description": "ISO code of a country",
          "name": "countryIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a country",
          "name": "countryName"
        },
        {
          "type": "string",
          "description": "State/Province name. Mandatory for the USA, the UK and Canada",
          "name": "state"
        },
        {
          "type": "string",
          "description": "Internal identifier of a state",
          "name": "stateId"
        },
        {
          "type": "string",
          "description": "ISO code of a state",
          "name": "stateIsoCode"
        },
        {
          "type": "string",
          "description": "Full name of a state",
          "name": "stateName"
        },
        {
          "type": "string",
          "description": "City name",
          "name": "city"
        },
        {
          "type": "string",
          "description": "First line address",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Second line address (apartment, suite, unit, building, floor, etc.)",
          "name": "street2"
        },
        {
          "type": "string",
          "description": "Postal (Zip) code",
          "name": "zip"
        },
        {
          "type": "string",
          "description": "Customer name",
          "name": "customerName"
        }
      ]
    },
    {
      "name": "CallQueueBulkAssignResource",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "addedExtensionIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "removedExtensionIds"
        }
      ]
    },
    {
      "name": "BulkAssignAutomaticLocationUpdatesUsers",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "enabledUserIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "name": "disabledUserIds"
        }
      ]
    },
    {
      "name": "CreateWirelessPoint",
      "fields": [
        {
          "type": "string",
          "description": "Unique 48-bit identifier of wireless access point complying with MAC address conventions. The Mask is XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F",
          "name": "bssid",
          "required": true
        },
        {
          "type": "string",
          "description": "Wireless access point name",
          "name": "name",
          "required": true
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site",
          "required": false
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfoRequest",
          "name": "emergencyAddress",
          "required": false
        },
        {
          "type": "string",
          "description": "Deprecated. Internal identifier of the emergency response location (address). Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId",
          "required": false
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation",
          "required": false
        }
      ]
    },
    {
      "name": "UpdateWirelessPoint",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a wireless point",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of wireless access point complying with MAC address conventions. Mask: XX:XX:XX:XX:XX:XX, where X can be a symbol in the range of 0-9 or A-F",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Wireless access point name",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfoRequest",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Deprecated. Internal identifier of the emergency response location (address). Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "WirelessPointsList",
      "fields": [
        {
          "type": "string",
          "description": "Link to the wireless point list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of wireless points with assigned emergency addresses",
          "items": {
            "$ref": "WirelessPointInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "WirelessPointInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to the wireless point resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a wireless point",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of the wireless access point complying with MAC address conventions",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Wireless access point name",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfo",
          "name": "emergencyAddress"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        },
        {
          "type": "string",
          "description": "Deprecated. Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId"
        }
      ]
    },
    {
      "name": "ERLLocationInfo",
      "description": "Emergency response location information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an emergency response location",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Emergency response location name",
          "name": "name"
        }
      ]
    },
    {
      "name": "WirelessPointInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a wireless point",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of the wireless access point complying with MAC address conventions",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Wireless access point name",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfoRequest",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId"
        }
      ]
    },
    {
      "name": "UpdateNetworkRequest",
      "fields": [
        {
          "type": "string",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PublicIpRangeInfo"
          },
          "name": "publicIpRanges"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PrivateIpRangeInfoRequest"
          },
          "name": "privateIpRanges"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "CreateNetworkRequest",
      "fields": [
        {
          "type": "string",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PublicIpRangeInfo"
          },
          "name": "publicIpRanges"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PrivateIpRangeInfoRequest"
          },
          "name": "privateIpRanges"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "PublicIpRangeInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "startIp"
        },
        {
          "type": "string",
          "name": "endIp"
        },
        {
          "type": "boolean",
          "name": "matched"
        }
      ]
    },
    {
      "name": "PrivateIpRangeInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "startIp"
        },
        {
          "type": "string",
          "name": "endIp"
        },
        {
          "type": "string",
          "description": "Network name",
          "name": "name"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfo",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId"
        },
        {
          "type": "boolean",
          "name": "matched"
        }
      ]
    },
    {
      "name": "PrivateIpRangeInfoRequest",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "startIp"
        },
        {
          "type": "string",
          "name": "endIp"
        },
        {
          "type": "string",
          "description": "Network name",
          "name": "name"
        },
        {
          "$ref": "LocationUpdatesEmergencyAddressInfoRequest",
          "name": "emergencyAddress"
        },
        {
          "type": "string",
          "description": "Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned",
          "name": "emergencyLocationId"
        }
      ]
    },
    {
      "name": "CallMonitoringBulkAssign",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CallMonitoringExtensionInfo"
          },
          "name": "addedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallMonitoringExtensionInfo"
          },
          "name": "updatedExtensions"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallMonitoringExtensionInfo"
          },
          "name": "removedExtensions"
        }
      ]
    },
    {
      "name": "CallMonitoringExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension. Only the following extension types are allowed: User, DigitalUser, VirtualUser, FaxUser, Limited",
          "name": "id"
        },
        {
          "type": "array",
          "description": "Set of call monitoring group permissions granted to the specified extension. In order to remove the specified extension from a call monitoring group use an empty value",
          "items": {
            "type": "string",
            "enum": [
              "Monitoring",
              "Monitored"
            ]
          },
          "name": "permissions"
        }
      ]
    },
    {
      "name": "CallMonitoringGroups",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call monitoring groups resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of call monitoring group members",
          "items": {
            "$ref": "CallMonitoringGroup"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CreateCallMonitoringGroupRequest",
      "fields": [
        {
          "type": "string",
          "description": "Name of a group",
          "name": "name",
          "required": true
        }
      ]
    },
    {
      "name": "CallMonitoringGroup",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call monitoring group resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a group",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Name of a group",
          "name": "name"
        }
      ]
    },
    {
      "name": "CallMonitoringGroupMemberList",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call monitoring group members resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of a call monitoring group members",
          "items": {
            "$ref": "CallMonitoringGroupMemberInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CallMonitoringGroupMemberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call monitoring group member",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call monitoring group member",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a call monitoring group member",
          "name": "extensionNumber"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Call monitoring permission; mltiple values are allowed: * `Monitoring` - User can monitor a group * `Monitored` - User can be monitored\n",
            "enum": [
              "Monitoring",
              "Monitored"
            ]
          },
          "name": "permissions"
        }
      ]
    },
    {
      "name": "CallQueueMembers",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call queue members resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of call queue members",
          "items": {
            "$ref": "CallQueueMemberInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "CallQueueMemberInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call queue member",
          "name": "uri"
        },
        {
          "type": "integer",
          "description": "Internal identifier of a call queue member",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension number of a call queue member",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "CallQueues",
      "fields": [
        {
          "type": "string",
          "description": "Link to a call queues resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "array",
          "description": "List of call queues",
          "items": {
            "$ref": "CallQueueInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "UserTemplates",
      "fields": [
        {
          "type": "string",
          "description": "Link to user templates resource",
          "name": "uri",
          "required": false
        },
        {
          "type": "array",
          "description": "List of user templates",
          "items": {
            "$ref": "TemplateInfo"
          },
          "name": "records",
          "required": true
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation",
          "required": true
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging",
          "required": true
        }
      ]
    },
    {
      "name": "TemplateInfo",
      "fields": [
        {
          "type": "string",
          "description": "Link to a template",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Internal identifier of a template",
          "name": "id"
        },
        {
          "type": "string",
          "enum": [
            "UserSettings",
            "CallHandling"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Name of a template",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Time of a template creation",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Time of the last template modification",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "ExtensionGrantListEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionGrantListEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ExtensionGrantListEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ExtensionInfoEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](shttps://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionInfoEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ExtensionInfoEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Type of extension info change",
          "enum": [
            "Update",
            "Delete"
          ],
          "name": "eventType"
        },
        {
          "type": "array",
          "description": "Returned for 'Update' event type only",
          "items": {
            "type": "string",
            "enum": [
              "AccountSettings",
              "AccountStatus",
              "AnsweringRules",
              "CompanyNumbers",
              "DialingPlan",
              "ExtensionInfo",
              "Features",
              "Limits",
              "Permissions",
              "ProfileImage",
              "VideoConfiguration"
            ]
          },
          "name": "hints"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "ExtensionListEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "$ref": "ExtensionListEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ExtensionListEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Type of extension info change",
          "enum": [
            "Create",
            "Update",
            "Delete"
          ],
          "name": "eventType"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        }
      ]
    },
    {
      "name": "OperatorInfo",
      "description": "Site Fax/SMS recipient (operator) reference. Multi-level IVR should be enabled",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an operator",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to an operator resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension number (pin)",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Operator extension user full name",
          "name": "name"
        }
      ]
    },
    {
      "name": "ShortSiteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal idetifier of a site extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Extension user first name",
          "name": "name"
        }
      ]
    },
    {
      "name": "SiteInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal idetifier of a site extension",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a site resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension user first name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Custom name of a caller. Max number of characters is 15 (only alphabetical symbols, numbers and commas are supported)",
          "name": "callerIdName"
        },
        {
          "type": "string",
          "description": "Exetnsion user email",
          "name": "email"
        },
        {
          "$ref": "ContactBusinessAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "RegionalSettings",
          "name": "regionalSettings"
        },
        {
          "$ref": "OperatorInfo",
          "name": "operator"
        },
        {
          "type": "string",
          "description": "Site code value. Returned only if specified",
          "name": "code"
        }
      ]
    },
    {
      "name": "UserCallQueues",
      "fields": [
        {
          "type": "array",
          "description": "List of the queues where the extension is an agent",
          "items": {
            "$ref": "QueueShortInfoResource"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "QueueShortInfoResource",
      "fields": [
        {
          "type": "string",
          "description": "Call queue extension identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Call queue name (read-only)",
          "name": "name"
        }
      ]
    },
    {
      "name": "CreateMultipleSwitchesRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CreateSwitchInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CreateMultipleSwitchesResponse",
      "description": "Information on the task for multiple switches creation",
      "fields": [
        {
          "$ref": "BulkTaskInfoSwUpdate",
          "name": "task"
        }
      ]
    },
    {
      "name": "BulkTaskInfoSwUpdate",
      "description": "Information on the task for multiple switches update",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task for multiple switches creation",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of a task",
          "enum": [
            "Accepted",
            "Failed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Task creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Time of the task latest modification",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "BulkTaskInfoWiUpdate",
      "description": "Information on the task for multiple wireless points update",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task for multiple switches creation",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of a task",
          "enum": [
            "Accepted",
            "Failed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Task creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Time of the task latest modification",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "BulkTaskInfoWiCreate",
      "description": "Information on the task for multiple wireless points creation",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task for multiple switches creation",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of a task",
          "enum": [
            "Accepted",
            "Failed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Task creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Time of the task latest modification",
          "name": "lastModifiedTime"
        }
      ]
    },
    {
      "name": "UpdateMultipleSwitchesRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "UpdateSwitchInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "UpdateMultipleSwitchesResponse",
      "fields": [
        {
          "$ref": "BulkTaskInfoSwUpdate",
          "name": "task"
        }
      ]
    },
    {
      "name": "CreateMultipleWirelessPointsRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "CreateWirelessPoint"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "CreateMultipleWirelessPointsResponse",
      "fields": [
        {
          "$ref": "BulkTaskInfoWiCreate",
          "name": "task"
        }
      ]
    },
    {
      "name": "UpdateMultipleWirelessPointsRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "UpdateWirelessPoint"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "UpdateMultipleWirelessPointsResponse",
      "fields": [
        {
          "$ref": "BulkTaskInfoWiUpdate",
          "name": "task"
        }
      ]
    },
    {
      "name": "ValidateMultipleWirelessPointsRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "WirelessPointInfoRequest"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ValidateMultipleWirelessPointsResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "WirelessPointValidated"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "WirelessPointValidated",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a wireless point",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of the wireless access point complying with MAC address conventions",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Validation result status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ValidationError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "ValidationError",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message"
        },
        {
          "type": "string",
          "description": "Name of invalid parameter",
          "name": "parameterName"
        },
        {
          "type": "string",
          "example": "Sites",
          "name": "featureName"
        },
        {
          "type": "string",
          "example": "SoftPhoneAutoLocationUpdate",
          "name": "parameterValue"
        }
      ]
    },
    {
      "name": "ValidateMultipleSwitchesRequest",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "SwitchInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "ValidateMultipleSwitchesResponse",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "SwitchValidated"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "SwitchValidated",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Validation result status",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ValidationError"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "UserVideoConfiguration",
      "fields": [
        {
          "type": "string",
          "description": "Video provider of the user",
          "enum": [
            "RCMeetings",
            "RCVideo",
            "None"
          ],
          "name": "provider"
        },
        {
          "type": "string",
          "description": "Specifies if the user is 'paid' (has meeting license) or 'free' (w/o meeting license)",
          "enum": [
            "Paid",
            "Free"
          ],
          "name": "userLicenseType"
        }
      ]
    },
    {
      "name": "ListDevicesAutomaticLocationUpdates",
      "fields": [
        {
          "type": "string",
          "description": "Link to devices resource",
          "name": "uri"
        },
        {
          "type": "array",
          "description": "List of users' devices with the current status of Emergency Address Auto Update Feature",
          "items": {
            "$ref": "AutomaticLocationUpdatesDeviceInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesDeviceInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device type",
          "default": "HardPhone",
          "enum": [
            "HardPhone",
            "SoftPhone",
            "OtherPhone"
          ],
          "name": "type"
        },
        {
          "type": "string",
          "description": "Serial number for HardPhone (is returned only when the phone is shipped and provisioned)",
          "name": "serial"
        },
        {
          "type": "boolean",
          "description": "Specifies if Automatic Location Updates feature is enabled",
          "name": "featureEnabled"
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesModelInfo",
          "name": "model"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "array",
          "description": "Phone lines information",
          "items": {
            "$ref": "AutomaticLocationUpdatesPhoneLine"
          },
          "name": "phoneLines"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesPhoneLine",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Unknown",
            "Standalone",
            "StandaloneFree",
            "BlaPrimary",
            "BlaSecondary",
            "BLF"
          ],
          "name": "lineType"
        },
        {
          "$ref": "AutomaticLocationUpdatesPhoneNumberInfo",
          "name": "phoneInfo"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesPhoneNumberInfo",
      "fields": [
        {
          "type": "integer",
          "description": "Internal identifier of a phone number",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesModelInfo",
      "description": "HardPhone model information",
      "fields": [
        {
          "type": "string",
          "description": "Device model identifier",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Device name",
          "name": "name"
        },
        {
          "type": "array",
          "description": "Device feature or multiple features supported",
          "items": {
            "type": "string",
            "enum": [
              "BLA",
              "Intercom",
              "Paging",
              "HELD"
            ]
          },
          "name": "features"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesSiteInfo",
      "description": "Site data. If multi-site feature is turned on for the account, then ID of a site must be specified. In order to assign a wireless point to the main site (company) site ID should be set to `main-site`",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a site",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a site resource",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Name of a site",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Site code value. Returned only if specified",
          "name": "code"
        }
      ]
    },
    {
      "name": "AssignMultipleDevicesAutomaticLocationUpdates",
      "fields": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "List of common devices for feature activation"
          },
          "name": "enabledDeviceIds"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "description": "List of common devices for feature disabling"
          },
          "name": "disabledDeviceIds"
        }
      ]
    },
    {
      "name": "NetworksList",
      "fields": [
        {
          "type": "string",
          "description": "Link to a networks resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "NetworkInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "NetworkInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a network",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Link to a network resource",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PublicIpRangeInfo"
          },
          "name": "publicIpRanges"
        },
        {
          "type": "array",
          "items": {
            "$ref": "PrivateIpRangeInfo"
          },
          "name": "privateIpRanges"
        },
        {
          "$ref": "ERLLocationInfo",
          "name": "emergencyLocation"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesUserList",
      "fields": [
        {
          "type": "string",
          "description": "Link to the users list resource",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "AutomaticLocationUpdatesUserInfo"
          },
          "name": "records"
        },
        {
          "$ref": "ProvisioningNavigationInfo",
          "name": "navigation"
        },
        {
          "$ref": "ProvisioningPagingInfo",
          "name": "paging"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesUserInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "id"
        },
        {
          "type": "string",
          "description": "User name",
          "name": "fullName"
        },
        {
          "type": "string",
          "name": "extensionNumber"
        },
        {
          "type": "boolean",
          "description": "Specifies if Automatic Location Updates feature is enabled",
          "name": "featureEnabled"
        },
        {
          "type": "string",
          "description": "User extension type",
          "enum": [
            "User",
            "Limited"
          ],
          "name": "type"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Department name",
          "name": "department"
        }
      ]
    },
    {
      "name": "AutomaticLocationUpdatesTaskInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Status of a task",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "name": "status"
        },
        {
          "type": "string",
          "description": "Task creation time",
          "name": "creationTime"
        },
        {
          "type": "string",
          "description": "Time of the task latest modification",
          "name": "lastModifiedTime"
        },
        {
          "type": "string",
          "description": "Type of a task",
          "enum": [
            "WirelessPointsBulkCreate",
            "WirelessPointsBulkUpdate",
            "SwitchesBulkCreate",
            "SwitchesBulkUpdate"
          ],
          "name": "type"
        },
        {
          "$ref": "TaskResultInfo",
          "name": "result"
        }
      ]
    },
    {
      "name": "TaskResultInfo",
      "description": "Task detailed result. Returned for failed and completed tasks",
      "fields": [
        {
          "type": "array",
          "description": "Detailed task results by elements from initial request",
          "items": {
            "$ref": "TaskResultRecord"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "TaskResultRecord",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of the created/updated element - wireless point or network switch",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Unique 48-bit identifier of the wireless access point complying with MAC address conventions. Returned only for 'Wireless Points Bulk Create' tasks",
          "name": "bssid"
        },
        {
          "type": "string",
          "description": "Unique identifier of a network switch. Returned only for 'Switches Bulk Create' tasks",
          "name": "chassisId"
        },
        {
          "type": "string",
          "description": "Operation status",
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "TaskResultRecordErrorsInfo"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "TaskResultRecordErrorsInfo",
      "fields": [
        {
          "type": "string",
          "name": "errorCode"
        },
        {
          "type": "string",
          "name": "message"
        },
        {
          "type": "string",
          "name": "parameterName"
        },
        {
          "type": "string",
          "name": "description"
        }
      ]
    },
    {
      "name": "FeatureList",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "FeatureInfo"
          },
          "name": "records"
        }
      ]
    },
    {
      "name": "FeatureInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a feature",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "Specifies if the feature is available for the current user according to services enabled for the account, type, entitlements and permissions of the extension. If the authorized user gets features of the other extension, only features that can be delegated are returned (such as configuration by administrators).",
          "name": "available"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ParamsInfo"
          },
          "name": "params"
        },
        {
          "$ref": "ReasonInfo",
          "name": "reason"
        }
      ]
    },
    {
      "name": "ParamsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Parameter name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Parameter value",
          "name": "value"
        }
      ]
    },
    {
      "name": "ReasonInfo",
      "description": "Reason for the feature unavailability. Returned only if `available` is set to 'false'",
      "fields": [
        {
          "type": "string",
          "description": "Reason code",
          "enum": [
            "ServicePlanLimitation",
            "AccountLimitation",
            "ExtensionTypeLimitation",
            "ExtensionLimitation",
            "InsufficientPermissions",
            "ConfigurationLimitation"
          ],
          "name": "code"
        },
        {
          "type": "string",
          "description": "Reason description",
          "name": "message"
        },
        {
          "type": "string",
          "name": "permission"
        }
      ]
    },
    {
      "name": "CallQueueDetails",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call queue",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Call queue name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Call queue extension number",
          "name": "extensionNumber"
        },
        {
          "type": "string",
          "description": "Call queue status",
          "enum": [
            "Enabled",
            "Disabled",
            "NotActivated"
          ],
          "name": "status"
        },
        {
          "$ref": "CallQueueServiceLevelSettings",
          "name": "serviceLevelSettings"
        },
        {
          "type": "boolean",
          "description": "Allows members to change their queue status",
          "name": "editableMemberStatus"
        }
      ]
    },
    {
      "name": "CallQueueServiceLevelSettings",
      "description": "Call queue service level settings",
      "fields": [
        {
          "type": "integer",
          "description": "Target percentage of calls that must be answered by agents within the service level time threshold",
          "name": "slaGoal"
        },
        {
          "type": "integer",
          "description": "The period of time in seconds that is considered to be an acceptable service level",
          "name": "slaThresholdSeconds"
        },
        {
          "type": "boolean",
          "description": "Includes abandoned calls (when callers hang up prior to being served by an agent) into service-level calculation",
          "name": "includeAbandonedCalls"
        },
        {
          "type": "integer",
          "description": "Abandoned calls that are shorter than the defined period of time in seconds will not be included into the calculation of Service Level",
          "name": "abandonedThresholdSeconds"
        }
      ]
    },
    {
      "name": "CallQueueUpdateDetails",
      "fields": [
        {
          "$ref": "CallQueueServiceLevelSettings",
          "name": "serviceLevelSettings"
        },
        {
          "type": "boolean",
          "description": "Allows members to change their queue status",
          "name": "editableMemberStatus"
        }
      ]
    },
    {
      "name": "ConferencingSettingsInfo",
      "fields": [
        {
          "type": "string",
          "description": "Delegated access code for a host user",
          "name": "hostCode"
        },
        {
          "type": "string",
          "description": "Delegated access code for a participant user",
          "name": "participantCode"
        }
      ]
    },
    {
      "name": "DelegateExtensionInfo",
      "fields": [
        {
          "type": "string",
          "description": "Canonical URI of an extension",
          "name": "uri"
        },
        {
          "type": "string",
          "description": "Extension name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Number of an extension",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "GetLocationDeletionMultiResponse",
      "fields": [
        {
          "type": "string",
          "enum": [
            "Forbidden",
            "Restricted",
            "Allowed"
          ],
          "name": "deletion"
        },
        {
          "type": "string",
          "enum": [
            "Forbidden",
            "Allowed"
          ],
          "name": "reassignment"
        },
        {
          "type": "array",
          "items": {
            "$ref": "LocationDeletionInfo"
          },
          "name": "emergencyLocations"
        }
      ]
    },
    {
      "name": "LocationDeletionInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Identifies the possibility and status of emergency location deletion",
          "enum": [
            "Failed",
            "Completed",
            "Forbidden",
            "Restricted",
            "Allowed"
          ],
          "name": "deletion"
        },
        {
          "$ref": "LocationDeletionErrorInfo",
          "name": "errors"
        }
      ]
    },
    {
      "name": "LocationDeletionErrorInfo",
      "fields": [
        {
          "type": "string",
          "description": "Error code",
          "name": "errorCode"
        },
        {
          "type": "string",
          "description": "Error message",
          "name": "message"
        },
        {
          "type": "string",
          "description": "Additional attribute for this error, for example `parameterName`",
          "name": "additionalInfo"
        }
      ]
    },
    {
      "name": "UserEmergencyLocationList",
      "fields": [
        {
          "type": "string",
          "name": "id"
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateRequest",
      "description": "List of extensions to be updated",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionBulkUpdateInfo"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "id"
        },
        {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "NotActivated",
            "Frozen"
          ],
          "name": "status"
        },
        {
          "$ref": "ExtensionStatusInfo",
          "name": "statusInfo"
        },
        {
          "type": "string",
          "description": "Type of suspension",
          "name": "reason"
        },
        {
          "type": "string",
          "description": "Free form user comment",
          "name": "comment"
        },
        {
          "type": "string",
          "description": "Extension number available",
          "name": "extensionNumber"
        },
        {
          "$ref": "ContactInfoUpdateRequest",
          "name": "contact"
        },
        {
          "$ref": "ExtensionRegionalSettingRequest",
          "name": "regionalSettings"
        },
        {
          "type": "string",
          "enum": [
            "NotStarted",
            "Incomplete",
            "Completed"
          ],
          "name": "setupWizardState"
        },
        {
          "type": "string",
          "description": "Additional extension identifier created by partner application and applied on client side",
          "name": "partnerId"
        },
        {
          "type": "string",
          "description": "IVR PIN",
          "name": "ivrPin"
        },
        {
          "type": "string",
          "description": "Password for extension",
          "name": "password"
        },
        {
          "$ref": "CallQueueInfoRequest",
          "name": "callQueueInfo"
        },
        {
          "type": "object",
          "$ref": "UserTransitionInfo",
          "name": "transition"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CustomFieldInfo"
          },
          "name": "customFields"
        },
        {
          "type": "boolean",
          "description": "Hides extension from showing in company directory. Supported for extensions of User type only",
          "name": "hidden"
        },
        {
          "$ref": "AutomaticLocationUpdatesSiteInfo",
          "name": "site"
        },
        {
          "type": "string",
          "description": "Extension type. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "enum": [
            "User",
            "Fax User",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "DelegatedLinesGroup"
          ],
          "name": "type"
        },
        {
          "type": "array",
          "description": "List of non-RC internal identifiers assigned to an extension",
          "items": {
            "$ref": "ReferenceInfo"
          },
          "name": "references"
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateTaskResource",
      "description": "Information on a task for updating multiple extensions",
      "fields": [
        {
          "type": "string",
          "description": "Link to a task resource",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Task status",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "name": "status",
          "required": true
        },
        {
          "type": "string",
          "description": "Task creation datetime",
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Task latest update datetime",
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "$ref": "ExtensionBulkUpdateTaskResult",
          "name": "result",
          "required": false
        }
      ]
    },
    {
      "name": "ExtensionBulkUpdateTaskResult",
      "description": "Result record on multiple extension update task",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "ExtensionUpdateShortResult"
          },
          "name": "affectedItems"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ErrorEntity"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "ExtensionUpdateShortResult",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "string",
          "description": "Extension update status",
          "enum": [
            "Fail",
            "Success"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ErrorEntity"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadRequest",
      "fields": [
        {
          "type": "array",
          "description": "List of extensions which contacts have to be updated",
          "items": {
            "$ref": "AddressBookBulkUploadResource"
          },
          "name": "records",
          "required": true
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadResource",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId",
          "required": true
        },
        {
          "type": "array",
          "description": "List of contacts to be added to extension address book",
          "items": {
            "$ref": "AddressBookBulkContactResource"
          },
          "name": "contacts",
          "required": true
        }
      ]
    },
    {
      "name": "AddressBookBulkContactResource",
      "description": "Contact resource",
      "fields": [
        {
          "type": "string",
          "description": "Email of a contact",
          "example": "charlie.williams@example.com",
          "name": "email"
        },
        {
          "type": "string",
          "description": "Notes for a contact",
          "example": "#1 Customer",
          "name": "notes"
        },
        {
          "type": "string",
          "description": "Company name of a contact",
          "example": "Example, Inc.",
          "name": "company"
        },
        {
          "type": "string",
          "description": "First name of a contact",
          "example": "Charlie",
          "name": "firstName"
        },
        {
          "type": "string",
          "description": "Last name of a contact",
          "example": "Williams",
          "name": "lastName"
        },
        {
          "type": "string",
          "description": "Job title of a contact",
          "example": "CEO",
          "name": "jobTitle"
        },
        {
          "type": "string",
          "description": "Date of birth of a contact",
          "format": "date-time",
          "name": "birthday"
        },
        {
          "type": "string",
          "description": "Link to a contact home page",
          "example": "http://www.example.com",
          "name": "webPage"
        },
        {
          "type": "string",
          "description": "Middle name of a contact",
          "example": "J",
          "name": "middleName"
        },
        {
          "type": "string",
          "description": "Nick name of a contact",
          "example": "The Boss",
          "name": "nickName"
        },
        {
          "type": "string",
          "description": "Second email of a contact",
          "example": "charlie.williams2@example.com",
          "name": "email2"
        },
        {
          "type": "string",
          "description": "Third email of a contact",
          "example": "charlie.williams3@example.com",
          "name": "email3"
        },
        {
          "type": "string",
          "description": "Home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone"
        },
        {
          "type": "string",
          "description": "2nd home phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "homePhone2"
        },
        {
          "type": "string",
          "description": "Business phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone"
        },
        {
          "type": "string",
          "description": "2nd business phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessPhone2"
        },
        {
          "type": "string",
          "description": "Mobile phone of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "mobilePhone"
        },
        {
          "type": "string",
          "description": "Business fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "businessFax"
        },
        {
          "type": "string",
          "description": "Company number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "companyPhone"
        },
        {
          "type": "string",
          "description": "Phone number of a contact assistant in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "assistantPhone"
        },
        {
          "type": "string",
          "description": "Car phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "carPhone"
        },
        {
          "type": "string",
          "description": "Other phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherPhone"
        },
        {
          "type": "string",
          "description": "Other fax number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "otherFax"
        },
        {
          "type": "string",
          "description": "Callback phone number of a contact in e.164 (with \"+\") format",
          "example": "+15551234567",
          "name": "callbackPhone"
        },
        {
          "$ref": "AddressBookBulkContactAddressInfo",
          "name": "businessAddress"
        },
        {
          "$ref": "AddressBookBulkContactAddressInfo",
          "name": "homeAddress"
        },
        {
          "$ref": "AddressBookBulkContactAddressInfo",
          "name": "otherAddress"
        }
      ]
    },
    {
      "name": "AddressBookBulkContactAddressInfo",
      "description": "Contact address information",
      "fields": [
        {
          "type": "string",
          "description": "Country name of extension user company. Not returned for Address Book",
          "name": "country"
        },
        {
          "type": "string",
          "description": "State/province name of extension user company",
          "name": "state"
        },
        {
          "type": "string",
          "description": "City name of extension user company",
          "name": "city"
        },
        {
          "type": "string",
          "description": "Street address of extension user company",
          "name": "street"
        },
        {
          "type": "string",
          "description": "Zip code of extension user company",
          "name": "zip"
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadResponse",
      "description": "Information on a task for adding multiple contacts to multiple extensions",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a task",
          "name": "id",
          "required": true
        },
        {
          "type": "string",
          "description": "Link for the task status retrieval",
          "name": "uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Task status",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "name": "status",
          "required": true
        },
        {
          "type": "string",
          "description": "Datetime of a task creation",
          "name": "creationTime",
          "required": true
        },
        {
          "type": "string",
          "description": "Datetime of a task latest update",
          "name": "lastModifiedTime",
          "required": true
        },
        {
          "$ref": "AddressBookBulkUploadTaskResult",
          "name": "results",
          "required": false
        }
      ]
    },
    {
      "name": "AddressBookBulkUploadTaskResult",
      "description": "Result record on adding multiple contacts to an extension. Returned for completed tasks",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        },
        {
          "type": "object",
          "$ref": "AddressBookBulkContactResource",
          "name": "contact"
        },
        {
          "type": "string",
          "description": "Adding contact status",
          "enum": [
            "Success",
            "Fail"
          ],
          "name": "status"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ErrorEntity"
          },
          "name": "errors"
        }
      ]
    },
    {
      "name": "AuthProfileResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "array",
          "items": {
            "$ref": "ActivePermissionResource"
          },
          "name": "permissions"
        }
      ]
    },
    {
      "name": "ActivePermissionResource",
      "fields": [
        {
          "$ref": "PermissionIdResource",
          "name": "permission"
        },
        {
          "$ref": "RoleIdResource",
          "name": "effectiveRole"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Account",
              "AllExtensions",
              "Federation",
              "NonUserExtensions",
              "RoleBased",
              "Self",
              "UserExtensions"
            ]
          },
          "name": "scopes"
        }
      ]
    },
    {
      "name": "PermissionIdResource",
      "fields": [
        {
          "type": "string",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Site compatibility flag set for permission",
          "enum": [
            "Compatible",
            "Incompatible",
            "Independent"
          ],
          "name": "siteCompatible"
        },
        {
          "type": "boolean",
          "description": "Specifies if the permission is editable on UI (if set to 'True') or not (if set to 'False')",
          "name": "readOnly"
        },
        {
          "type": "boolean",
          "description": "Specifies if the permission can be assigned by the account administrator",
          "name": "assignable"
        }
      ]
    },
    {
      "name": "RoleIdResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "string",
          "name": "id"
        }
      ]
    },
    {
      "name": "AuthProfileCheckResource",
      "fields": [
        {
          "type": "string",
          "format": "uri",
          "name": "uri"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "successful"
        },
        {
          "$ref": "ActivePermissionResource",
          "name": "details"
        }
      ]
    },
    {
      "name": "GetRingOutStatusResponse",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a RingOut call",
          "name": "id"
        },
        {
          "type": "string",
          "name": "uri"
        },
        {
          "$ref": "RingOutStatusInfo",
          "name": "status"
        }
      ]
    },
    {
      "name": "MakeRingOutCallerInfoRequestFrom",
      "description": "Phone number of the caller. This number corresponds to the 1st leg of the RingOut call. This number can be one of the user's configured forwarding numbers or an arbitrary number",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Internal identifier of a forwarding number; returned in response as an 'id' field value. Can be specified instead of the phoneNumber attribute",
          "name": "forwardingNumberId"
        }
      ]
    },
    {
      "name": "MakeRingOutCallerInfoRequestTo",
      "description": "Phone number of the called party. This number corresponds to the 2nd leg of the RingOut call",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "MakeRingOutCallerIdInfo",
      "description": "The number which will be displayed to the called party",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        }
      ]
    },
    {
      "name": "MakeRingOutCoutryInfo",
      "description": "Optional. Dialing plan country data. If not specified, then extension home country is applied by default",
      "fields": [
        {
          "type": "string",
          "description": "Dialing plan country identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "MakeRingOutRequest",
      "fields": [
        {
          "$ref": "MakeRingOutCallerInfoRequestFrom",
          "name": "from",
          "required": true
        },
        {
          "$ref": "MakeRingOutCallerInfoRequestTo",
          "name": "to",
          "required": true
        },
        {
          "$ref": "MakeRingOutCallerIdInfo",
          "name": "callerId",
          "required": false
        },
        {
          "type": "boolean",
          "description": "The audio prompt that the calling party hears when the call is connected",
          "name": "playPrompt",
          "required": false
        },
        {
          "$ref": "MakeRingOutCoutryInfo",
          "name": "country",
          "required": false
        }
      ]
    },
    {
      "name": "RingOutStatusInfo",
      "description": "RingOut status information",
      "fields": [
        {
          "type": "string",
          "description": "Status of a call",
          "enum": [
            "Invalid",
            "Success",
            "InProgress",
            "Busy",
            "NoAnswer",
            "Rejected",
            "GenericError",
            "Finished",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser"
          ],
          "name": "callStatus"
        },
        {
          "type": "string",
          "description": "Status of a calling party",
          "enum": [
            "Invalid",
            "Success",
            "InProgress",
            "Busy",
            "NoAnswer",
            "Rejected",
            "GenericError",
            "Finished",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser"
          ],
          "name": "callerStatus"
        },
        {
          "type": "string",
          "description": "Status of a called party",
          "enum": [
            "Invalid",
            "Success",
            "InProgress",
            "Busy",
            "NoAnswer",
            "Rejected",
            "GenericError",
            "Finished",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser"
          ],
          "name": "calleeStatus"
        }
      ]
    },
    {
      "name": "UserAddress",
      "fields": [
        {
          "type": "string",
          "name": "country",
          "required": false
        },
        {
          "type": "string",
          "name": "locality",
          "required": false
        },
        {
          "type": "string",
          "name": "postalCode",
          "required": false
        },
        {
          "type": "string",
          "name": "region",
          "required": false
        },
        {
          "type": "string",
          "name": "streetAddress",
          "required": false
        },
        {
          "type": "string",
          "enum": [
            "work"
          ],
          "name": "type",
          "required": true
        }
      ]
    },
    {
      "name": "AuthenticationScheme",
      "fields": [
        {
          "type": "string",
          "name": "description"
        },
        {
          "type": "string",
          "name": "documentationUri"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "specUri"
        },
        {
          "type": "boolean",
          "name": "primary"
        }
      ]
    },
    {
      "name": "BulkSupported",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "name": "maxOperations"
        },
        {
          "type": "integer",
          "format": "int32",
          "name": "maxPayloadSize"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "supported"
        }
      ]
    },
    {
      "name": "Email",
      "fields": [
        {
          "type": "string",
          "enum": [
            "work"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "EnterpriseUser",
      "fields": [
        {
          "type": "string",
          "name": "department"
        }
      ]
    },
    {
      "name": "ScimErrorResponse",
      "fields": [
        {
          "type": "string",
          "description": "detail error message",
          "name": "detail"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:Error"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "string",
          "description": "bad request type when status code is 400",
          "enum": [
            "uniqueness",
            "tooMany",
            "mutability",
            "sensitive",
            "invalidSyntax",
            "invalidFilter",
            "invalidPath",
            "invalidValue",
            "invalidVers",
            "noTarget"
          ],
          "name": "scimType"
        },
        {
          "type": "string",
          "description": "same as HTTP status code, e.g. 400, 401, etc.",
          "name": "status"
        }
      ]
    },
    {
      "name": "FilterSupported",
      "fields": [
        {
          "type": "integer",
          "format": "int32",
          "name": "maxResults"
        },
        {
          "type": "boolean",
          "default": false,
          "name": "supported"
        }
      ]
    },
    {
      "name": "Meta",
      "description": "resource metadata",
      "fields": [
        {
          "type": "string",
          "format": "date-time",
          "name": "created"
        },
        {
          "type": "string",
          "format": "date-time",
          "name": "lastModified"
        },
        {
          "type": "string",
          "description": "resource location URI",
          "name": "location"
        },
        {
          "type": "string",
          "enum": [
            "User",
            "Group"
          ],
          "name": "resourceType"
        }
      ]
    },
    {
      "name": "Name",
      "fields": [
        {
          "type": "string",
          "name": "familyName",
          "required": true
        },
        {
          "type": "string",
          "name": "givenName",
          "required": true
        }
      ]
    },
    {
      "name": "PatchOperation",
      "fields": [
        {
          "type": "string",
          "enum": [
            "add",
            "replace",
            "remove"
          ],
          "name": "op",
          "required": true
        },
        {
          "type": "string",
          "name": "path",
          "required": false
        },
        {
          "type": "string",
          "description": "corresponding 'value' of that field specified by 'path'",
          "name": "value",
          "required": false
        }
      ]
    },
    {
      "name": "PhoneNumber",
      "fields": [
        {
          "type": "string",
          "enum": [
            "work",
            "mobile",
            "other"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "Photo",
      "fields": [
        {
          "type": "string",
          "enum": [
            "photo"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "name": "value",
          "required": true
        }
      ]
    },
    {
      "name": "SearchRequest",
      "fields": [
        {
          "type": "integer",
          "description": "page size",
          "format": "int32",
          "name": "count"
        },
        {
          "type": "string",
          "description": "only support 'userName' or 'email' filter expressions for now",
          "name": "filter"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "integer",
          "description": "start index (1-based)",
          "format": "int32",
          "name": "startIndex"
        }
      ]
    },
    {
      "name": "ServiceProviderConfig",
      "fields": [
        {
          "type": "array",
          "items": {
            "$ref": "AuthenticationScheme"
          },
          "name": "authenticationSchemes"
        },
        {
          "$ref": "BulkSupported",
          "name": "bulk"
        },
        {
          "$ref": "Supported",
          "name": "changePassword"
        },
        {
          "$ref": "Supported",
          "name": "etag"
        },
        {
          "$ref": "FilterSupported",
          "name": "filter"
        },
        {
          "$ref": "Supported",
          "name": "patch"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig"
            ]
          },
          "name": "schemas"
        },
        {
          "$ref": "Supported",
          "name": "sort"
        },
        {
          "$ref": "Supported",
          "name": "xmlDataFormat"
        }
      ]
    },
    {
      "name": "Supported",
      "fields": [
        {
          "type": "boolean",
          "default": false,
          "name": "supported"
        }
      ]
    },
    {
      "name": "CreateUser",
      "fields": [
        {
          "type": "boolean",
          "description": "User status",
          "default": false,
          "name": "active",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "UserAddress"
          },
          "name": "addresses",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "Email"
          },
          "name": "emails",
          "required": true
        },
        {
          "type": "string",
          "description": "external unique resource id defined by provisioning client",
          "name": "externalId",
          "required": false
        },
        {
          "$ref": "Name",
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "PhoneNumber"
          },
          "name": "phoneNumbers",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "Photo"
          },
          "name": "photos",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ]
          },
          "name": "schemas",
          "required": true
        },
        {
          "$ref": "EnterpriseUser",
          "name": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "required": false
        },
        {
          "type": "string",
          "description": "MUST be same as work type email address",
          "name": "userName",
          "required": true
        }
      ]
    },
    {
      "name": "User",
      "fields": [
        {
          "type": "boolean",
          "description": "user status",
          "default": false,
          "name": "active",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "UserAddress"
          },
          "name": "addresses",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "Email"
          },
          "name": "emails",
          "required": true
        },
        {
          "type": "string",
          "description": "external unique resource id defined by provisioning client",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "unique resource id defined by RingCentral",
          "name": "id",
          "required": false
        },
        {
          "$ref": "Name",
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "PhoneNumber"
          },
          "name": "phoneNumbers",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "Photo"
          },
          "name": "photos",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ]
          },
          "name": "schemas",
          "required": true
        },
        {
          "$ref": "EnterpriseUser",
          "name": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "required": false
        },
        {
          "type": "string",
          "description": "MUST be same as work type email address",
          "name": "userName",
          "required": true
        }
      ]
    },
    {
      "name": "UserPatch",
      "fields": [
        {
          "type": "array",
          "description": "patch operations list",
          "items": {
            "$ref": "PatchOperation"
          },
          "name": "Operations",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:PatchOp"
            ]
          },
          "name": "schemas",
          "required": true
        }
      ]
    },
    {
      "name": "UserResponse",
      "fields": [
        {
          "type": "boolean",
          "description": "user status",
          "default": false,
          "name": "active",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "UserAddress"
          },
          "name": "addresses",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "Email"
          },
          "name": "emails",
          "required": true
        },
        {
          "type": "string",
          "description": "external unique resource id defined by provisioning client",
          "name": "externalId",
          "required": false
        },
        {
          "type": "string",
          "description": "unique resource id defined by RingCentral",
          "name": "id",
          "required": false
        },
        {
          "$ref": "Name",
          "name": "name",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "$ref": "PhoneNumber"
          },
          "name": "phoneNumbers",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "$ref": "Photo"
          },
          "name": "photos",
          "required": false
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ]
          },
          "name": "schemas",
          "required": true
        },
        {
          "$ref": "EnterpriseUser",
          "name": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "required": false
        },
        {
          "type": "string",
          "description": "MUST be same as work type email address",
          "name": "userName",
          "required": true
        },
        {
          "$ref": "Meta",
          "name": "meta",
          "required": false
        }
      ]
    },
    {
      "name": "UserSearchResponse",
      "fields": [
        {
          "type": "array",
          "description": "user list",
          "items": {
            "$ref": "UserResponse"
          },
          "name": "Resources"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "itemsPerPage"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            ]
          },
          "name": "schemas"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "startIndex"
        },
        {
          "type": "integer",
          "format": "int64",
          "name": "totalResults"
        }
      ]
    },
    {
      "name": "BridgeTargetRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call session to be connected to (bridged)",
          "name": "telephonySessionId",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party to be connected to (bridged)",
          "name": "partyId",
          "required": true
        }
      ]
    },
    {
      "name": "PartySuperviseRequest",
      "fields": [
        {
          "type": "string",
          "description": "Supervising mode",
          "example": "Listen",
          "enum": [
            "Listen"
          ],
          "name": "mode",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a supervisor's device",
          "example": "191888004",
          "name": "supervisorDeviceId",
          "required": true
        },
        {
          "type": "string",
          "description": "Mailbox ID of a user that will be monitored",
          "example": "400378008008",
          "name": "agentExtensionId",
          "required": true
        }
      ]
    },
    {
      "name": "PartySuperviseResponse",
      "fields": [
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Outbound",
            "Inbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Internal identifier of a party that monitors a call",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account that monitors a call",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension that monitors a call",
          "name": "extensionId"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call party is muted",
          "name": "muted"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "boolean",
          "description": "Specifies if a device is stand-alone",
          "name": "standAlone"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        }
      ]
    },
    {
      "name": "CallSession",
      "fields": [
        {
          "$ref": "CallSessionObject",
          "name": "session"
        }
      ]
    },
    {
      "name": "CallSessionObject",
      "description": "Call session information",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "id"
        },
        {
          "$ref": "OriginInfo",
          "name": "origin"
        },
        {
          "type": "string",
          "description": "For calls of 'Conference' type only",
          "name": "voiceCallToken"
        },
        {
          "type": "array",
          "items": {
            "$ref": "CallParty"
          },
          "name": "parties"
        },
        {
          "type": "string",
          "description": "Date and time of the latest session update represented in Unix time format",
          "name": "creationTime"
        }
      ]
    },
    {
      "name": "OriginInfo",
      "description": "Session origin details",
      "fields": [
        {
          "type": "string",
          "description": "Session origin type",
          "enum": [
            "Call",
            "RingOut",
            "RingMe",
            "Conference",
            "GreetingsRecording",
            "VerificationCall",
            "Zoom",
            "CallOut"
          ],
          "name": "type"
        }
      ]
    },
    {
      "name": "CallParty",
      "description": "Information on a party of a call session",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a party",
          "name": "id"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces",
          "name": "muted"
        },
        {
          "type": "boolean",
          "description": "If 'True' then the party is not connected to a session voice conference, 'False' means the party is connected to other parties in a session",
          "name": "standAlone"
        },
        {
          "$ref": "ParkInfo",
          "name": "park"
        },
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "A party's role in the conference scenarios. For calls of 'Conference' type only",
          "enum": [
            "Host",
            "Participant"
          ],
          "name": "conferenceRole"
        },
        {
          "type": "string",
          "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringout' type only",
          "enum": [
            "Initiator",
            "Target"
          ],
          "name": "ringOutRole"
        },
        {
          "type": "string",
          "description": "A party's role in 'Ring Me'/'RingOut' scenarios. For calls of 'Ringme' type only",
          "enum": [
            "Initiator",
            "Target"
          ],
          "name": "ringMeRole"
        },
        {
          "type": "array",
          "description": "Active recordings list",
          "items": {
            "$ref": "RecordingInfo"
          },
          "name": "recordings"
        }
      ]
    },
    {
      "name": "RecordingInfo",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a recording resource",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "True if the recording is active. False if the recording is paused.",
          "name": "active"
        }
      ]
    },
    {
      "name": "ParkInfo",
      "description": "Call park information",
      "fields": [
        {
          "type": "string",
          "description": "Call park identifier",
          "name": "id"
        }
      ]
    },
    {
      "name": "CallStatusInfo",
      "description": "Status data of a call session",
      "fields": [
        {
          "type": "string",
          "description": "Status code of a call",
          "enum": [
            "Setup",
            "Proceeding",
            "Answered",
            "Disconnected",
            "Gone",
            "Parked",
            "Hold",
            "VoiceMail",
            "FaxReceive",
            "VoiceMailScreening"
          ],
          "name": "code"
        },
        {
          "$ref": "PeerInfo",
          "name": "peerId"
        },
        {
          "type": "string",
          "description": "Reason for call termination. For 'Disconnected' code only",
          "enum": [
            "Pickup",
            "Supervising",
            "TakeOver",
            "Timeout",
            "BlindTransfer",
            "RccTransfer",
            "AttendedTransfer",
            "CallerInputRedirect",
            "CallFlip",
            "ParkLocation",
            "DtmfTransfer",
            "AgentAnswered",
            "AgentDropped",
            "Rejected",
            "Cancelled",
            "InternalError",
            "NoAnswer",
            "TargetBusy",
            "InvalidNumber",
            "InternationalDisabled",
            "DestinationBlocked",
            "NotEnoughFunds",
            "NoSuchUser",
            "CallPark",
            "CallRedirected",
            "CallReplied",
            "CallSwitch",
            "CallFinished",
            "CallDropped"
          ],
          "name": "reason"
        },
        {
          "type": "string",
          "description": "Optional message",
          "name": "description"
        }
      ]
    },
    {
      "name": "PeerInfo",
      "description": "Peer session/party details. Valid in 'Gone' state of a call",
      "fields": [
        {
          "type": "string",
          "name": "sessionId"
        },
        {
          "type": "string",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "name": "partyId"
        }
      ]
    },
    {
      "name": "PartyInfo",
      "description": "Information on a calling/called party",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Displayed name of a party",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "deviceId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "SupervisePartyTo",
      "description": "Information about a call party that is monitored",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Displayed name of a party",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "deviceId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "SupervisePartyFrom",
      "description": "Information about a call party that monitors a call",
      "fields": [
        {
          "type": "string",
          "description": "Phone number of a party",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Displayed name of a party",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "name": "deviceId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "OwnerInfo",
      "description": "Deprecated. Information on call owner",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of an account that monitors a call",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension that monitors a call",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "PartyUpdateRequest",
      "fields": [
        {
          "$ref": "PartyUpdateInfo",
          "name": "party"
        }
      ]
    },
    {
      "name": "PartyUpdateInfo",
      "description": "Party update data",
      "fields": [
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces",
          "name": "muted"
        },
        {
          "type": "boolean",
          "description": "If 'True' then the party is not connected to a session voice conference, 'False' means the party is connected to other parties in a session",
          "name": "standAlone"
        }
      ]
    },
    {
      "name": "AddPartyRequest",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call session",
          "name": "telephonySessionId",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a party that should be added to the call session",
          "name": "partyId",
          "required": true
        }
      ]
    },
    {
      "name": "AnswerTarget",
      "fields": [
        {
          "type": "string",
          "description": "Device identifier that is used to answer the incoming call.",
          "example": "400018633008",
          "name": "deviceId"
        }
      ]
    },
    {
      "name": "PickupTarget",
      "fields": [
        {
          "type": "string",
          "description": "Device identifier that is used to pick up the parked call.",
          "example": "400018633008",
          "name": "deviceId",
          "required": true
        }
      ]
    },
    {
      "name": "ForwardTarget",
      "description": "Identifier of a call party the call will be forwarded to. Only **one of** these parameters: `phoneNumber`, `voicemail` or `extensionNumber` must be specified, otherwise an error is returned.",
      "fields": [
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Voicemail owner extension identifier",
          "name": "voicemail"
        },
        {
          "type": "string",
          "description": "Number of an extension",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "TransferTarget",
      "description": "Identifier of a call party the call will be transfered to. Only **one of** these parameters: `phoneNumber`, `voicemail`, `extensionNumber` or `parkOrbit` must be specified, otherwise an error is returned.",
      "fields": [
        {
          "type": "string",
          "description": "Phone number",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Voicemail owner extension identifier",
          "name": "voicemail"
        },
        {
          "type": "string",
          "description": "Park orbit identifier",
          "name": "parkOrbit"
        },
        {
          "type": "string",
          "description": "Number of extension",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "CallPartyReply",
      "fields": [
        {
          "type": "string",
          "description": "Text to reply",
          "name": "replyWithText"
        },
        {
          "$ref": "ReplyWithPattern",
          "name": "replyWithPattern"
        }
      ]
    },
    {
      "name": "ReplyWithPattern",
      "fields": [
        {
          "type": "string",
          "description": "Predefined reply pattern name.",
          "example": "OnMyWay",
          "enum": [
            "WillCallYouBack",
            "CallMeBack",
            "OnMyWay",
            "OnTheOtherLine",
            "WillCallYouBackLater",
            "CallMeBackLater",
            "InAMeeting",
            "OnTheOtherLineNoCall"
          ],
          "name": "pattern"
        },
        {
          "type": "integer",
          "description": "Number of time units. Applicable only to WillCallYouBack, CallMeBack patterns.",
          "example": 5,
          "name": "time"
        },
        {
          "type": "string",
          "description": "Time unit name.",
          "example": "Minute",
          "enum": [
            "Minute",
            "Hour",
            "Day"
          ],
          "name": "timeUnit"
        }
      ]
    },
    {
      "name": "CallPartyFlip",
      "fields": [
        {
          "type": "string",
          "description": "Call flip id",
          "name": "callFlipId"
        }
      ]
    },
    {
      "name": "CallRecordingUpdate",
      "fields": [
        {
          "type": "boolean",
          "description": "Recording status",
          "name": "active"
        }
      ]
    },
    {
      "name": "CallRecording",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a call recording",
          "name": "id"
        },
        {
          "type": "boolean",
          "description": "Call recording status",
          "name": "active"
        }
      ]
    },
    {
      "name": "MakeCallOutCallerInfoRequestFrom",
      "description": "Instance id of the caller. It corresponds to the 1st leg of the CallOut call.",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a device",
          "example": "59474004",
          "name": "deviceId"
        }
      ]
    },
    {
      "name": "MakeCallOutCallerInfoRequestTo",
      "description": "Phone number of the called party. This number corresponds to the 2nd leg of a CallOut call",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "example": 16502223366,
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Extension number",
          "example": "103",
          "name": "extensionNumber"
        }
      ]
    },
    {
      "name": "MakeCallOutRequest",
      "fields": [
        {
          "$ref": "MakeCallOutCallerInfoRequestFrom",
          "name": "from",
          "required": true
        },
        {
          "$ref": "MakeCallOutCallerInfoRequestTo",
          "name": "to",
          "required": true
        }
      ]
    },
    {
      "name": "SuperviseCallSessionRequest",
      "fields": [
        {
          "type": "string",
          "description": "Supervising mode",
          "example": "Listen",
          "enum": [
            "Listen"
          ],
          "name": "mode",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of a supervisor's device which will be used for call session monitoring",
          "example": "191888004",
          "name": "supervisorDeviceId",
          "required": true
        },
        {
          "type": "string",
          "description": "Extension number of the user that will be monitored",
          "example": "105",
          "name": "agentExtensionNumber",
          "required": false
        },
        {
          "type": "string",
          "description": "Extension identifier of the user that will be monitored",
          "example": "400378008008",
          "name": "agentExtensionId",
          "required": false
        }
      ]
    },
    {
      "name": "SuperviseCallSession",
      "fields": [
        {
          "$ref": "SupervisePartyFrom",
          "name": "from"
        },
        {
          "$ref": "SupervisePartyTo",
          "name": "to"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Outbound",
            "Inbound"
          ],
          "name": "direction"
        },
        {
          "type": "string",
          "description": "Internal identifier of a party that monitors a call",
          "name": "id"
        },
        {
          "type": "string",
          "description": "Internal identifier of an account that monitors a call",
          "name": "accountId"
        },
        {
          "type": "string",
          "description": "Internal identifier of an extension that monitors a call",
          "name": "extensionId"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces",
          "name": "muted"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "boolean",
          "description": "If 'True' then the party is not connected to a session voice conference, 'False' means the party is connected to other parties in a session",
          "name": "standAlone"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        }
      ]
    },
    {
      "name": "IgnoreRequestBody",
      "fields": [
        {
          "type": "string",
          "description": "Internal device identifier",
          "example": "400020454008",
          "name": "deviceId",
          "required": true
        }
      ]
    },
    {
      "name": "ReplyParty",
      "fields": [
        {
          "type": "string",
          "description": "Internal identifier of a party",
          "name": "id"
        },
        {
          "$ref": "CallStatusInfo",
          "name": "status"
        },
        {
          "type": "boolean",
          "description": "Specifies if a call participant is muted or not. **Note:** If a call is also controlled via Hard phone or RingCentral App (not only through the API by calling call control methods) then it cannot be fully muted/unmuted via API only, in this case the action should be duplicated via Hard phone/RC App interfaces",
          "name": "muted"
        },
        {
          "type": "boolean",
          "description": "If 'True' then the party is not connected to a session voice conference, 'False' means the party is connected to other parties in a session",
          "name": "standAlone"
        },
        {
          "$ref": "ParkInfo",
          "name": "park"
        },
        {
          "$ref": "PartyInfo",
          "name": "from"
        },
        {
          "$ref": "PartyInfo",
          "name": "to"
        },
        {
          "$ref": "OwnerInfo",
          "name": "owner"
        },
        {
          "type": "string",
          "description": "Direction of a call",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        }
      ]
    },
    {
      "name": "AccountTelephonySessionsEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "TelephonySessionsEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "ExtensionTelephonySessionsEvent",
      "fields": [
        {
          "type": "string",
          "description": "Universally unique identifier of a notification",
          "name": "uuid"
        },
        {
          "type": "string",
          "description": "Event filter URI",
          "name": "event"
        },
        {
          "type": "string",
          "description": "Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "timestamp"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription",
          "name": "subscriptionId"
        },
        {
          "type": "string",
          "description": "Internal identifier of a subscription owner extension",
          "name": "ownerId"
        },
        {
          "$ref": "TelephonySessionsEventBody",
          "name": "body"
        }
      ]
    },
    {
      "name": "TelephonySessionsEventBody",
      "description": "Notification payload body",
      "fields": [
        {
          "type": "integer",
          "description": "Order number of a notification to state the chronology",
          "name": "sequence"
        },
        {
          "type": "string",
          "description": "Legacy identifier of a call session",
          "name": "sessionId"
        },
        {
          "type": "string",
          "description": "Call session identifier, required for Telephony API",
          "name": "telephonySessionId"
        },
        {
          "type": "string",
          "description": "Identifier of a server",
          "name": "serverId"
        },
        {
          "type": "string",
          "description": "The call start datetime in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*",
          "name": "eventTime"
        },
        {
          "$ref": "OriginInfo",
          "name": "origin"
        },
        {
          "type": "array",
          "description": "Call participants details",
          "items": {
            "$ref": "TelephonySessionsEventPartyInfo"
          },
          "name": "parties"
        }
      ]
    },
    {
      "name": "TelephonySessionsEventPartyInfo",
      "fields": [
        {
          "type": "string",
          "name": "accountId"
        },
        {
          "type": "string",
          "name": "extensionId"
        },
        {
          "type": "string",
          "name": "id"
        },
        {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "name": "direction"
        },
        {
          "$ref": "CallPartyInfo",
          "name": "to"
        },
        {
          "$ref": "CallPartyInfo",
          "name": "from"
        },
        {
          "$ref": "CallSessionStatusInfo",
          "name": "status"
        }
      ]
    },
    {
      "name": "CallPartyInfo",
      "fields": [
        {
          "type": "string",
          "description": "Call party phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)(with '+' sign) format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Call party name",
          "name": "name"
        },
        {
          "type": "string",
          "description": "Internal identifier of a call party extensionId",
          "name": "extensionId"
        }
      ]
    },
    {
      "name": "CallSessionStatusInfo",
      "fields": [
        {
          "type": "string",
          "name": "code"
        },
        {
          "type": "string",
          "name": "reason"
        },
        {
          "type": "string",
          "name": "parkData"
        },
        {
          "$ref": "PeerInfo",
          "name": "peerId"
        },
        {
          "$ref": "MobilePickupData",
          "name": "mobilePickupData"
        }
      ]
    },
    {
      "name": "MobilePickupData",
      "fields": [
        {
          "type": "array",
          "description": "List of extension IDs, configured to pick up a call from Desktop/Mobile applications",
          "items": {
            "type": "string"
          },
          "name": "ccMailboxes"
        },
        {
          "type": "string",
          "description": "SIP proxy registration name",
          "name": "to"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "sid"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvlvl"
        },
        {
          "type": "string",
          "description": "User data",
          "name": "srvLvlExt"
        }
      ]
    },
    {
      "name": "MessageStoreCalleeInfoRequest",
      "fields": [
        {
          "type": "string",
          "description": "Phone number in E.164 format",
          "name": "phoneNumber"
        },
        {
          "type": "string",
          "description": "Name of the callee",
          "name": "name"
        }
      ]
    },
    {
      "name": "CustomGreetingAnsweringRuleInfoRequest",
      "fields": [
        {
          "type": "string",
          "name": "id"
        }
      ]
    },
    {
      "name": "CustomCompanyGreetingAnsweringRuleInfo",
      "fields": [
        {
          "type": "string",
          "name": "id"
        }
      ]
    },
    {
      "name": "Attachment",
      "description": "Attachment is a file to be uploaded",
      "fields": [
        {
          "name": "filename",
          "type": "string",
          "description": "Filename with extension",
          "example": "example.png"
        },
        {
          "name": "content",
          "type": "byte[]",
          "description": "Binary content of the file",
          "required": true
        },
        {
          "name": "contentType",
          "type": "string",
          "description": "Content type of the file, such as \"image/png\""
        }
      ]
    },
    {
      "name": "ReadUserPresenceStatusParameters",
      "description": "Query parameters for operation readUserPresenceStatus",
      "fields": [
        {
          "name": "detailedTelephonyState",
          "description": "Whether to return detailed telephony state",
          "type": "boolean"
        },
        {
          "name": "sipData",
          "description": "Whether to return SIP data",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ReadAccountPresenceParameters",
      "description": "Query parameters for operation readAccountPresence",
      "fields": [
        {
          "name": "detailedTelephonyState",
          "description": "Whether to return detailed telephony state",
          "type": "boolean"
        },
        {
          "name": "sipData",
          "description": "Whether to return SIP data",
          "type": "boolean"
        },
        {
          "name": "page",
          "description": "Page number for account presence information",
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "perPage",
          "description": "Number for account presence information items per page",
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    {
      "name": "ReadExtensionCallQueuePresenceParameters",
      "description": "Query parameters for operation readExtensionCallQueuePresence",
      "fields": [
        {
          "name": "editableMemberStatus",
          "description": "Filtering by the flag 'Allow members to change their Queue Status'. If 'true' only queues where user can change his availability status are returned",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListDataExportTasksParameters",
      "description": "Query parameters for operation listDataExportTasks",
      "fields": [
        {
          "name": "status",
          "description": "Status of the task(s) to be returned. Multiple values are supported",
          "type": "string",
          "enum": [
            "Accepted",
            "InProgress",
            "Completed",
            "Failed",
            "Expired"
          ]
        },
        {
          "name": "page",
          "description": "Page number to be retrieved; value range is > 0",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Number of records to be returned per page; value range is 1 - 250",
          "type": "integer",
          "default": 30
        }
      ]
    },
    {
      "name": "ListGlipChatsParameters",
      "description": "Query parameters for operation listGlipChats",
      "fields": [
        {
          "name": "type",
          "description": "Type of chats to be fetched. By default all type of chats will be fetched",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Personal",
              "Direct",
              "Group",
              "Team",
              "Everyone"
            ]
          }
        },
        {
          "name": "recordCount",
          "description": "Number of chats to be fetched by one request. The maximum value is 250, by default - 30.",
          "maximum": 250,
          "type": "integer",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListGlipConversationsParameters",
      "description": "Query parameters for operation listGlipConversations",
      "fields": [
        {
          "name": "recordCount",
          "description": "Number of conversations to be fetched by one request. The maximum value is 250, by default - 30",
          "maximum": 250,
          "type": "integer",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListGlipTeamsParameters",
      "description": "Query parameters for operation listGlipTeams",
      "fields": [
        {
          "name": "recordCount",
          "description": "Number of teams to be fetched by one request. The maximum value is 250, by default - 30",
          "maximum": 250,
          "type": "integer",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListRecentChatsParameters",
      "description": "Query parameters for operation listRecentChats",
      "fields": [
        {
          "name": "type",
          "description": "Type of chats to be fetched. By default all chat types are returned",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Everyone",
              "Group",
              "Personal",
              "Direct",
              "Team"
            ]
          }
        },
        {
          "name": "recordCount",
          "description": "Max number of chats to be fetched by one request (Not more than 250).",
          "maximum": 250,
          "type": "integer",
          "default": 30
        }
      ]
    },
    {
      "name": "ListFavoriteChatsParameters",
      "description": "Query parameters for operation listFavoriteChats",
      "fields": [
        {
          "name": "recordCount",
          "description": "Max number of chats to be fetched by one request (Not more than 250).",
          "maximum": 250,
          "type": "integer",
          "default": 30
        }
      ]
    },
    {
      "name": "ReadGlipPostsParameters",
      "description": "Query parameters for operation readGlipPosts",
      "fields": [
        {
          "name": "recordCount",
          "description": "Max number of posts to be fetched by one request (not more than 250)",
          "maximum": 250,
          "type": "integer",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Pagination token.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadGlipEventsParameters",
      "description": "Query parameters for operation readGlipEvents",
      "fields": [
        {
          "name": "recordCount",
          "description": "Number of groups to be fetched by one request. The maximum value is 250, by default - 30.",
          "maximum": 250,
          "type": "integer",
          "default": 30
        },
        {
          "name": "pageToken",
          "description": "Token of a page to be returned",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListChatNotesParameters",
      "description": "Query parameters for operation listChatNotes",
      "fields": [
        {
          "name": "creationTimeTo",
          "description": "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, e.g. 2019-03-10T18:23:45. The default value is Now.",
          "type": "string"
        },
        {
          "name": "creationTimeFrom",
          "description": "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone",
          "type": "string"
        },
        {
          "name": "creatorId",
          "description": "Internal identifier of the user that created the note. Multiple values are supported",
          "type": "string"
        },
        {
          "name": "status",
          "description": "Status of notes to be fetched; if not specified all notes are fetched by default.",
          "type": "string",
          "enum": [
            "Active",
            "Draft"
          ]
        },
        {
          "name": "pageToken",
          "description": "Pagination token",
          "type": "string"
        },
        {
          "name": "recordCount",
          "description": "Max number of notes to be fetched by one request; the value range is 1-250.",
          "maximum": 250,
          "type": "integer",
          "default": 30
        }
      ]
    },
    {
      "name": "ListChatTasksParameters",
      "description": "Query parameters for operation listChatTasks",
      "fields": [
        {
          "name": "creationTimeTo",
          "description": "The end datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, e.g. 2019-03-10T18:23:45Z",
          "type": "string",
          "default": "now"
        },
        {
          "name": "creationTimeFrom",
          "description": "The start datetime for resulting records in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, e.g. 2016-02-23T00:00:00",
          "type": "string"
        },
        {
          "name": "creatorId",
          "description": "Internal identifier of a task creator",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "status",
          "description": "Task execution status",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Pending",
              "InProgress",
              "Completed"
            ]
          }
        },
        {
          "name": "assignmentStatus",
          "description": "Task assignment status",
          "type": "string",
          "enum": [
            "Unassigned",
            "Assigned"
          ]
        },
        {
          "name": "assigneeId",
          "description": "Internal identifier of a task assignee",
          "style": "form",
          "explode": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "assigneeStatus",
          "description": "Task execution status by assignee(-s) specified in assigneeId",
          "type": "string",
          "enum": [
            "Pending",
            "Completed"
          ]
        },
        {
          "name": "pageToken",
          "description": "Token of the current page. If token is omitted then the first page should be returned",
          "type": "string"
        },
        {
          "name": "recordCount",
          "description": "Number of records to be returned per screen",
          "maximum": 250,
          "minimum": 1,
          "type": "integer",
          "default": 30
        }
      ]
    },
    {
      "name": "AuthorizeRequest",
      "description": "Request body for operation authorize",
      "fields": [
        {
          "type": "string",
          "description": "Determines authorization flow: **code** - Authorization Code, **token** - Implicit Grant",
          "enum": [
            "code",
            "token"
          ],
          "name": "response_type",
          "required": true
        },
        {
          "type": "string",
          "description": "This is a callback URI which determines where the response is sent. The value of this parameter must exactly match one of the URIs you have provided for your app upon registration",
          "name": "redirect_uri",
          "required": true
        },
        {
          "type": "string",
          "description": "Identifier (key) of a client application",
          "name": "client_id",
          "required": true
        },
        {
          "type": "string",
          "description": "Client state. Returned back to the client at the end of the flow",
          "name": "state",
          "required": false
        },
        {
          "type": "string",
          "description": "Brand identifier. If it is not provided in request, server will try to determine brand from client app profile. The default value is '1210' - RingCentral US",
          "name": "brand_id",
          "required": false
        },
        {
          "type": "string",
          "description": "Style of login form. The default value is 'page'. The 'popup' and 'touch' values are featured for mobile applications",
          "enum": [
            "page",
            "popup",
            "touch",
            "mobile"
          ],
          "name": "display",
          "required": false
        },
        {
          "type": "string",
          "description": "Specifies which login form will be displayed. Space-separated set of the following values: 'login' - official RingCentral login form, 'sso' - Single Sign-On login form, 'consent' - form to show the requested scope and prompt user for consent. Either 'login' or 'sso' (or both) must be specified. The default value is 'login&sso'",
          "enum": [
            "login",
            "sso",
            "consent"
          ],
          "name": "prompt",
          "required": false
        },
        {
          "type": "string",
          "description": "Localization code of a language. Overwrites 'Accept-Language' header value",
          "name": "localeId",
          "required": false
        },
        {
          "type": "string",
          "description": "Localization code of a language. Overwrites 'localeId' parameter value",
          "name": "ui_locales",
          "required": false
        },
        {
          "type": "string",
          "description": "User interface options data",
          "enum": [
            "hide_logo",
            "hide_tos",
            "hide_remember_me",
            "external_popup",
            "old_ui"
          ],
          "name": "ui_options",
          "required": false
        },
        {
          "type": "string",
          "name": "scope",
          "required": false
        },
        {
          "type": "string",
          "name": "accept_language",
          "required": false
        },
        {
          "type": "string",
          "name": "request",
          "required": false
        },
        {
          "type": "string",
          "name": "request_uri",
          "required": false
        },
        {
          "type": "string",
          "name": "nonce",
          "required": false
        },
        {
          "type": "string",
          "name": "code_challenge",
          "required": false
        },
        {
          "type": "string",
          "enum": [
            "plain",
            "S256"
          ],
          "name": "code_challenge_method",
          "required": false
        },
        {
          "type": "boolean",
          "default": false,
          "name": "discovery",
          "required": false
        }
      ]
    },
    {
      "name": "RevokeTokenRequest",
      "description": "Request body for operation revokeToken",
      "fields": [
        {
          "type": "string",
          "name": "client_assertion_type",
          "required": false
        },
        {
          "type": "string",
          "name": "client_assertion",
          "required": false
        },
        {
          "type": "string",
          "description": "Active access or refresh token to be revoked",
          "name": "token",
          "required": true
        }
      ]
    },
    {
      "name": "GetTokenRequest",
      "description": "Request body for operation getToken",
      "fields": [
        {
          "type": "string",
          "description": "Phone number linked to an account or extension in E.164 format with or without leading '+' sign",
          "name": "username"
        },
        {
          "type": "string",
          "description": "User's password",
          "format": "password",
          "name": "password"
        },
        {
          "type": "string",
          "description": "Optional. Extension short number. If company number is specified as a username, and extension is not specified, the server will attempt to authenticate client as main company administrator",
          "name": "extension"
        },
        {
          "type": "string",
          "description": "Grant type",
          "default": "password",
          "enum": [
            "authorization_code",
            "password",
            "refresh_token",
            "client_credentials"
          ],
          "name": "grant_type"
        },
        {
          "type": "string",
          "description": "Authorization code",
          "name": "code"
        },
        {
          "type": "string",
          "description": "This is a callback URI which determines where the response is sent. The value of this parameter must exactly match one of the URIs you have provided for your app upon registration",
          "name": "redirect_uri"
        },
        {
          "maximum": 3600,
          "minimum": 600,
          "type": "integer",
          "description": "Access token lifetime in seconds",
          "format": "int64",
          "default": 3600,
          "name": "access_token_ttl"
        },
        {
          "maximum": 604800,
          "type": "integer",
          "description": "Refresh token lifetime in seconds",
          "format": "int64",
          "default": 604800,
          "name": "refresh_token_ttl"
        },
        {
          "type": "string",
          "description": "List of API permissions to be used with access token. Can be omitted when requesting all permissions defined during the application registration phase",
          "name": "scope"
        },
        {
          "type": "string",
          "description": "Previously issued refresh token. This is the only formData field used for the Refresh Token Flow.",
          "name": "refresh_token"
        },
        {
          "type": "string",
          "description": "The unique identifier of a client application. If not specified, the previously specified or auto generated value is used by default",
          "name": "endpoint_id"
        },
        {
          "type": "string",
          "name": "pin"
        },
        {
          "type": "string",
          "name": "client_id"
        },
        {
          "type": "string",
          "name": "account_id"
        },
        {
          "type": "string",
          "name": "partner_account_id"
        },
        {
          "type": "string",
          "name": "client_assertion_type"
        },
        {
          "type": "string",
          "name": "client_assertion"
        },
        {
          "type": "string",
          "name": "assertion"
        },
        {
          "type": "string",
          "name": "brand_id"
        },
        {
          "type": "string",
          "name": "code_verifier"
        }
      ]
    },
    {
      "name": "ListContactsParameters",
      "description": "Query parameters for operation listContacts",
      "fields": [
        {
          "name": "startsWith",
          "description": "If specified, only contacts whose First name or Last name start with the mentioned substring are returned. Case-insensitive",
          "type": "string"
        },
        {
          "name": "sortBy",
          "description": "Sorts results by the specified property",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "FirstName",
              "LastName",
              "Company"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "phoneNumber",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "CreateContactParameters",
      "description": "Query parameters for operation createContact",
      "fields": [
        {
          "name": "dialingPlan",
          "description": "A country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. The default value is home country of the current extension",
          "type": "string"
        }
      ]
    },
    {
      "name": "UpdateContactParameters",
      "description": "Query parameters for operation updateContact",
      "fields": [
        {
          "name": "dialingPlan",
          "description": "A country code value complying with the [ISO 3166-1 alpha-2](https://ru.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. The default value is home country of the current extension",
          "type": "string"
        }
      ]
    },
    {
      "name": "SyncAddressBookParameters",
      "description": "Query parameters for operation syncAddressBook",
      "fields": [
        {
          "name": "syncType",
          "description": "Type of synchronization",
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ]
        },
        {
          "name": "syncToken",
          "description": "Value of syncToken property of the last sync request response",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Number of records per page to be returned. The max number of records is 250, which is also the default. For 'FSync' if the number of records exceeds the parameter value (either specified or default), all of the pages can be retrieved in several requests. For 'ISync' if the number of records exceeds the page size, the number of incoming changes to this number is limited",
          "type": "integer"
        },
        {
          "name": "pageId",
          "description": "Internal identifier of a page. It can be obtained from the 'nextPageId' parameter passed in response body",
          "type": "integer"
        }
      ]
    },
    {
      "name": "ListDirectoryEntriesParameters",
      "description": "Query parameters for operation listDirectoryEntries",
      "fields": [
        {
          "name": "showFederated",
          "description": "If 'True' then contacts of all accounts in federation are returned. If 'False' then only contacts of the current account are returned, and account section is eliminated in this case",
          "type": "boolean",
          "default": true
        },
        {
          "name": "type",
          "description": "Type of an extension. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "type": "string",
          "enum": [
            "User",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ParkLocation",
            "Limited"
          ]
        },
        {
          "name": "page",
          "description": "Page number",
          "type": "string",
          "default": "1"
        },
        {
          "name": "perPage",
          "description": "Records count to be returned per one page. The default value is 1000. Specific keyword values: `all` - all records are returned in one page; `max` - maximum count of records that can be returned in one page",
          "maximum": 2000,
          "type": "integer",
          "default": 1000
        },
        {
          "name": "siteId",
          "description": "Internal identifier of the business site to which extensions belong",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListBlockedAllowedNumbersParameters",
      "description": "Query parameters for operation listBlockedAllowedNumbers",
      "fields": [
        {
          "name": "page",
          "type": "integer"
        },
        {
          "name": "perPage",
          "type": "integer"
        },
        {
          "name": "status",
          "type": "string",
          "enum": [
            "Blocked",
            "Allowed"
          ]
        }
      ]
    },
    {
      "name": "ListForwardingNumbersParameters",
      "description": "Query parameters for operation listForwardingNumbers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted.",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items).",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ListAnsweringRulesParameters",
      "description": "Query parameters for operation listAnsweringRules",
      "fields": [
        {
          "name": "type",
          "description": "Filters custom call handling rules of the extension",
          "type": "string",
          "enum": [
            "Custom"
          ]
        },
        {
          "name": "view",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Detailed",
            "Simple"
          ]
        },
        {
          "name": "enabledOnly",
          "description": "If true, then only active call handling rules are returned",
          "type": "boolean",
          "default": false
        },
        {
          "name": "page",
          "type": "string",
          "default": "1"
        },
        {
          "name": "perPage",
          "type": "string",
          "default": "100"
        }
      ]
    },
    {
      "name": "ReadAnsweringRuleParameters",
      "description": "Query parameters for operation readAnsweringRule",
      "fields": [
        {
          "name": "showInactiveNumbers",
          "description": "Indicates whether inactive numbers should be returned or not",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ListCompanyAnsweringRulesParameters",
      "description": "Query parameters for operation listCompanyAnsweringRules",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items per page)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ListStandardGreetingsParameters",
      "description": "Query parameters for operation listStandardGreetings",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted.",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items).",
          "type": "integer",
          "default": 100
        },
        {
          "name": "type",
          "description": "Type of a greeting, specifying the case when the greeting is played",
          "type": "string",
          "enum": [
            "Introductory",
            "Announcement",
            "ConnectingMessage",
            "ConnectingAudio",
            "Voicemail",
            "Unavailable",
            "HoldMusic",
            "Company"
          ]
        },
        {
          "name": "usageType",
          "description": "Usage type of a greeting, specifying if the greeting is applied for user extension or department (call queue) extension",
          "type": "string",
          "enum": [
            "UserExtensionAnsweringRule",
            "ExtensionAnsweringRule",
            "DepartmentExtensionAnsweringRule",
            "CompanyAnsweringRule",
            "CompanyAfterHoursAnsweringRule",
            "VoicemailExtensionAnsweringRule",
            "AnnouncementExtensionAnsweringRule",
            "SharedLinesGroupAnsweringRule"
          ]
        }
      ]
    },
    {
      "name": "CreateCompanyGreetingRequest",
      "description": "Request body for operation createCompanyGreeting",
      "fields": [
        {
          "type": "string",
          "description": "Type of a greeting, specifying the case when the greeting is played.",
          "enum": [
            "Company",
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "answeringRuleId",
          "required": false
        },
        {
          "type": "string",
          "description": "Internal identifier of a language. See Get Language List",
          "name": "languageId",
          "required": false
        },
        {
          "description": "Meida file to upload",
          "name": "binary",
          "required": true,
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "CreateCustomUserGreetingRequest",
      "description": "Request body for operation createCustomUserGreeting",
      "fields": [
        {
          "type": "string",
          "description": "Type of a greeting, specifying the case when the greeting is played.",
          "enum": [
            "Introductory",
            "Announcement",
            "ConnectingMessage",
            "ConnectingAudio",
            "Voicemail",
            "Unavailable",
            "HoldMusic"
          ],
          "name": "type",
          "required": true
        },
        {
          "type": "string",
          "description": "Internal identifier of an answering rule",
          "name": "answeringRuleId",
          "required": false
        },
        {
          "description": "Meida file to upload",
          "name": "binary",
          "required": true,
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "CreateCustomUserGreetingParameters",
      "description": "Query parameters for operation createCustomUserGreeting",
      "fields": [
        {
          "name": "apply",
          "description": "Specifies whether to apply an answering rule or not. If set to true then `answeringRule` parameter is mandatory. If set to false, then the answering rule is not applied even if specified",
          "type": "boolean",
          "default": true
        }
      ]
    },
    {
      "name": "CreateIVRPromptRequest",
      "description": "Request body for operation createIVRPrompt",
      "fields": [
        {
          "description": "Audio file that will be used as a prompt. Attachment cannot be empty, only audio files are supported",
          "name": "attachment",
          "required": true,
          "$ref": "Attachment"
        },
        {
          "type": "string",
          "description": "Description of file contents.",
          "name": "name",
          "required": false
        }
      ]
    },
    {
      "name": "ListCallRecordingCustomGreetingsParameters",
      "description": "Query parameters for operation listCallRecordingCustomGreetings",
      "fields": [
        {
          "name": "type",
          "type": "string",
          "enum": [
            "StartRecording",
            "StopRecording",
            "AutomaticRecording"
          ]
        }
      ]
    },
    {
      "name": "ListA2PSMSParameters",
      "description": "Query parameters for operation listA2PSMS",
      "fields": [
        {
          "name": "batchId",
          "description": "Internal identifier of a message batch used for filtering records",
          "example": "1234",
          "type": "string"
        },
        {
          "name": "direction",
          "description": "Direction of a message to filter the message list result. By default there is no filter applied - both Inbound and Outbound messages are returned",
          "example": "Outbound",
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ]
        },
        {
          "name": "view",
          "description": "Indicates if the response has to be detailed, includes text in the response if detailed",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "dateFrom",
          "description": "Date to filter message list result. Messages with `creationTime` later than or equal to `dateFrom` value are returned. The default value is 1 day before the current datetime",
          "example": "2020-11-09T16:07:52.597Z",
          "type": "string"
        },
        {
          "name": "dateTo",
          "description": "Date to filter message list result. Messages with `creationTime` earlier than `dateTo` value are returned. The default is the current datetime",
          "example": "2020-11-25T16:07:52.597Z",
          "type": "string"
        },
        {
          "name": "phoneNumber",
          "style": "form",
          "explode": true,
          "description": "List of phone numbers (specified in 'to' or 'from' fields of a message) to filter the results. Maximum number of phone numbers allowed to be specified as filters is 15",
          "example": "phoneNumber=15551234455&phoneNumber=15551235577",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "pageToken",
          "description": "Token of a page to be retrieved",
          "example": "pgt1",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Number of messages to be returned per request",
          "example": 1,
          "type": "integer",
          "format": "int64",
          "default": 1000
        }
      ]
    },
    {
      "name": "ReadA2PSMSOptOutsParameters",
      "description": "Query parameters for operation readA2PSMSOptOuts",
      "fields": [
        {
          "name": "from",
          "description": "The sender's phone number (`from` field) in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format for filtering messages",
          "example": "15551234455",
          "type": "string"
        },
        {
          "name": "to",
          "description": "The reciever's phone number (`to` field) in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format for filtering messages",
          "example": "15551237755",
          "type": "string"
        },
        {
          "name": "pageToken",
          "description": "Token of the page to be retrieved",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Number of records to be returned for the page",
          "example": 5,
          "type": "integer",
          "format": "int64",
          "default": 1000
        }
      ]
    },
    {
      "name": "ReadUserCallLogParameters",
      "description": "Query parameters for operation readUserCallLog",
      "fields": [
        {
          "name": "extensionNumber",
          "description": "Extension number of a user. If specified, returns call log for a particular extension only",
          "type": "string"
        },
        {
          "name": "showBlocked",
          "description": "If 'True' then calls from/to blocked numbers are returned",
          "type": "boolean",
          "default": true
        },
        {
          "name": "phoneNumber",
          "description": "Phone number of a caller/callee. If specified, returns all calls (both incoming and outcoming) with the phone number specified",
          "type": "string"
        },
        {
          "name": "direction",
          "description": "The direction for the resulting records. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "sessionId",
          "description": "Internal identifier of a session",
          "type": "string"
        },
        {
          "name": "type",
          "description": "Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "transport",
          "description": "Call transport type. 'PSTN' specifies that a call leg is initiated from the PSTN network provider; 'VoIP' - from an RC phone. By default this filter is disabled",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PSTN",
              "VoIP"
            ]
          }
        },
        {
          "name": "view",
          "description": "View of call records. The same view parameter specified for FSync will be applied for ISync, the view cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "withRecording",
          "description": "**Deprecated**. Supported for compatibility reasons. `True` if only recorded calls are returned. If both `withRecording` and `recordingType` are specified, then `withRecording` is ignored",
          "type": "boolean",
          "default": false
        },
        {
          "name": "recordingType",
          "description": "Type of a call recording. If not specified, then calls without recordings are also returned",
          "type": "string",
          "enum": [
            "Automatic",
            "OnDemand",
            "All"
          ]
        },
        {
          "name": "dateTo",
          "description": "The end datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateFrom",
          "description": "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is dateTo minus 24 hours",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "showDeleted",
          "description": "If 'True' then deleted calls are returned",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "DeleteUserCallLogParameters",
      "description": "Query parameters for operation deleteUserCallLog",
      "fields": [
        {
          "name": "dateTo",
          "description": "The end datetime for records deletion in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]  format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "phoneNumber",
          "type": "string"
        },
        {
          "name": "extensionNumber",
          "type": "string"
        },
        {
          "name": "type",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "direction",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "dateFrom",
          "type": "string",
          "format": "date-time"
        }
      ]
    },
    {
      "name": "SyncUserCallLogParameters",
      "description": "Query parameters for operation syncUserCallLog",
      "fields": [
        {
          "name": "syncType",
          "description": "Type of synchronization",
          "type": "string",
          "default": "FSync",
          "enum": [
            "FSync",
            "ISync"
          ]
        },
        {
          "name": "syncToken",
          "description": "Value of syncToken property of last sync request response",
          "type": "string"
        },
        {
          "name": "dateFrom",
          "description": "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601] format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is the current moment",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "recordCount",
          "description": "For 'FSync' the parameter is mandatory, it limits the number of records to be returned in response. For 'ISync' it specifies with how many records to extend sync Frame to the past, the maximum number of records is 250",
          "type": "integer"
        },
        {
          "name": "statusGroup",
          "description": "Type of calls to be returned. The default value is 'All'",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Missed",
              "All"
            ]
          }
        },
        {
          "name": "view",
          "description": "View of call records. The same view parameter specified for FSync will be applied for ISync, the view cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "showDeleted",
          "description": "Supported for ISync. If 'True' then deleted call records are returned",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ReadUserCallRecordParameters",
      "description": "Query parameters for operation readUserCallRecord",
      "fields": [
        {
          "name": "view",
          "description": "View of call records. The view value specified for 'FSync' will also be applied for 'ISync' by default, since it cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        }
      ]
    },
    {
      "name": "ListExtensionActiveCallsParameters",
      "description": "Query parameters for operation listExtensionActiveCalls",
      "fields": [
        {
          "name": "direction",
          "description": "The direction for the result records. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "view",
          "description": "View of call records. The same view parameter specified for FSync will be applied for ISync, the view cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "type",
          "description": "Call type of a record. If not specified, all call types are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ReadCompanyCallLogParameters",
      "description": "Query parameters for operation readCompanyCallLog",
      "fields": [
        {
          "name": "extensionNumber",
          "description": "Extension number of a user. If specified, returns call log for a particular extension only",
          "type": "string"
        },
        {
          "name": "phoneNumber",
          "description": "Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the phone number specified. Cannot be specified together with the extensionNumber filter",
          "type": "string"
        },
        {
          "name": "direction",
          "description": "The direction for the result records. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "type",
          "description": "Call type of a record. If not specified, all call types are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "view",
          "description": "View of call records. The same view parameter specified for FSync will be applied for ISync, the view cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "withRecording",
          "description": "**Deprecated**. Supported for compatibility reasons only. `true` if only recorded calls are returned. The default value is `false`. If both `withRecording` and `recordingType` are specified, `withRecording` is ignored",
          "type": "boolean"
        },
        {
          "name": "recordingType",
          "description": "Type of a call recording. If not specified, then calls without recordings are also returned",
          "type": "string",
          "enum": [
            "Automatic",
            "OnDemand",
            "All"
          ]
        },
        {
          "name": "dateFrom",
          "description": "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]  format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is dateTo minus 24 hours",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]  format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "sessionId",
          "description": "Internal identifier of a call session",
          "type": "string"
        }
      ]
    },
    {
      "name": "SyncAccountCallLogParameters",
      "description": "Query parameters for operation syncAccountCallLog",
      "fields": [
        {
          "name": "syncType",
          "description": "Type of synchronization.",
          "type": "string",
          "default": "FSync",
          "enum": [
            "FSync",
            "ISync"
          ]
        },
        {
          "name": "syncToken",
          "description": "Value of syncToken property of last sync request response",
          "type": "string"
        },
        {
          "name": "dateFrom",
          "description": "The start datetime for resulting records in (ISO 8601)[https://en.wikipedia.org/wiki/ISO_8601]  format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is the current moment",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "recordCount",
          "description": "For 'FSync' the parameter is mandatory, it limits the number of records to be returned in response. For 'ISync' it specifies with how many records to extend sync frame to the past, the maximum number of records is 250",
          "type": "integer"
        },
        {
          "name": "statusGroup",
          "description": "Type of calls to be returned.",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "enum": [
            "Missed",
            "All"
          ]
        },
        {
          "name": "view",
          "description": "View of call records. The same view parameter specified for FSync will be applied for ISync, the view cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "showDeleted",
          "description": "Supported for ISync. If 'True' then deleted call records are returned",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ReadCompanyCallRecordParameters",
      "description": "Query parameters for operation readCompanyCallRecord",
      "fields": [
        {
          "name": "view",
          "description": "View of call records. The view value specified for 'FSync' will also be applied for 'ISync' by default, since it cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        }
      ]
    },
    {
      "name": "ListCompanyActiveCallsParameters",
      "description": "Query parameters for operation listCompanyActiveCalls",
      "fields": [
        {
          "name": "direction",
          "description": "The direction for the result records. If not specified, both inbound and outbound records are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "view",
          "description": "View of call records. The same view parameter specified for FSync will be applied for ISync, the view cannot be changed for ISync",
          "type": "string",
          "default": "Simple",
          "enum": [
            "Simple",
            "Detailed"
          ]
        },
        {
          "name": "type",
          "description": "Call type of a record. If not specified, all call types are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Voice",
              "Fax"
            ]
          }
        },
        {
          "name": "transport",
          "description": "Call transport type. 'PSTN' specifies that a call leg is initiated from the PSTN network provider; 'VoIP' - from an RC phone. By default this filter is disabled",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PSTN",
              "VoIP"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ReadDeviceParameters",
      "description": "Query parameters for operation readDevice",
      "fields": [
        {
          "name": "syncEmergencyAddress",
          "description": "Specifies if emergency address should be synchronized or not",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "UpdateDeviceParameters",
      "description": "Query parameters for operation updateDevice",
      "fields": [
        {
          "name": "prestatement",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListExtensionDevicesParameters",
      "description": "Query parameters for operation listExtensionDevices",
      "fields": [
        {
          "name": "linePooling",
          "description": "Pooling type of a device",
          "type": "string",
          "enum": [
            "Host",
            "Guest",
            "None"
          ]
        },
        {
          "name": "feature",
          "description": "Device feature or multiple features supported",
          "type": "string",
          "enum": [
            "Intercom",
            "Paging",
            "BLA",
            "HELD"
          ]
        },
        {
          "name": "page",
          "description": "Number of a page to be returned",
          "type": "string",
          "default": "1"
        },
        {
          "name": "perPage",
          "description": "Number of records per page to be returned",
          "type": "string",
          "default": "100"
        }
      ]
    },
    {
      "name": "ListAccountMeetingRecordingsParameters",
      "description": "Query parameters for operation listAccountMeetingRecordings",
      "fields": [
        {
          "name": "meetingId",
          "description": "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "meetingStartTimeFrom",
          "description": "Recordings of meetings started after the time specified will be returned. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "meetingStartTimeTo",
          "description": "Recordings of meetings started before the time specified will be returned. The default value is current time. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "page",
          "description": "Page number",
          "type": "integer"
        },
        {
          "name": "perPage",
          "description": "Number of items per page. The `max` value is supported to indicate the maximum size - 300",
          "maximum": 300,
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ListUserMeetingRecordingsParameters",
      "description": "Query parameters for operation listUserMeetingRecordings",
      "fields": [
        {
          "name": "meetingId",
          "description": "Internal identifier of a meeting. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "meetingStartTimeFrom",
          "description": "Recordings of meetings started after the time specified will be returned. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "meetingStartTimeTo",
          "description": "Recordings of meetings started before the time specified will be returned. The default value is current time. Either `meetingId` or `meetingStartTime`/`meetingEndTime` can be specified",
          "type": "string"
        },
        {
          "name": "page",
          "description": "Page number",
          "type": "integer"
        },
        {
          "name": "perPage",
          "description": "Number of items per page. The `max` value is supported to indicate the maximum size - 300",
          "maximum": 300,
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "CreateUserMeetingProfileImageRequest",
      "description": "Request body for operation createUserMeetingProfileImage",
      "fields": [
        {
          "type": "string",
          "description": "Profile image file size cannot exceed 2Mb. Supported formats are: JPG/JPEG, GIF and PNG",
          "format": "file",
          "name": "profilePic",
          "required": true
        }
      ]
    },
    {
      "name": "CreateFaxMessageRequest",
      "description": "Request body for operation createFaxMessage",
      "fields": [
        {
          "type": "string",
          "description": "Resolution of Fax",
          "enum": [
            "High",
            "Low"
          ],
          "name": "faxResolution",
          "required": false
        },
        {
          "type": "array",
          "description": "To Phone Number",
          "items": {
            "$ref": "MessageStoreCalleeInfoRequest"
          },
          "name": "to",
          "required": true
        },
        {
          "type": "string",
          "description": "Timestamp to send fax at. If not specified (current or the past), the fax is sent immediately",
          "format": "date-time",
          "name": "sendTime",
          "required": false
        },
        {
          "type": "string",
          "description": "ISO Code. e.g UK",
          "name": "isoCode",
          "required": false
        },
        {
          "type": "integer",
          "description": "Cover page identifier. For the list of available cover page identifiers please call the method Fax Cover Pages. If not specified, the default cover page which is configured in 'Outbound Fax Settings' is attached",
          "format": "int32",
          "name": "coverIndex",
          "required": false
        },
        {
          "type": "string",
          "description": "Cover page text, entered by the fax sender and printed on the cover page. Maximum length is limited to 1024 symbols",
          "name": "coverPageText",
          "required": false
        },
        {
          "type": "array",
          "description": "File to upload",
          "format": "binary",
          "collectionFormat": "multi",
          "items": {
            "$ref": "Attachment"
          },
          "name": "attachments",
          "required": true
        }
      ]
    },
    {
      "name": "ListFaxCoverPagesParameters",
      "description": "Query parameters for operation listFaxCoverPages",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ListMessagesParameters",
      "description": "Query parameters for operation listMessages",
      "fields": [
        {
          "name": "availability",
          "description": "Specifies the availability status for the resulting messages. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Alive",
              "Deleted",
              "Purged"
            ]
          }
        },
        {
          "name": "conversationId",
          "description": "Specifies the conversation identifier for the resulting messages",
          "type": "integer"
        },
        {
          "name": "dateFrom",
          "description": "The start datetime for resulting messages in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is dateTo minus 24 hours",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end datetime for resulting messages in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "direction",
          "description": "The direction for the resulting messages. If not specified, both inbound and outbound messages are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "distinctConversations",
          "description": "If 'True', then the latest messages per every conversation ID are returned",
          "type": "boolean"
        },
        {
          "name": "messageType",
          "description": "The type of the resulting messages. If not specified, all messages without message type filtering are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Fax",
              "SMS",
              "VoiceMail",
              "Pager",
              "Text"
            ]
          }
        },
        {
          "name": "readStatus",
          "description": "The read status for the resulting messages. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Read",
              "Unread"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "phoneNumber",
          "description": "The phone number. If specified, messages are returned for this particular phone number only",
          "type": "string"
        }
      ]
    },
    {
      "name": "DeleteMessageByFilterParameters",
      "description": "Query parameters for operation deleteMessageByFilter",
      "fields": [
        {
          "name": "conversationId",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "dateTo",
          "description": "Messages received earlier then the date specified will be deleted. The default value is current datetime",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "type",
          "description": "Type of messages to be deleted",
          "type": "string",
          "default": "All",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text",
            "All"
          ]
        }
      ]
    },
    {
      "name": "UpdateMessageParameters",
      "description": "Query parameters for operation updateMessage",
      "fields": [
        {
          "name": "dateFrom",
          "type": "string"
        },
        {
          "name": "type",
          "type": "string",
          "enum": [
            "Fax",
            "SMS",
            "VoiceMail",
            "Pager",
            "Text",
            "All"
          ]
        }
      ]
    },
    {
      "name": "DeleteMessageParameters",
      "description": "Query parameters for operation deleteMessage",
      "fields": [
        {
          "name": "purge",
          "description": "If the value is 'True', then the message is purged immediately with all the attachments",
          "type": "boolean",
          "default": false
        },
        {
          "name": "conversationId",
          "description": "Internal identifier of a message thread",
          "type": "integer"
        }
      ]
    },
    {
      "name": "ReadMessageContentParameters",
      "description": "Query parameters for operation readMessageContent",
      "fields": [
        {
          "name": "contentDisposition",
          "description": "Content disposition of a response",
          "type": "string",
          "default": "Inline",
          "enum": [
            "Inline",
            "Attachment"
          ]
        }
      ]
    },
    {
      "name": "SyncMessagesParameters",
      "description": "Query parameters for operation syncMessages",
      "fields": [
        {
          "name": "conversationId",
          "description": "Conversation identifier for the resulting messages. Meaningful for SMS and Pager messages only.",
          "type": "integer"
        },
        {
          "name": "dateFrom",
          "description": "The start datetime for resulting messages in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is dateTo minus 24 hours",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "dateTo",
          "description": "The end datetime for resulting messages in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time",
          "type": "string",
          "format": "date-time"
        },
        {
          "name": "direction",
          "description": "Direction for the resulting messages. If not specified, both inbound and outbound messages are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ]
          }
        },
        {
          "name": "distinctConversations",
          "description": "If 'True', then the latest messages per every conversation ID are returned",
          "type": "boolean"
        },
        {
          "name": "messageType",
          "description": "Type for the resulting messages. If not specified, all types of messages are returned. Multiple values are accepted",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Fax",
              "SMS",
              "VoiceMail",
              "Pager",
              "Text"
            ]
          }
        },
        {
          "name": "recordCount",
          "description": "Limits the number of records to be returned (works in combination with dateFrom and dateTo if specified)",
          "type": "integer"
        },
        {
          "name": "syncToken",
          "description": "Value of syncToken property of last sync request response",
          "type": "string"
        },
        {
          "name": "syncType",
          "description": "Type of message synchronization",
          "type": "string",
          "enum": [
            "FSync",
            "ISync"
          ]
        }
      ]
    },
    {
      "name": "ParsePhoneNumberParameters",
      "description": "Query parameters for operation parsePhoneNumber",
      "fields": [
        {
          "name": "homeCountry",
          "description": "Internal identifier of a home country. The default value is ISO code (ISO 3166) of the user's home country or brand country, if the user is undefined",
          "type": "string"
        },
        {
          "name": "nationalAsPriority",
          "description": "The default value is 'False'. If 'True', the numbers that are closer to the home country are given higher priority",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListExtensionPhoneNumbersParameters",
      "description": "Query parameters for operation listExtensionPhoneNumbers",
      "fields": [
        {
          "name": "status",
          "description": "Status of a phone number. Multiple values are supported",
          "type": "string",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary"
          ]
        },
        {
          "name": "usageType",
          "description": "Usage type of a phone number",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MainCompanyNumber",
              "AdditionalCompanyNumber",
              "CompanyNumber",
              "DirectNumber",
              "CompanyFaxNumber",
              "ForwardedNumber",
              "ForwardedCompanyNumber",
              "BusinessMobileNumber",
              "ExternalMobileNumber"
            ]
          }
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'",
          "type": "integer"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items). If not specified, the value is '100' by default",
          "type": "integer"
        }
      ]
    },
    {
      "name": "DeleteExtensionParameters",
      "description": "Query parameters for operation deleteExtension",
      "fields": [
        {
          "name": "savePhoneLines",
          "type": "boolean",
          "default": false
        },
        {
          "name": "savePhoneNumbers",
          "type": "boolean",
          "default": true
        }
      ]
    },
    {
      "name": "ListExtensionGrantsParameters",
      "description": "Query parameters for operation listExtensionGrants",
      "fields": [
        {
          "name": "extensionType",
          "description": "Type of extension to be returned. Multiple values are supported. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "type": "string",
          "enum": [
            "User",
            "FaxUser",
            "VirtualUser",
            "DigitalUser",
            "Department",
            "Announcement",
            "Voicemail",
            "SharedLinesGroup",
            "PagingOnly",
            "IvrMenu",
            "ApplicationExtension",
            "ParkLocation",
            "Limited",
            "Bot"
          ]
        },
        {
          "name": "page",
          "type": "string",
          "default": "1"
        },
        {
          "name": "perPage",
          "type": "string",
          "default": "100"
        }
      ]
    },
    {
      "name": "ListAutomaticLocationUpdatesUsersParameters",
      "description": "Query parameters for operation listAutomaticLocationUpdatesUsers",
      "fields": [
        {
          "name": "type",
          "description": "Extension type. Multiple values are supported",
          "type": "string",
          "enum": [
            "User",
            "Limited"
          ]
        },
        {
          "name": "searchString",
          "description": "Filters entries containing the specified substring in user name, extension or department. The characters range is 0-64; not case-sensitive. If empty then the filter is ignored",
          "type": "string"
        },
        {
          "name": "department",
          "description": "Department name to filter the users. The value range is 0-64; not case-sensitive. If not specified then the parameter is ignored. Multiple values are supported",
          "type": "string"
        },
        {
          "name": "siteId",
          "description": "Internal identifier of a site. To filter users of Main Site (Company) `main-site` must be specified. Supported only If Multi-Site feature is enabled for the account. Multiple values are supported",
          "type": "string"
        },
        {
          "name": "featureEnabled",
          "description": "Filters entries by their status of Automatic Location Updates feature",
          "type": "boolean"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order) or minus sign '-' (descending order). Supported values: 'name', 'modelName', 'siteName', 'featureEnabled'",
          "type": "string",
          "default": "name"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items). The values supported: `Max` or numeric value. If not specified, 100 records are returned per one page",
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are supported",
          "type": "integer",
          "default": 1
        }
      ]
    },
    {
      "name": "ListWirelessPointsParameters",
      "description": "Query parameters for operation listWirelessPoints",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site. To filter Main Site (Company) 'main-site' must be specified. Supported only If multi-site feature is enabled for the account",
          "type": "string"
        },
        {
          "name": "searchString",
          "description": "Filters entries by the specified substring (search by chassis ID, switch name or address) The characters range is 0-64 (if empty the filter is ignored)",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by '+' sign (ascending order) or '-' sign (descending order). The default sorting is by `name`",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items). The values supported: `Max` or numeric value. If not specified, 100 records are returned per one page",
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are supported",
          "type": "integer",
          "default": 1
        }
      ]
    },
    {
      "name": "ListDevicesAutomaticLocationUpdatesParameters",
      "description": "Query parameters for operation listDevicesAutomaticLocationUpdates",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site. To filter devices of Main Site (Company) `main-site` must be specified. Supported only If Multi-Site feature is enabled for the account",
          "type": "string"
        },
        {
          "name": "featureEnabled",
          "description": "Filters entries by their status of Automatic Location Updates feature",
          "type": "boolean"
        },
        {
          "name": "model",
          "description": "Internal identifier of a device model for filtering. Multiple values are supported",
          "type": "string"
        },
        {
          "name": "compatibleOnly",
          "description": "Filters devices which support HELD protocol",
          "type": "boolean"
        },
        {
          "name": "searchString",
          "description": "Filters entries which have device name or model name containing the mentioned substring. The value should be split by spaces; the range is 0 - 64 characters, not case-sensitive. If empty the filter is ignored",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order) or minus sign '-' (descending order). Supported values: 'name', 'modelName', 'siteName', 'featureEnabled'",
          "type": "string",
          "default": "name"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items). The values supported: `Max` or numeric value. If not specified, 100 records are returned per one page",
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are supported",
          "type": "integer",
          "default": 1
        }
      ]
    },
    {
      "name": "ListAccountSwitchesParameters",
      "description": "Query parameters for operation listAccountSwitches",
      "fields": [
        {
          "name": "siteId",
          "description": "Internal identifier of a site. To filter Main Site (Company) main-site must be specified. Supported only If multi-site feature is enabled for the account",
          "type": "string"
        },
        {
          "name": "searchString",
          "description": "Filters entries by the specified substring (search by chassis ID, switch name or address) The characters range is 0-64 (if empty the filter is ignored)",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by '+' sign (ascending order) or '-' sign (descending order). The default sorting is by `name`",
          "type": "string"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items). The values supported: `Max` or numeric value. If not specified, 100 records are returned per one page",
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are supported",
          "type": "integer",
          "default": 1
        }
      ]
    },
    {
      "name": "ListEmergencyLocationsParameters",
      "description": "Query parameters for operation listEmergencyLocations",
      "fields": [
        {
          "name": "searchString",
          "description": "Filters entries containing the specified substring in address and name fields. The characters range is 0-64; not case-sensitive. If empty then the filter is ignored",
          "type": "string"
        },
        {
          "name": "siteId",
          "description": "Internal identifier of a site for filtering. To filter by Main Site (Company) `main-site` value should be specified",
          "type": "string"
        },
        {
          "name": "addressStatus",
          "type": "string",
          "enum": [
            "Valid",
            "Invalid"
          ]
        },
        {
          "name": "usageStatus",
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        {
          "name": "domesticCountryId",
          "type": "string"
        },
        {
          "name": "orderBy",
          "description": "Comma-separated list of fields to order results prefixed by plus sign '+' (ascending order) or minus sign '-' (descending order). Supported values: 'address'",
          "type": "string",
          "default": "address"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items). The values supported: `Max` or numeric value. If not specified, 100 records are returned per one page",
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are supported",
          "type": "integer",
          "default": 1
        }
      ]
    },
    {
      "name": "DeleteEmergencyLocationParameters",
      "description": "Query parameters for operation deleteEmergencyLocation",
      "fields": [
        {
          "name": "newLocationId",
          "description": "Internal identifier of a location that should be used instead of a deleted one",
          "type": "string"
        },
        {
          "name": "validateOnly",
          "description": "Flag indicating that validation of emergency location(s) is required before deletion",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "UpdateUserProfileImageRequest",
      "description": "Request body for operation updateUserProfileImage",
      "fields": [
        {
          "name": "image",
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "CreateUserProfileImageRequest",
      "description": "Request body for operation createUserProfileImage",
      "fields": [
        {
          "name": "image",
          "required": true,
          "$ref": "Attachment"
        }
      ]
    },
    {
      "name": "ReadConferencingSettingsParameters",
      "description": "Query parameters for operation readConferencingSettings",
      "fields": [
        {
          "name": "countryId",
          "description": "Internal identifier of a country. If not specified, the response is returned for the brand country",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListCountriesParameters",
      "description": "Query parameters for operation listCountries",
      "fields": [
        {
          "name": "loginAllowed",
          "description": "Specifies whether login with the phone numbers of this country is enabled or not",
          "type": "boolean"
        },
        {
          "name": "signupAllowed",
          "description": "Indicates whether signup/billing is allowed for a country. If not specified all countries are returned (according to other filters specified if any)",
          "type": "boolean"
        },
        {
          "name": "numberSelling",
          "description": "Specifies if RingCentral sells phone numbers of this country",
          "type": "boolean"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "freeSoftphoneLine",
          "description": "Specifies if free phone line for softphone is available for a country or not",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListLocationsParameters",
      "description": "Query parameters for operation listLocations",
      "fields": [
        {
          "name": "orderBy",
          "description": "Sorts results by the property specified",
          "type": "string",
          "default": "City",
          "enum": [
            "Npa",
            "City"
          ]
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "stateId",
          "description": "Internal identifier of a state",
          "type": "string"
        },
        {
          "name": "withNxx",
          "description": "Specifies if nxx codes are returned",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ListStatesParameters",
      "description": "Query parameters for operation listStates",
      "fields": [
        {
          "name": "allCountries",
          "description": "If set to 'True' then states for all countries are returned and `countryId` is ignored, even if specified. If the value is empty then the parameter is ignored",
          "type": "boolean"
        },
        {
          "name": "countryId",
          "description": "Internal identifier of a country",
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "withPhoneNumbers",
          "description": "If 'True', the list of states with phone numbers available for buying is returned",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "ListTimezonesParameters",
      "description": "Query parameters for operation listTimezones",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "string",
          "default": "1"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "string",
          "default": "100"
        }
      ]
    },
    {
      "name": "ReadTimezoneParameters",
      "description": "Query parameters for operation readTimezone",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "string",
          "default": "1"
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "string",
          "default": "100"
        }
      ]
    },
    {
      "name": "ListAccountPhoneNumbersParameters",
      "description": "Query parameters for operation listAccountPhoneNumbers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "usageType",
          "description": "Usage type of a phone number",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MainCompanyNumber",
              "AdditionalCompanyNumber",
              "CompanyNumber",
              "DirectNumber",
              "CompanyFaxNumber",
              "ForwardedNumber",
              "ForwardedCompanyNumber",
              "ContactCenterNumber",
              "ConferencingNumber",
              "MeetingsNumber",
              "BusinessMobileNumber",
              "ExternalMobileNumber"
            ]
          }
        },
        {
          "name": "status",
          "description": "Status of a phone number. Multiple values are supported",
          "type": "string",
          "enum": [
            "Normal",
            "Pending",
            "PortedIn",
            "Temporary"
          ]
        }
      ]
    },
    {
      "name": "ListExtensionsParameters",
      "description": "Query parameters for operation listExtensions",
      "fields": [
        {
          "name": "extensionNumber",
          "description": "Number of extension to be retrieved",
          "type": "string"
        },
        {
          "name": "email",
          "description": "Extension email address",
          "type": "string"
        },
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "format": "int64",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "format": "int64",
          "default": 100
        },
        {
          "name": "status",
          "description": "Extension current state. Multiple values are supported. If 'Unassigned' is specified, then extensions without `extensionNumber` attribute are returned. If not specified, then all extensions are returned.",
          "allowEmptyValue": true,
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Enabled",
              "Disabled",
              "NotActivated",
              "Unassigned"
            ]
          }
        },
        {
          "name": "type",
          "description": "Extension type. Multiple values are supported. Please note that legacy 'Department' extension type corresponds to 'Call Queue' extensions in modern RingCentral product terminology",
          "allowEmptyValue": true,
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "User",
              "FaxUser",
              "VirtualUser",
              "DigitalUser",
              "Department",
              "Announcement",
              "Voicemail",
              "SharedLinesGroup",
              "PagingOnly",
              "IvrMenu",
              "ApplicationExtension",
              "ParkLocation",
              "Limited",
              "Bot",
              "ProxyAdmin",
              "DelegatedLinesGroup"
            ]
          }
        }
      ]
    },
    {
      "name": "ListUserTemplatesParameters",
      "description": "Query parameters for operation listUserTemplates",
      "fields": [
        {
          "name": "type",
          "type": "string",
          "enum": [
            "UserSettings",
            "CallHandling"
          ]
        },
        {
          "name": "page",
          "type": "string"
        },
        {
          "name": "perPage",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListCallQueuesParameters",
      "description": "Query parameters for operation listCallQueues",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "memberExtensionId",
          "description": "Internal identifier of an extension that is a member of every group within the result",
          "type": "string"
        }
      ]
    },
    {
      "name": "ListCallQueueMembersParameters",
      "description": "Query parameters for operation listCallQueueMembers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ListPagingGroupUsersParameters",
      "description": "Query parameters for operation listPagingGroupUsers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ListPagingGroupDevicesParameters",
      "description": "Query parameters for operation listPagingGroupDevices",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are accepted",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "ListCallMonitoringGroupsParameters",
      "description": "Query parameters for operation listCallMonitoringGroups",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        },
        {
          "name": "memberExtensionId",
          "description": "Internal identifier of an extension that is a member of every group within the result",
          "type": "string"
        }
      ]
    },
    {
      "name": "ReadUserFeaturesParameters",
      "description": "Query parameters for operation readUserFeatures",
      "fields": [
        {
          "name": "availableOnly",
          "type": "boolean",
          "default": false
        },
        {
          "name": "featureId",
          "style": "form",
          "explode": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    {
      "name": "ListCallMonitoringGroupMembersParameters",
      "description": "Query parameters for operation listCallMonitoringGroupMembers",
      "fields": [
        {
          "name": "page",
          "description": "Indicates the page number to retrieve. Only positive number values are allowed",
          "type": "integer",
          "default": 1
        },
        {
          "name": "perPage",
          "description": "Indicates the page size (number of items)",
          "type": "integer",
          "default": 100
        }
      ]
    },
    {
      "name": "CheckUserPermissionParameters",
      "description": "Query parameters for operation checkUserPermission",
      "fields": [
        {
          "name": "permissionId",
          "type": "string"
        },
        {
          "name": "targetExtensionId",
          "type": "string"
        }
      ]
    },
    {
      "name": "SearchViaGet2Parameters",
      "description": "Query parameters for operation searchViaGet2",
      "fields": [
        {
          "name": "filter",
          "description": "only support 'userName' or 'email' filter expressions for now",
          "type": "string"
        },
        {
          "name": "startIndex",
          "description": "start index (1-based)",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        {
          "name": "count",
          "description": "page size",
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      ]
    },
    {
      "name": "ReadCallSessionStatusParameters",
      "description": "Query parameters for operation readCallSessionStatus",
      "fields": [
        {
          "name": "timestamp",
          "description": "The date and time of a call session latest change",
          "type": "string"
        },
        {
          "name": "timeout",
          "description": "The time frame of awaiting for a status change before sending the resulting one in response",
          "type": "string"
        }
      ]
    },
    {
      "name": "PauseResumeCallRecordingParameters",
      "description": "Query parameters for operation pauseResumeCallRecording",
      "fields": [
        {
          "name": "brandId",
          "description": "Identifies a brand of a logged in user or a brand of a sign-up session",
          "type": "string",
          "default": "~"
        }
      ]
    }
  ],
  "paths": [
    {
      "paths": [
        "scim",
        "health"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/health",
          "method": "get",
          "method2": "get",
          "summary": "Check Health",
          "operationId": "checkHealth2",
          "rateLimitGroup": "NoThrottling",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "scim",
        "Users"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/Users",
          "method": "get",
          "method2": "list",
          "summary": "Search/List Users",
          "operationId": "searchViaGet2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserSearchResponse"
          },
          "queryParameters": "searchViaGet2Parameters"
        },
        {
          "endpoint": "/scim/{version}/Users",
          "method": "post",
          "method2": "post",
          "summary": "Create User",
          "operationId": "createUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "bodyParameters": "createUser"
        },
        {
          "endpoint": "/scim/{version}/Users/{id}",
          "method": "get",
          "method2": "get",
          "summary": "Get User",
          "operationId": "readUser2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/UserResponse"
          }
        },
        {
          "endpoint": "/scim/{version}/Users/{id}",
          "method": "put",
          "method2": "put",
          "summary": "Update/Replace User",
          "operationId": "replaceUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "bodyParameters": "user"
        },
        {
          "endpoint": "/scim/{version}/Users/{id}",
          "method": "delete",
          "method2": "delete",
          "summary": "Delete User",
          "operationId": "deleteUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": true
        },
        {
          "endpoint": "/scim/{version}/Users/{id}",
          "method": "patch",
          "method2": "patch",
          "summary": "Update/Patch User",
          "operationId": "patchUser2",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "bodyParameters": "userPatch"
        }
      ],
      "parameter": "id"
    },
    {
      "paths": [
        "restapi",
        "oauth",
        "token"
      ],
      "operations": [
        {
          "endpoint": "/restapi/oauth/token",
          "method": "post",
          "method2": "post",
          "description": "Returns access tokens for making API requests",
          "summary": "Get Token",
          "operationId": "getToken",
          "rateLimitGroup": "Auth",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/TokenInfo"
          },
          "bodyParameters": "getTokenRequest",
          "formUrlEncoded": true
        }
      ]
    },
    {
      "paths": [
        "restapi"
      ],
      "operations": [
        {
          "endpoint": "/restapi",
          "method": "get",
          "method2": "list",
          "description": "Returns current API version(s) and server info.",
          "summary": "Get API Versions",
          "operationId": "readAPIVersions",
          "rateLimitGroup": "NoThrottling",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetVersionsResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}",
          "method": "get",
          "method2": "get",
          "description": "Returns current API version info by apiVersion.",
          "summary": "Get Version Info",
          "operationId": "readAPIVersion",
          "rateLimitGroup": "NoThrottling",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetVersionResponse"
          }
        }
      ],
      "parameter": "apiVersion",
      "defaultParameter": "v1.0"
    },
    {
      "paths": [
        "restapi",
        "oauth",
        "revoke"
      ],
      "operations": [
        {
          "endpoint": "/restapi/oauth/revoke",
          "method": "post",
          "method2": "post",
          "description": "Revokes access/refresh token. Requests to this endpoint must be authenticated with HTTP Basic scheme using the application key and application secret as login and password, correspondingly.",
          "summary": "Revoke Token",
          "operationId": "revokeToken",
          "rateLimitGroup": "Auth",
          "withParameter": false,
          "bodyParameters": "revokeTokenRequest",
          "formUrlEncoded": true
        }
      ]
    },
    {
      "paths": [
        "scim",
        "Users",
        "dotSearch"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/Users/dotSearch",
          "method": "post",
          "method2": "post",
          "summary": "Search/List Users",
          "operationId": "searchViaPost2",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserSearchResponse"
          },
          "bodyParameters": "searchRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "oauth",
        "authorize"
      ],
      "operations": [
        {
          "endpoint": "/restapi/oauth/authorize",
          "method": "post",
          "method2": "post",
          "description": "Returns a link to a login page location.",
          "summary": "Authorize",
          "operationId": "authorize",
          "withParameter": false,
          "bodyParameters": "authorizeRequest",
          "formUrlEncoded": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "everyone"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/everyone",
          "method": "get",
          "method2": "get",
          "description": "Returns information about Everyone chat, which is a company level chat including all employees; assigned with specific name.",
          "summary": "Get Everyone Chat",
          "operationId": "readGlipEveryone",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEveryoneInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/everyone",
          "method": "patch",
          "method2": "patch",
          "description": "Updates Everyone chat information. Everyone chat is a company level chat including all employees; assigned with specific name.",
          "summary": "Update Everyone Сhat",
          "operationId": "patchGlipEveryone",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEveryoneInfo"
          },
          "bodyParameters": "updateGlipEveryoneRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "favorites"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/favorites",
          "method": "get",
          "method2": "get",
          "description": "Returns a list of the current user's favorite chats. **Note** 'Chat' is a general name for all types of threads icluding *Personal* (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific name), *Team* (chat of 2 and more participants, with a specific name), *Everyone* (company chat including all employees, with a specific name).\"",
          "summary": "Get Favorite Chats",
          "operationId": "listFavoriteChats",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipChatsListWithoutNavigation"
          },
          "queryParameters": "listFavoriteChatsParameters"
        }
      ]
    },
    {
      "paths": [
        "scim",
        "ServiceProviderConfig"
      ],
      "operations": [
        {
          "endpoint": "/scim/{version}/ServiceProviderConfig",
          "method": "get",
          "method2": "get",
          "summary": "Get Service Provider Config",
          "operationId": "readServiceProviderConfig2",
          "rateLimitGroup": "NoThrottling",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ServiceProviderConfig"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "preferences"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/preferences",
          "method": "get",
          "method2": "get",
          "description": "Returns information about user preferences.",
          "summary": "Get Preferences",
          "operationId": "readGlipPreferences",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipPreferencesInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "recent",
        "chats"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/recent/chats",
          "method": "get",
          "method2": "get",
          "description": "Returns recent chats where the user is a member. All records in response are sorted by the `lastModifiedTime` in descending order (the latest changed chat is displayed first on page). **Note** 'Chat' is a general name for all types of threads icluding *Personal* (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific name), *Team* (chat of 2 and more participants, with a specific name), *Everyone* (company chat including all employees, with a specific name).\"",
          "summary": "Get Recent Chats",
          "operationId": "listRecentChats",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipChatsListWithoutNavigation"
          },
          "queryParameters": "listRecentChatsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "location"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/location",
          "method": "get",
          "method2": "get",
          "description": "Returns all available locations for a certain state.",
          "summary": "Get Location List",
          "operationId": "listLocations",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetLocationListResponse"
          },
          "queryParameters": "listLocationsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}",
          "method": "get",
          "method2": "get",
          "description": "Returns basic information about a particular RingCentral customer account.",
          "summary": "Get Account Info",
          "operationId": "readAccountInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetAccountInfoResponse"
          }
        }
      ],
      "parameter": "accountId",
      "defaultParameter": "~"
    },
    {
      "paths": [
        "restapi",
        "number-parser",
        "parse"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/number-parser/parse",
          "method": "post",
          "method2": "post",
          "description": "Returns one or more parsed and/or formatted phone numbers that are passed as a string.",
          "summary": "Parse Phone Number",
          "operationId": "parsePhoneNumber",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ParsePhoneNumberResponse"
          },
          "queryParameters": "parsePhoneNumberParameters",
          "bodyParameters": "parsePhoneNumberRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/tasks/{taskId}",
          "method": "get",
          "method2": "get",
          "description": "Returns information about the specified task(s) by ID(s).",
          "summary": "Get Task",
          "operationId": "readTask",
          "rateLimitGroup": "Medium",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTaskInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/tasks/{taskId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes the specified task.",
          "summary": "Delete Task",
          "operationId": "deleteTask",
          "rateLimitGroup": "Medium",
          "withParameter": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/tasks/{taskId}",
          "method": "patch",
          "method2": "patch",
          "description": "Updates the specified task by ID.",
          "summary": "Patch Task",
          "operationId": "patchTask",
          "rateLimitGroup": "Medium",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTaskList"
          },
          "bodyParameters": "glipUpdateTask"
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "notes"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/notes/{noteId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the specified note(s). It is possible to fetch up to 50 notes per request.",
          "summary": "Get Note",
          "operationId": "readUserNote",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetGlipNoteInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/notes/{noteId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes the specified note.",
          "summary": "Delete Note",
          "operationId": "deleteNote",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/notes/{noteId}",
          "method": "patch",
          "method2": "patch",
          "description": "Edits a note. Notes can be edited by any user if posted to a chat. the user belongs to.",
          "summary": "Update Note",
          "operationId": "patchNote",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipNoteInfo"
          },
          "bodyParameters": "glipNoteCreate"
        }
      ],
      "parameter": "noteId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "teams"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of teams where the user is a member (both archived and active) combined with a list of public teams that can be joined by the current user. All records in response are sorted by creation time of a chat in ascending order. A team is a chat between 2 and more (unlimited number) participants assigned with specific name.",
          "summary": "Get Teams",
          "operationId": "listGlipTeams",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTeamsList"
          },
          "queryParameters": "listGlipTeamsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams",
          "method": "post",
          "method2": "post",
          "description": "Creates a team, and adds a list of people to the team.  A team is a chat between 2 and more (unlimited number) participants assigned with specific name.",
          "summary": "Create Team",
          "operationId": "createGlipTeam",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTeamInfo"
          },
          "bodyParameters": "glipPostTeamBody"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}",
          "method": "get",
          "method2": "get",
          "description": "Returns information about the specified team. A team is a chat between 2 and more participants assigned with specific name.",
          "summary": "Get Team",
          "operationId": "readGlipTeam",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTeamInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes the specified team. A team is a chat between 2 and more (unlimited number) participants assigned with specific name.",
          "summary": "Delete Team",
          "operationId": "deleteGlipTeam",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}",
          "method": "patch",
          "method2": "patch",
          "description": "Updates the name and description of the specified team. A team is a chat between 2 and more (unlimited number) participants assigned with specific name.",
          "summary": "Update Team",
          "operationId": "patchGlipTeam",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTeamInfo"
          },
          "bodyParameters": "glipPatchTeamBody"
        }
      ],
      "parameter": "chatId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of chats where the user is a member and also public teams that can be joined. All records in response are sorted by creation time of a chat in ascending order. **Note** 'Chat' is a general name for all types of threads icluding *Personal* (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific name), *Team* (chat of 2 and more participants, with a specific name), *Everyone* (company chat including all employees, with a specific name).",
          "summary": "Get Chats",
          "operationId": "listGlipChats",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipChatsList"
          },
          "queryParameters": "listGlipChatsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}",
          "method": "get",
          "method2": "get",
          "description": "Returns information about a chat by ID. **Note** 'Chat' is a general name for all types of threads icluding *Personal* (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific name), *Team* (chat of 2 and more participants, with a specific name), *Everyone* (company chat including all employees, with a specific name).\"",
          "summary": "Get Chat",
          "operationId": "readGlipChat",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipChatInfo"
          }
        }
      ],
      "parameter": "chatId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "events"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/events",
          "method": "get",
          "method2": "list",
          "description": "Returns all calendar events created by the current user.",
          "summary": "Get User Events List",
          "operationId": "readGlipEvents",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEventsInfo"
          },
          "queryParameters": "readGlipEventsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/events",
          "method": "post",
          "method2": "post",
          "description": "Creates a new calendar event.",
          "summary": "Create Event",
          "operationId": "createEvent",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEventInfo"
          },
          "bodyParameters": "glipEventCreate"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/events/{eventId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the specified calendar event(s) by ID(s).",
          "summary": "Get Event",
          "operationId": "readEvent",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEventInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/events/{eventId}",
          "method": "put",
          "method2": "put",
          "description": "Updates the specified calendar event.",
          "summary": "Update Event",
          "operationId": "updateEvent",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEventInfo"
          },
          "bodyParameters": "glipEventCreate"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/events/{eventId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes the specified calendar event.",
          "summary": "Delete Event",
          "operationId": "deleteEvent",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true
        }
      ],
      "parameter": "eventId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "persons"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/persons/{personId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a user or multiple users by their ID(s). Batch request is supported.",
          "summary": "Get Person",
          "operationId": "readGlipPerson",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipPersonInfo"
          }
        }
      ],
      "parameter": "personId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "teams",
        "add"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}/add",
          "method": "post",
          "method2": "post",
          "description": "Adds members to the specified team. A team is a chat between 2 and more participants assigned with specific name.",
          "summary": "Add Team Members",
          "operationId": "addGlipTeamMembers",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "bodyParameters": "glipPostMembersListBody"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "notes",
        "lock"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/notes/{noteId}/lock",
          "method": "post",
          "method2": "post",
          "description": "Locks a note providing the user with the unique write access for 5 hours.",
          "summary": "Lock Note",
          "operationId": "lockNote",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats",
        "read"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/read",
          "method": "post",
          "method2": "post",
          "description": "Sets the specified chat status to 'Read' for the current user.",
          "summary": "Mark Chat as Read",
          "operationId": "markChatRead",
          "rateLimitGroup": "Medium",
          "appPermission": "GlipInternal",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "teams",
        "join"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}/join",
          "method": "post",
          "method2": "post",
          "description": "Adds the current user to the specified team. A team is a chat between 2 and more participants assigned with specific name.",
          "summary": "Join Team",
          "operationId": "joinGlipTeam",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "fax-cover-page"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/fax-cover-page",
          "method": "get",
          "method2": "get",
          "description": "Returns fax cover pages available for the current extension.",
          "summary": "Get Fax Cover Page List",
          "operationId": "listFaxCoverPages",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ListFaxCoverPagesResponse"
          },
          "queryParameters": "listFaxCoverPagesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "client-info",
        "sip-provision"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/client-info/sip-provision",
          "method": "post",
          "method2": "post",
          "description": "Creates SIP registration of a device/application (WebPhone, Mobile, softphone).",
          "summary": "Register Device",
          "operationId": "createSIPRegistration",
          "rateLimitGroup": "Heavy",
          "appPermission": "VoipCalling",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CreateSipRegistrationResponse"
          },
          "bodyParameters": "createSipRegistrationRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "webhooks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/webhooks",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of all webhooks associated with the current account.",
          "summary": "Get Webhooks",
          "operationId": "listGlipWebhooks",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipWebhookList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/webhooks/{webhookId}",
          "method": "get",
          "method2": "get",
          "description": "Returns webhooks(s) with the specified id(s).",
          "summary": "Get Webhook",
          "operationId": "readGlipWebhook",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipWebhookList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/webhooks/{webhookId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes a webhook by ID.",
          "summary": "Delete Webhook",
          "operationId": "deleteGlipWebhook",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true
        }
      ],
      "parameter": "webhookId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/tasks",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of tasks of the specified chat.",
          "summary": "Get Chat Tasks",
          "operationId": "listChatTasks",
          "rateLimitGroup": "Heavy",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTaskList"
          },
          "queryParameters": "listChatTasksParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/tasks",
          "method": "post",
          "method2": "post",
          "description": "Creates a task in the specified chat.",
          "summary": "Create Task",
          "operationId": "createTask",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipTaskInfo"
          },
          "bodyParameters": "glipCreateTask"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats",
        "notes"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/notes",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of notes created in the specified chat.",
          "summary": "Get Chat Notes",
          "operationId": "listChatNotes",
          "rateLimitGroup": "Heavy",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipNotesInfo"
          },
          "queryParameters": "listChatNotesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/notes",
          "method": "post",
          "method2": "post",
          "description": "Creates a new note in the specified chat.",
          "summary": "Create Note",
          "operationId": "createChatNote",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipNoteInfo"
          },
          "bodyParameters": "glipNoteCreate"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "teams",
        "leave"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}/leave",
          "method": "post",
          "method2": "post",
          "description": "Removes the current user from the specified team. A team is a chat between 2 and more participants assigned with specific name.",
          "summary": "Leave Team",
          "operationId": "leaveGlipTeam",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "data-export"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/data-export",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of Glip data export tasks.",
          "summary": "Get Data Export Task List",
          "operationId": "listDataExportTasks",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/DataExportTaskList"
          },
          "queryParameters": "listDataExportTasksParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/data-export",
          "method": "post",
          "method2": "post",
          "description": "Creates a task for Glip data export and returns a link at which the exported data will be available in future once the task is implemented. The exported data can be downloaded by calling Get Data Export Task method with the specified task ID. Simultaneously no more than 2 tasks per company can be created.",
          "summary": "Create Data Export Task",
          "operationId": "createDataExportTask",
          "rateLimitGroup": "Heavy",
          "appPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/DataExportTask"
          },
          "bodyParameters": "createDataExportTaskRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/data-export/{taskId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the links for downloading Glip data exported within the specified task. If the export task is still in progress, then only the task status will be returned. If the data is ready for downloading, then the list of URLs will be returned.",
          "summary": "Get Data Export Task",
          "operationId": "readDataExportTask",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/DataExportTask"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "state"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/state",
          "method": "get",
          "method2": "list",
          "description": "Returns all the states of a certain country",
          "summary": "Get States List",
          "operationId": "listStates",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetStateListResponse"
          },
          "queryParameters": "listStatesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/state/{stateId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the information on a specific state.",
          "summary": "Get State",
          "operationId": "readState",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetStateInfoResponse"
          }
        }
      ],
      "parameter": "stateId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "companies"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/companies/{companyId}",
          "method": "get",
          "method2": "get",
          "description": "Returns information about one or more companies by their IDs.",
          "summary": "Get Company Info",
          "operationId": "readGlipCompany",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipCompany"
          }
        }
      ],
      "parameter": "companyId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "notes",
        "unlock"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/notes/{noteId}/unlock",
          "method": "post",
          "method2": "post",
          "description": "Unlocks a note letting other users edit this note. Once the note is locked (by another user) it cannot be unlocked during 5 hours since the lock datetime.",
          "summary": "Unlock Note",
          "operationId": "unlockNote",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats",
        "unread"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/unread",
          "method": "post",
          "method2": "post",
          "description": "Sets the specified chat status to 'Unread' for the current user. **Note** 'Chat' is a general name for all types of threads icluding *Personal* (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific name), *Team* (chat of 2 and more participants, with a specific name), *Everyone* (company chat including all employees, with a specific name).\"",
          "summary": "Mark Chat as Unread",
          "operationId": "markChatUnread",
          "rateLimitGroup": "Medium",
          "appPermission": "GlipInternal",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "teams",
        "remove"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}/remove",
          "method": "post",
          "method2": "post",
          "description": "Removes members from the specified team. A team is a chat between 2 and more participants assigned with specific name.",
          "summary": "Remove Team Members",
          "operationId": "removeGlipTeamMembers",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "bodyParameters": "glipPostMembersIdsListBody"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "notes",
        "publish"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/notes/{noteId}/publish",
          "method": "post",
          "method2": "post",
          "description": "Publishes a note making it visible to other users.",
          "summary": "Publish Note",
          "operationId": "publishNote",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "teams",
        "archive"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}/archive",
          "method": "post",
          "method2": "post",
          "description": "Changes the status of the specified team to 'Archived'. A team is a chat between 2 and more participants assigned with specific name.",
          "summary": "Archive Team",
          "operationId": "archiveGlipTeam",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "conversations"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/conversations",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of conversations where the user is a member. All records in response are sorted by creation time of a conversation in ascending order. Conversation is a chat of the *Group* type.",
          "summary": "Get Conversations",
          "operationId": "listGlipConversations",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipConversationsList"
          },
          "queryParameters": "listGlipConversationsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/conversations",
          "method": "post",
          "method2": "post",
          "description": "Creates a new conversation or opens the existing one. If the conversation already exists, then its ID will be returned in response. A conversation is an adhoc discussion between a particular set of users, not featuring any specific name or description; it is a chat of 'Group' type. If you add a person to the existing conversation (group), it creates a whole new conversation.",
          "summary": "Create/Open Conversation",
          "operationId": "createGlipConversation",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipConversationInfo"
          },
          "bodyParameters": "createGlipConversationRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/conversations/{chatId}",
          "method": "get",
          "method2": "get",
          "description": "Returns information about the specified conversation, including the list of conversation participants. A conversation is an adhoc discussion between a particular set of users, not featuring any specific name or description; it is a chat of 'Group' type. If you add a person to the existing conversation, it creates a whole new conversation.",
          "summary": "Get Conversation",
          "operationId": "readGlipConversation",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipConversationInfo"
          }
        }
      ],
      "parameter": "chatId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "greeting"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/greeting",
          "method": "post",
          "method2": "post",
          "description": "Creates a custom company greeting.",
          "summary": "Create Company Greeting",
          "operationId": "createCompanyGreeting",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CustomCompanyGreetingInfo"
          },
          "bodyParameters": "createCompanyGreetingRequest",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "tasks",
        "complete"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/tasks/{taskId}/complete",
          "method": "post",
          "method2": "post",
          "description": "Completes a task in the specified chat.",
          "summary": "Complete Task",
          "operationId": "completeTask",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "bodyParameters": "glipCompleteTask"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "groups",
        "events"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/groups/{groupId}/events",
          "method": "get",
          "method2": "get",
          "description": "Returns a list of calendar events available for the current user within the specified group. Users can only see their personal tasks and public tasks.",
          "summary": "Get Group Events",
          "operationId": "listGroupEvents",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEventInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/groups/{groupId}/events",
          "method": "post",
          "method2": "post",
          "description": "Creates a new calendar event within the specified group.",
          "summary": "Create Event by Group ID",
          "operationId": "createEventbyGroupId",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipEventInfo"
          },
          "bodyParameters": "glipEventCreate"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats",
        "favorite"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/favorite",
          "method": "post",
          "method2": "post",
          "description": "Adds the specified chat to the users's list of favorites. **Note** 'Chat' is a general name for all types of threads icluding *Personal* (user's own me-chat), *Direct* (one on one chat), *Group* (chat of 3-15 participants without specific name), *Team* (chat of 2 and more participants, with a specific name), *Everyone* (company chat including all employees, with a specific name).\"",
          "summary": "Add Chat to Favorites",
          "operationId": "favoriteGlipChat",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/presence",
          "method": "get",
          "method2": "get",
          "description": "Returns presence status of all extensions of an account. Please note: The presenceStatus is returned as Offline (the parameters telephonyStatus, message, userStatus and dndStatus are not returned at all) for the following extension types: Department, Announcement Only, Voicemail (Take Messages Only), Fax User, Paging Only Group, Shared Lines Group, IVR Menu, Application Extension.",
          "summary": "Get User Presence Status List",
          "operationId": "readAccountPresence",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadPresence",
          "userPermission": "ReadPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AccountPresenceInfo"
          },
          "queryParameters": "readAccountPresenceParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "teams",
        "unarchive"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/teams/{chatId}/unarchive",
          "method": "post",
          "method2": "post",
          "description": "Changes the status of the specified team to 'Active'. A team is a chat between 2 and more participants assigned with specific name.",
          "summary": "Unarchive Team",
          "operationId": "unarchiveGlipTeam",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "subscription"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/subscription",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of subscriptions created by the logged-in user for the currently authorized client application.",
          "summary": "Get Subscription List",
          "operationId": "listSubscriptions",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/RecordsCollectionResourceSubscriptionResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription",
          "method": "post",
          "method2": "post",
          "description": "Creates a new subscription.",
          "summary": "Create Subscription",
          "operationId": "createSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/SubscriptionInfo"
          },
          "bodyParameters": "createSubscriptionRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the requested subscription by ID.",
          "summary": "Get Subscription",
          "operationId": "readSubscription",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/SubscriptionInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}",
          "method": "put",
          "method2": "put",
          "description": "Updates the existent subscription. The client application can extend/narrow the events for which it receives notifications within the frame of one subscription. If event filters are specified, calling this method modifies them for the existing subscription. The method also allows to set the subscription expiration time. If other than `events` and `expiresIn` parameters are passed in request they will be ignored. If the request body is empty then the specified subscription will be just renewed without any event filter change and with expiration time default.",
          "summary": "Update Subscription",
          "operationId": "updateSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/SubscriptionInfo"
          },
          "bodyParameters": "modifySubscriptionRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}",
          "method": "delete",
          "method2": "delete",
          "description": "Cancels the existent subscription.",
          "summary": "Cancel Subscription",
          "operationId": "deleteSubscription",
          "rateLimitGroup": "Medium",
          "withParameter": true
        }
      ],
      "parameter": "subscriptionId"
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "country"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/country",
          "method": "get",
          "method2": "list",
          "description": "Returns all the countries available for calling.",
          "summary": "Get Country List",
          "operationId": "listCountries",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetCountryListResponse"
          },
          "queryParameters": "listCountriesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/country/{countryId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the information on a specific country.",
          "summary": "Get Country",
          "operationId": "readCountry",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetCountryInfoDictionaryResponse"
          }
        }
      ],
      "parameter": "countryId"
    },
    {
      "paths": [
        "restapi",
        "glip",
        "groups",
        "webhooks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/groups/{groupId}/webhooks",
          "method": "get",
          "method2": "get",
          "description": "Returns webhooks which are available for the current user by group ID.",
          "summary": "Get Webhooks in Group",
          "operationId": "listGlipGroupWebhooks",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipWebhookList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/groups/{groupId}/webhooks",
          "method": "post",
          "method2": "post",
          "description": "Creates a new webhook.",
          "summary": "Create Webhook in Group",
          "operationId": "createGlipGroupWebhook",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipWebhookInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats",
        "unfavorite"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/unfavorite",
          "method": "post",
          "method2": "post",
          "description": "Removes the specified chat from the users's list of favorites.",
          "summary": "Remove Chat from Favorites",
          "operationId": "unfavoriteGlipChat",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "timezone"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/timezone",
          "method": "get",
          "method2": "list",
          "description": "Returns all available timezones.",
          "summary": "Get Timezone List",
          "operationId": "listTimezones",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetTimezoneListResponse"
          },
          "queryParameters": "listTimezonesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/timezone/{timezoneId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the information on a certain timezone.",
          "summary": "Get Timezone",
          "operationId": "readTimezone",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetTimezoneInfoResponse"
          },
          "queryParameters": "readTimezoneParameters"
        }
      ],
      "parameter": "timezoneId"
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "language"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/language",
          "method": "get",
          "method2": "list",
          "description": "Returns the information about supported languages.",
          "summary": "Get Language List",
          "operationId": "listLanguages",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/LanguageList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/language/{languageId}",
          "method": "get",
          "method2": "get",
          "description": "Returns language by ID.",
          "summary": "Get Language",
          "operationId": "readLanguage",
          "rateLimitGroup": "Light",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/LanguageInfo"
          }
        }
      ],
      "parameter": "languageId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "service-info"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/service-info",
          "method": "get",
          "method2": "get",
          "description": "Returns the information about service plan, available features and limitations for a particular RingCentral customer account.",
          "summary": "Get Account Service Info",
          "operationId": "readAccountServiceInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadServicePlanInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetServiceInfoResponse"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "active-calls"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/active-calls",
          "method": "get",
          "method2": "get",
          "description": "Returns records of all calls that are in progress, ordered by start time in descending order.",
          "summary": "Get Company Active Calls",
          "operationId": "listCompanyActiveCalls",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyActiveCallsResponse"
          },
          "queryParameters": "listCompanyActiveCallsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "dictionary",
        "greeting"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/greeting",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of predefined standard greetings. Custom greetings recorded by user are not returned in response to this request. See Get Extension Custom Greetings.",
          "summary": "Get Standard Greeting List",
          "operationId": "listStandardGreetings",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/DictionaryGreetingList"
          },
          "queryParameters": "listStandardGreetingsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/dictionary/greeting/{greetingId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a standard greeting by ID.",
          "summary": "Get Standard Greeting",
          "operationId": "readStandardGreeting",
          "rateLimitGroup": "Medium",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/DictionaryGreetingInfo"
          }
        }
      ],
      "parameter": "greetingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-log-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-log-sync",
          "method": "get",
          "method2": "get",
          "description": "Synchronizes company call log records.",
          "summary": "Sync Company Call Log",
          "operationId": "syncAccountCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AccountCallLogSyncResponse"
          },
          "queryParameters": "syncAccountCallLogParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "webhooks",
        "suspend"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/webhooks/{webhookId}/suspend",
          "method": "post",
          "method2": "post",
          "description": "Suspends a webhook by ID.",
          "summary": "Suspend Webhook",
          "operationId": "suspendGlipWebhook",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording",
          "method": "get",
          "method2": "get",
          "description": "Returns call recording settings.",
          "summary": "Get Call Recording Settings",
          "operationId": "readCallRecordingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallRecordingSettingsResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording",
          "method": "put",
          "method2": "put",
          "description": "Updates current call recording settings.",
          "summary": "Update Call Recording Settings",
          "operationId": "updateCallRecordingSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallRecordingSettingsResource"
          },
          "bodyParameters": "callRecordingSettingsResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "business-hours"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-hours",
          "method": "get",
          "method2": "get",
          "description": "Returns the company business hours schedule. Business hours (and After hours - all the remaining time) schedules are commonly used for setting call handling rules - `business-hours-rule` and `after-hours-rule` correspondingly.",
          "summary": "Get Company Business Hours",
          "operationId": "readCompanyBusinessHours",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyBusinessHours"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-hours",
          "method": "put",
          "method2": "put",
          "description": "Updates the company business hours schedule.",
          "summary": "Update Company Business Hours",
          "operationId": "updateCompanyBusinessHours",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyBusinessHours"
          },
          "bodyParameters": "companyBusinessHoursUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "webhooks",
        "activate"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/webhooks/{webhookId}/activate",
          "method": "post",
          "method2": "post",
          "description": "Activates a webhook by ID.",
          "summary": "Activate Webhook",
          "operationId": "activateGlipWebhook",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "chats",
        "posts"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/posts",
          "method": "get",
          "method2": "list",
          "description": "Returns a list of posts from the specified chat.",
          "summary": "Get Posts",
          "operationId": "readGlipPosts",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipPostsList"
          },
          "queryParameters": "readGlipPostsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/posts",
          "method": "post",
          "method2": "post",
          "description": "Creates a post in the chat specified in path. Any mention can be added within the `text` attribute of the request body in .md format - `![:Type](id)`, where `type` is one of (Person, Team, File, Note, Task, Event, Link, Card) and `id` is a unique identifier of the mentioned object of the specified type. Attachments of the following types (File, Card, Event, Note) can also be added to a post by passing type and ID of attachment(s) in request body.",
          "summary": "Create Post",
          "operationId": "createGlipPost",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipPostInfo"
          },
          "bodyParameters": "glipPostPostBody"
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/posts/{postId}",
          "method": "get",
          "method2": "get",
          "description": "Returns information about the specified post.",
          "summary": "Get Post",
          "operationId": "readGlipPost",
          "rateLimitGroup": "Light",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipPostInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/posts/{postId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes the specified post from the chat.",
          "summary": "Delete Post",
          "operationId": "deleteGlipPost",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/glip/chats/{chatId}/posts/{postId}",
          "method": "patch",
          "method2": "patch",
          "description": "Updates a specific post within a chat.",
          "summary": "Update Post",
          "operationId": "patchGlipPost",
          "rateLimitGroup": "Medium",
          "appPermission": "Glip",
          "userPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GlipPostInfo"
          },
          "bodyParameters": "glipPatchPostBody"
        }
      ],
      "parameter": "postId"
    },
    {
      "paths": [
        "restapi",
        "subscription",
        "renew"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/subscription/{subscriptionId}/renew",
          "method": "post",
          "method2": "post",
          "description": "Renews an existent subscription by posting request with an empty body.",
          "summary": "Renew Subscription",
          "operationId": "renewSubscription",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/SubscriptionInfo"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "business-address"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-address",
          "method": "get",
          "method2": "get",
          "description": "Returns business address of a company.",
          "summary": "Get Account Business Address",
          "operationId": "readAccountBusinessAddress",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AccountBusinessAddressResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/business-address",
          "method": "put",
          "method2": "put",
          "description": "Updates the business address of a company that account is linked to. Batch request is supported.",
          "summary": "Update Company Business Address",
          "operationId": "updateAccountBusinessAddress",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AccountBusinessAddressResource"
          },
          "bodyParameters": "modifyAccountBusinessAddressRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "opt-outs"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/opt-outs",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of numbers opted out from the account. The list can be filtered by `to`/`from` phone number query parameters. Specifying `text/csv` in the Accept header downloads the data in CSV format.",
          "summary": "Get Opted Out Numbers",
          "operationId": "readA2PSMSOptOuts",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/OptOutListResponse"
          },
          "queryParameters": "readA2PSMSOptOutsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "device"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/device/{deviceId}",
          "method": "get",
          "method2": "get",
          "description": "Returns account device(s) by their ID(s).",
          "summary": "Get Device",
          "operationId": "readDevice",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyDevices",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetDeviceInfoResponse"
          },
          "queryParameters": "readDeviceParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/device/{deviceId}",
          "method": "put",
          "method2": "put",
          "description": "Updates account device(s) by their ID(s).",
          "summary": "Update Device",
          "operationId": "updateDevice",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyDevices",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetDeviceInfoResponse"
          },
          "queryParameters": "updateDeviceParameters",
          "bodyParameters": "accountDeviceUpdate"
        }
      ],
      "parameter": "deviceId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "call-out"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/call-out",
          "method": "post",
          "method2": "post",
          "description": "Creates a new outbound call out session. Currently this method is supported for Softphone/Hardphone only, since device IDs for WebRTC/Mobile apps cannot be obtained.",
          "summary": "Make CallOut",
          "operationId": "createCallOutCallSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallSession"
          },
          "bodyParameters": "makeCallOutRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "meeting-recordings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/meeting-recordings",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of meeting recordings for the current account.",
          "summary": "Get Account Meeting Recordings List",
          "operationId": "listAccountMeetingRecordings",
          "rateLimitGroup": "Medium",
          "appPermission": "Meetings",
          "userPermission": "MeetingsRecordings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ListMeetingRecordingsResponse"
          },
          "queryParameters": "listAccountMeetingRecordingsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "conference"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/conference",
          "method": "post",
          "method2": "post",
          "description": "Initiates a conference call session.",
          "summary": "Start Conference Call Session",
          "operationId": "createConferenceCallSession",
          "rateLimitGroup": "Heavy",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallSessionObject"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory",
        "federation"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/federation",
          "method": "get",
          "method2": "get",
          "description": "Returns information on a federation and associated accounts.",
          "summary": "Get Account Federation",
          "operationId": "readAccountFederation",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/FederationResource"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension-bulk-update"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension-bulk-update",
          "method": "post",
          "method2": "post",
          "description": "Updates multiple extensions at once. Maximum 500 extensions can be updated per request.",
          "summary": "Update Multiple Extensions",
          "operationId": "extensionBulkUpdate",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditExtensionInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ExtensionBulkUpdateTaskResource"
          },
          "bodyParameters": "extensionBulkUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues",
          "method": "get",
          "method2": "list",
          "description": "Returns call queue group list.",
          "summary": "Get Call Queue List",
          "operationId": "listCallQueues",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallQueues"
          },
          "queryParameters": "listCallQueuesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}",
          "method": "get",
          "method2": "get",
          "description": "Returns basic information on a call queue group extension.",
          "summary": "Get Call Queue",
          "operationId": "readCallQueueInfo",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CallQueueDetails"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}",
          "method": "put",
          "method2": "put",
          "description": "Updates information on a call queue group extension.",
          "summary": "Update Call Queue",
          "operationId": "updateCallQueueInfo",
          "rateLimitGroup": "Light",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CallQueueDetails"
          },
          "bodyParameters": "callQueueUpdateDetails"
        }
      ],
      "parameter": "groupId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "ivr-menus"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-menus",
          "method": "post",
          "method2": "post",
          "description": "Creates a company IVR menu.",
          "summary": "Create IVR Menu",
          "operationId": "createIVRMenu",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "AutoReceptionist",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/IVRMenuInfo"
          },
          "bodyParameters": "iVRMenuInfo"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-menus/{ivrMenuId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a company IVR menu by ID.",
          "summary": "Get IVR Menu",
          "operationId": "readIVRMenu",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "AutoReceptionist",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/IVRMenuInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-menus/{ivrMenuId}",
          "method": "put",
          "method2": "put",
          "description": "Updates a company IVR menu by ID.",
          "summary": "Update IVR Menu",
          "operationId": "updateIVRMenu",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "AutoReceptionist",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/IVRMenuInfo"
          },
          "bodyParameters": "iVRMenuInfo"
        }
      ],
      "parameter": "ivrMenuId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "templates"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/templates",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of user templates for the current account.",
          "summary": "Get User Template List",
          "operationId": "listUserTemplates",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserTemplates"
          },
          "queryParameters": "listUserTemplatesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/templates/{templateId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the user template by ID.",
          "summary": "Get User Template",
          "operationId": "readUserTemplate",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/TemplateInfo"
          }
        }
      ],
      "parameter": "templateId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "ivr-prompts"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of IVR prompts.",
          "summary": "Get IVR Prompt List",
          "operationId": "listIVRPrompts",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyGreetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/IVRPrompts"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts",
          "method": "post",
          "method2": "post",
          "description": "Creates an IVR prompt.",
          "summary": "Create IVR Prompts",
          "operationId": "createIVRPrompt",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyGreetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/PromptInfo"
          },
          "bodyParameters": "createIVRPromptRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}",
          "method": "get",
          "method2": "get",
          "description": "Returns an IVR prompt by ID.",
          "summary": "Get IVR Prompt",
          "operationId": "readIVRPrompt",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyGreetings",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/PromptInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}",
          "method": "put",
          "method2": "put",
          "description": "Updates an IVR prompt by ID",
          "summary": "Update IVR Prompt",
          "operationId": "updateIVRPrompt",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyGreetings",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/PromptInfo"
          },
          "bodyParameters": "updateIVRPromptRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes an IVR prompt by ID.",
          "summary": "Delete IVR Prompt",
          "operationId": "deleteIVRPrompt",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyGreetings",
          "withParameter": true
        }
      ],
      "parameter": "promptId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of extensions created for a particular account. All types of extensions are included in this list.",
          "summary": "Get Extension List",
          "operationId": "listExtensions",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetExtensionListResponse"
          },
          "queryParameters": "listExtensionsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension",
          "method": "post",
          "method2": "post",
          "description": "Creates an extension.",
          "summary": "Create Extension",
          "operationId": "createExtension",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "AddRemoveUsers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ExtensionCreationResponse"
          },
          "bodyParameters": "extensionCreationRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}",
          "method": "get",
          "method2": "get",
          "description": "Returns basic information about a particular extension.",
          "summary": "Get Extension",
          "operationId": "readExtension",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetExtensionInfoResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}",
          "method": "put",
          "method2": "put",
          "description": "Updates user settings.",
          "summary": "Update Extension",
          "operationId": "updateExtension",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo OR EditUserCredentials",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetExtensionInfoResponse"
          },
          "bodyParameters": "extensionUpdateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes extension(s) by ID(s). When an extension is being deleted the default API behaviour is as follows: ⋅⋅* user's direct numbers are preserved by becoming additional company numbers; ⋅⋅* user's digital lines (both device & associated phone number) are deleted. You can change this behaviour using the filters: ..* create unassigned extensions for each digital line of the deleted extension by setting the query parameter `savePhoneLines` to `true` in request path; ..* remove direct numbers of the deleted extension by setting the query parameter `savePhoneNumbers` to `false` in request path",
          "summary": "Delete Extension",
          "operationId": "deleteExtension",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "AddRemoveUsers",
          "withParameter": true,
          "queryParameters": "deleteExtensionParameters"
        }
      ],
      "parameter": "extensionId",
      "defaultParameter": "~"
    },
    {
      "paths": [
        "restapi",
        "account",
        "meeting",
        "locked-settings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/meeting/locked-settings",
          "method": "get",
          "method2": "get",
          "description": "Returns information on user meeting settings that are locked on account level and therefore cannot be changed by user.",
          "summary": "Get Locked Meeting Settings",
          "operationId": "GetAccountLockedSetting",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AccountLockedSettingResponse"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "custom-fields"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of created custom fields.",
          "summary": "Get Custom Field List",
          "operationId": "listCustomFields",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CustomFieldsResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields",
          "method": "post",
          "method2": "post",
          "description": "Creates custom field attached to the object.",
          "summary": "Create Custom Field",
          "operationId": "createCustomField",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CustomFieldResource"
          },
          "bodyParameters": "customFieldCreateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields/{fieldId}",
          "method": "put",
          "method2": "put",
          "description": "Updates custom field by ID specified in path.",
          "summary": "Update Сustom Field",
          "operationId": "updateCustomField",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "Users",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CustomFieldResource"
          },
          "bodyParameters": "customFieldUpdateRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/custom-fields/{fieldId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes custom field(s) by ID(s) with the corresponding values.",
          "summary": "Delete Custom Field",
          "operationId": "deleteCustomField",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "Users",
          "withParameter": true
        }
      ],
      "parameter": "fieldId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "recording"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/recording/{recordingId}",
          "method": "get",
          "method2": "get",
          "description": "Returns call recordings by ID(s).",
          "summary": "Get Call Recording",
          "operationId": "readCallRecording",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallRecording",
          "userPermission": "ReadCallRecording",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetCallRecordingResponse"
          }
        }
      ],
      "parameter": "recordingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-log"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-log",
          "method": "get",
          "method2": "list",
          "description": "Returns call log records filtered by parameters specified.",
          "summary": "Get Company Call Log Records",
          "operationId": "readCompanyCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "FullCompanyCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AccountCallLogResponse"
          },
          "queryParameters": "readCompanyCallLogParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-log/{callRecordId}",
          "method": "get",
          "method2": "get",
          "description": "Returns individual call log record(s) by ID(s). Batch request is supported.",
          "summary": "Get Company Call Log Record(s)",
          "operationId": "readCompanyCallRecord",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "FullCompanyCallLog",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyCallLogRecord"
          },
          "queryParameters": "readCompanyCallRecordParameters"
        }
      ],
      "parameter": "callRecordId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "batch"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/batch",
          "method": "post",
          "method2": "post",
          "description": "Allows to send high volume of A2P (Application-to-Person) SMS messages (in message batches). Only phone number with the `A2PSmsSender` feature can be used as a sender.",
          "summary": "Send A2P SMS",
          "operationId": "createA2PSMS",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CreateMessageBatchResponse"
          },
          "bodyParameters": "createSMSMessageBatchRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/batch/{batchId}",
          "method": "get",
          "method2": "get",
          "description": "Returns information on a message batch.",
          "summary": "Get A2P SMS Batch",
          "operationId": "readA2PBatch",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageBatchResponse"
          }
        }
      ],
      "parameter": "batchId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "answering-rule"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule",
          "method": "get",
          "method2": "list",
          "description": "Returns a list of company call handling rules.",
          "summary": "Get Company Call Handling Rule List",
          "operationId": "listCompanyAnsweringRules",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyAnsweringRuleList"
          },
          "queryParameters": "listCompanyAnsweringRulesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule",
          "method": "post",
          "method2": "post",
          "description": "Creates call handling rule on account level.",
          "summary": "Create Company Call Handling Rule",
          "operationId": "createCompanyAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyAnsweringRuleInfo"
          },
          "bodyParameters": "companyAnsweringRuleRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule/{ruleId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a company call handling rule by ID.",
          "summary": "Get Company Call Handling Rule",
          "operationId": "readCompanyAnsweringRule",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyAnsweringRuleInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule/{ruleId}",
          "method": "put",
          "method2": "put",
          "description": "Updates a company call handling rule.",
          "summary": "Update Company Call Handling Rule",
          "operationId": "updateCompanyAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyAnsweringRuleInfo"
          },
          "bodyParameters": "companyAnsweringRuleUpdate"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/answering-rule/{ruleId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes a company custom call handling rule by a particular ID.",
          "summary": "Delete Company Call Handling Rule",
          "operationId": "deleteCompanyAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyAnsweringRules",
          "withParameter": true
        }
      ],
      "parameter": "ruleId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "address-book-bulk-upload"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/address-book-bulk-upload",
          "method": "post",
          "method2": "post",
          "description": "Uploads multiple contacts for multiple extensions at once. Maximum 500 extension, each up to 10000 contacts, can be updated per request.",
          "summary": "Update Multiple Contacts",
          "operationId": "addressBookBulkUpload",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AddressBookBulkUploadResponse"
          },
          "bodyParameters": "addressBookBulkUploadRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory",
        "entries",
        "search"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/entries/search",
          "method": "post",
          "method2": "post",
          "description": "Returns contact information on corporate users of federated accounts according to the specified filtering and ordering.",
          "summary": "Search Company Directory Entries",
          "operationId": "searchDirectoryEntries",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/DirectoryResource"
          },
          "bodyParameters": "searchDirectoryEntriesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording",
        "extensions"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/extensions",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of extensions to be recorded.",
          "summary": "Get Call Recording Extension List",
          "operationId": "listCallRecordingExtensions",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallRecordingExtensions"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/bulk-assign",
          "method": "post",
          "method2": "post",
          "description": "Creates or updates the list of extensions to be recorded.",
          "summary": "Update Call Recording Extension List",
          "operationId": "updateCallRecordingExtensionList",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "bodyParameters": "bulkAccountCallRecordingsResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "glip",
        "data-export",
        "datasets"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/glip/data-export/{taskId}/datasets/{datasetId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the specified dataset by ID. Each dataset is a ZIP archive the size of which is limited to 1 Gb.",
          "summary": "Get Data Export Task Dataset",
          "operationId": "readDataExportTaskDataset",
          "rateLimitGroup": "Heavy",
          "appPermission": "Glip",
          "withParameter": true,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          }
        }
      ],
      "parameter": "datasetId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "message-store-configuration"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-configuration",
          "method": "get",
          "method2": "get",
          "description": "Returns message store settings.",
          "summary": "Get Message Store Configuration",
          "operationId": "readMessageStoreConfiguration",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "AccountAdministration",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageStoreConfiguration"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-configuration",
          "method": "put",
          "method2": "put",
          "description": "Updates message store settings.",
          "summary": "Update Message Store Configuration",
          "operationId": "updateMessageStoreConfiguration",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "AccountAdministration",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageStoreConfiguration"
          },
          "bodyParameters": "messageStoreConfiguration"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "fax"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/fax",
          "method": "post",
          "method2": "post",
          "description": "Creates and sends/resends a fax message. Resend can be implemented if sending has failed. Fax attachment size (both single and total) is limited to 50Mb.",
          "summary": "Create Fax Message",
          "operationId": "createFaxMessage",
          "rateLimitGroup": "Heavy",
          "appPermission": "Faxes",
          "userPermission": "OutboundFaxes",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/FaxResponse"
          },
          "bodyParameters": "createFaxMessageRequest",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "mms"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/mms",
          "method": "post",
          "method2": "post",
          "description": "Creates and sends media messages. Sending MMS messages simultaneously to different recipients is limited up to 50 requests per minute; relevant for all client applications.",
          "summary": "Send MMS",
          "operationId": "createMMS",
          "rateLimitGroup": "Medium",
          "appPermission": "SMS",
          "userPermission": "OutboundSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetSMSMessageInfoResponse"
          },
          "bodyParameters": "CreateMMSMessage",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "sms"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/sms",
          "method": "post",
          "method2": "post",
          "description": "Creates and sends a new text message. You can send SMS messages simultaneously to different recipients up to 40 requests per minute; this limitation is relevant for all client applications. Sending and receiving SMS is available for Toll-Free Numbers within the USA. You can send up to 10 attachments in one MMS message; the size of all attachments linked is limited to 1500000 bytes.",
          "summary": "Send SMS",
          "operationId": "createSMSMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "SMS",
          "userPermission": "OutboundSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetSMSMessageInfoResponse"
          },
          "bodyParameters": "CreateSMSMessage",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory",
        "entries"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/entries",
          "method": "get",
          "method2": "list",
          "description": "Returns contact information on corporate users of federated accounts. Please note: 1. `User`, `DigitalUser`, `VirtualUser` and `FaxUser` types are returned as `User` type. 2. `ApplicationExtension` type is not returned. 3. Only extensions in `Enabled`, `Disabled` and `NotActivated` state are returned.",
          "summary": "Get Company Directory Entries",
          "operationId": "listDirectoryEntries",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/DirectoryResource"
          },
          "queryParameters": "listDirectoryEntriesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/directory/entries/{entryId}",
          "method": "get",
          "method2": "get",
          "description": "Returns contact information on a particular corporate user of a federated account.",
          "summary": "Get Corporate Directory Entry",
          "operationId": "readDirectoryEntry",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/ContactResource"
          }
        }
      ],
      "parameter": "entryId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "phone-number"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/phone-number",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of phone numbers assigned to RingCentral customer account. Both company-level and extension-level numbers are returned.",
          "summary": "Get Company Phone Number List",
          "operationId": "listAccountPhoneNumbers",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AccountPhoneNumbers"
          },
          "queryParameters": "listAccountPhoneNumbersParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/phone-number/{phoneNumberId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the phone number(s) belonging to a certain account or extension by phoneNumberId(s). Batch request is supported.",
          "summary": "Get Phone Number",
          "operationId": "readAccountPhoneNumber",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyPhoneNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CompanyPhoneNumberInfo"
          }
        }
      ],
      "parameter": "phoneNumberId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms",
        "messages"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/messages",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of outbound/inbound A2P messages sent from/to A2P phone numbers of the current account. The list can be filtered by message batch ID and/or phone number.",
          "summary": "Get A2P SMS List",
          "operationId": "listA2PSMS",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageListResponse"
          },
          "queryParameters": "listA2PSMSParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/a2p-sms/messages/{messageId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the details of an A2P SMS message by ID.",
          "summary": "Get A2P SMS",
          "operationId": "readA2PSMS",
          "rateLimitGroup": "Light",
          "appPermission": "A2PSMS",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageDetailsResponse"
          }
        }
      ],
      "parameter": "messageId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues",
        "members"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/members",
          "method": "get",
          "method2": "get",
          "description": "Returns call queue group members.",
          "summary": "Get Call Queue Members",
          "operationId": "listCallQueueMembers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallQueueMembers"
          },
          "queryParameters": "listCallQueueMembersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "grant"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/grant",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of extensions with the information on grants given to the current extension regarding them. Currently the list of grants include: picking up a call, monitoring, calling or receiving a call on behalf of somebody, call delegation and calling paging groups.",
          "summary": "Get Extension Grant List",
          "operationId": "listExtensionGrants",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetExtensionGrantListResponse"
          },
          "queryParameters": "listExtensionGrantsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "message-store-report"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-report",
          "method": "post",
          "method2": "post",
          "description": "Creates a task to collect all account messages within the specified time interval. Maximum number of simaltaneous tasks per account is 2.",
          "summary": "Create Message Store Report",
          "operationId": "createMessageStoreReport",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadMessages",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageStoreReport"
          },
          "bodyParameters": "createMessageStoreReportRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-report/{taskId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the current status of a task on report creation.",
          "summary": "Get Message Store Report Task",
          "operationId": "readMessageStoreReportTask",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadMessages",
          "userPermission": "Users",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageStoreReport"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "device"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/device",
          "method": "get",
          "method2": "get",
          "description": "Returns devices of the extension(s) by their ID(s). Batch request is supported",
          "summary": "Get Extension Device List",
          "operationId": "listExtensionDevices",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserDevices",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetExtensionDevicesResponse"
          },
          "queryParameters": "listExtensionDevicesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "ivr-prompts",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/ivr-prompts/{promptId}/content",
          "method": "get",
          "method2": "get",
          "description": "Returns media content of an IVR prompt by ID.",
          "summary": "Get IVR Prompt Content",
          "operationId": "readIVRPromptContent",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyGreetings",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues",
        "presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/presence",
          "method": "get",
          "method2": "get",
          "description": "Returns presence status of the call queue members.",
          "summary": "Get Call Queue Presence",
          "operationId": "readCallQueuePresence",
          "rateLimitGroup": "Light",
          "appPermission": "ReadPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallQueuePresence"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/presence",
          "method": "put",
          "method2": "put",
          "description": "Updates presence status of the call queue members in the specified queue.",
          "summary": "Update Call Queue Presence",
          "operationId": "updateCallQueuePresence",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallQueuePresence"
          },
          "bodyParameters": "callQueueUpdatePresence"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "recording",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/recording/{recordingId}/content",
          "method": "get",
          "method2": "get",
          "description": "Returns media content of a call recording.",
          "summary": "Get Call Recordings Data",
          "operationId": "listCallRecordingData",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallRecording",
          "userPermission": "ReadCallRecording",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "features"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/features",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of supported features and information on their availability for the current extension. Specific feature(s) might be checked by providing `featureId` query param. Multiple values supported, format: `?featureId=Feature1&featureId=Feature2`. To get only available features in order to decrease response size, `availableOnly=true` query param might be specified.\nIn case the feature is available for the current user, `\"available\": true` is returned in the response for the record with corresponding feature `id`. Otherwise, additional attribute `reason` is returned with the appropriate code:\n* `ServicePlanLimitation` - the feature not included to the account service plan;\n* `AccountLimitation` - the feature is turned off for the account;\n* `ExtensionTypeLimitation` - the feature is not applicable for the extension type;\n* `ExtensionLimitation` - the feature is not available for the extension, e.g., additional license required;\n* `InsufficientPermissions` - required permission not granted to the current user (not the one, who is specified in the URL, but the one who's access token is used);\n* `ConfigurationLimitation` - the feature is turned off for the extension, e.g., by the account administrator.\n\nAlso, some feature may have some additional parameters, e.g., limits, which are returned in `params` attribute as a name-value collection:\n\n    {\n      \"id\": \"HUD\",\n      \"available\": true,\n      \"params\": [\n        {\n          \"name\": \"limitMax\",\n          \"value\": \"100\"\n        }\n      ]\n    }",
          "summary": "Get User Features",
          "operationId": "readUserFeatures",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/FeatureList"
          },
          "queryParameters": "readUserFeaturesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-monitoring-groups"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups",
          "method": "get",
          "method2": "get",
          "description": "Returns call monitoring groups that can be filtered by some extension.",
          "summary": "Get Call Monitoring Groups List",
          "operationId": "listCallMonitoringGroups",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallMonitoringGroups"
          },
          "queryParameters": "listCallMonitoringGroupsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups",
          "method": "post",
          "method2": "post",
          "description": "Creates a new call monitoring group.",
          "summary": "Create Call Monitoring Group",
          "operationId": "createCallMonitoringGroup",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallMonitoringGroup"
          },
          "bodyParameters": "createCallMonitoringGroupRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}",
          "method": "put",
          "method2": "put",
          "description": "Updates call monitoring group name by ID.",
          "summary": "Updates Call Monitoring Group",
          "operationId": "updateCallMonitoringGroup",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CallMonitoringGroup"
          },
          "bodyParameters": "createCallMonitoringGroupRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}",
          "method": "delete",
          "method2": "delete",
          "description": "Remove infromation about the given call monitoring group.",
          "summary": "Delete Call Monitoring Group",
          "operationId": "deleteCallMonitoringGroup",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": true
        }
      ],
      "parameter": "groupId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-locations"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations",
          "method": "get",
          "method2": "list",
          "description": "Returns emergency response locations of the current account.",
          "summary": "Get Emergency Location List",
          "operationId": "listEmergencyLocations",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/EmergencyLocationList"
          },
          "queryParameters": "listEmergencyLocationsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations",
          "method": "post",
          "method2": "post",
          "summary": "Add Emergency Location",
          "operationId": "createEmergencyLocation",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "bodyParameters": "emergencyLocationInfoRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations/{locationId}",
          "method": "get",
          "method2": "get",
          "description": "Returns emergency response location by ID.",
          "summary": "Get Emergency Location",
          "operationId": "readEmergencyLocation",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/EmergencyLocationInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations/{locationId}",
          "method": "put",
          "method2": "put",
          "description": "Updates the specified emergency response location.",
          "summary": "Update Emergency Location",
          "operationId": "updateEmergencyLocation",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/EmergencyLocationInfo"
          },
          "bodyParameters": "emergencyLocationInfoRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-locations/{locationId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes the specified emergency response location.",
          "summary": "Delete Emergency Location",
          "operationId": "deleteEmergencyLocation",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "queryParameters": "deleteEmergencyLocationParameters"
        }
      ],
      "parameter": "locationId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "favorite"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/favorite",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of favorite contacts of the current extension. Favorite contacts include both company contacts (extensions) and personal contacts (address book records).",
          "summary": "Get Favorite Contact List",
          "operationId": "listFavoriteContacts",
          "rateLimitGroup": "Light",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/FavoriteContactList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/favorite",
          "method": "put",
          "method2": "put",
          "description": "Updates the list of favorite contacts of the current extension. Favorite contacts include both company contacts (extensions) and personal contacts (address book records).**Please note**: currently personal address book size is limited to 10 000 contacts.",
          "summary": "Update Favorite Contact List",
          "operationId": "updateFavoriteContactList",
          "rateLimitGroup": "Medium",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/FavoriteContactList"
          },
          "bodyParameters": "favoriteCollection"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/presence",
          "method": "get",
          "method2": "get",
          "description": "Returns presence status of an extension or several extensions by their ID(s). Batch request is supported. The 'presenceStatus' is returned as Offline (the parameters 'telephonyStatus', 'message', 'userStatus' and 'dndStatus' are not returned at all) for the following extension types: Department/Announcement Only/Take Messages Only (Voicemail)/Fax User/Paging Only Group/Shared Lines Group/IVR Menu/Application Extension/Park Location.If the user requests his/her own presence status, the response contains actual presence status even if the status publication is turned off. Batch request is supported. For batch requests the number of extensions in one request is limited to 30. If more extensions are included in the request, the error code 400 Bad Request is returned with the logical error code InvalidMultipartRequest and the corresponding message 'Extension Presence Info multipart request is limited to 30 extensions'.",
          "summary": "Get User Presence Status",
          "operationId": "readUserPresenceStatus",
          "rateLimitGroup": "Light",
          "appPermission": "ReadPresence",
          "userPermission": "ReadPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetPresenceInfo"
          },
          "queryParameters": "readUserPresenceStatusParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/presence",
          "method": "put",
          "method2": "put",
          "description": "Updates user-defined extension presence status, status message and DnD status by extension ID. Supported for regular User extensions only. The extension types listed do not support presence status: Department, Announcement Only, Take Messages Only (Voicemail), Fax User, Paging Only Group, Shared Lines Group, IVR Menu, Application Extension.",
          "summary": "Update User Presence Status",
          "operationId": "updateUserPresenceStatus",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/PresenceInfoResponse"
          },
          "bodyParameters": "presenceInfoRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-queues",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-queues/{groupId}/bulk-assign",
          "method": "post",
          "method2": "post",
          "description": "Updates a call queue group.",
          "summary": "Assign Multiple Call Queue Members",
          "operationId": "assignMultipleCallQueueMembers",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": false,
          "bodyParameters": "callQueueBulkAssignResource"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "caller-id"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-id",
          "method": "get",
          "method2": "get",
          "description": "Returns information on an outbound caller ID of an extension.",
          "summary": "Get Extension Caller ID",
          "operationId": "readExtensionCallerId",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCallerIDSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ExtensionCallerIdInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-id",
          "method": "put",
          "method2": "put",
          "description": "Updates outbound caller ID information of an extension.",
          "summary": "Update Extension Caller ID",
          "operationId": "updateExtensionCallerId",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditCallerIDSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ExtensionCallerIdInfo"
          },
          "bodyParameters": "extensionCallerIdInfo"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-queues"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-queues",
          "method": "put",
          "method2": "put",
          "description": "Updates the list of call queues where the user is an agent. This is a full update request, which means that if any queue where the user is an agent is not mentioned in request, then the user is automatically removed from this queue.",
          "summary": "Update User Call Queues",
          "operationId": "updateUserCallQueues",
          "rateLimitGroup": "Medium",
          "appPermission": "Accounts",
          "userPermission": "JoinLeaveCallQueue",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserCallQueues"
          },
          "bodyParameters": "userCallQueues"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "users"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/users",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of users with their status of Automatic Location Updates feature.",
          "summary": "Get User List",
          "operationId": "listAutomaticLocationUpdatesUsers",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AutomaticLocationUpdatesUserList"
          },
          "queryParameters": "listAutomaticLocationUpdatesUsersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension-bulk-update",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension-bulk-update/tasks/{taskId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the status of multiple extension update task",
          "summary": "Get Update Task Status",
          "operationId": "getExtensionBulkUpdateTask",
          "rateLimitGroup": "Light",
          "appPermission": "EditExtensions",
          "userPermission": "EditExtensionInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/ExtensionBulkUpdateTaskResource"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "conferencing"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/conferencing",
          "method": "get",
          "method2": "get",
          "description": "Returns the information on the Free Conference Calling (FCC) feature for a given extension.",
          "summary": "Get User Conferencing Settings",
          "operationId": "readConferencingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "OrganizeConference",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetConferencingInfoResponse"
          },
          "queryParameters": "readConferencingSettingsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/conferencing",
          "method": "put",
          "method2": "put",
          "description": "Updates the default conferencing number for the current extension. The number can be selected from conferencing numbers of the current extension. Updates the setting, allowing participants join the conference before host.",
          "summary": "Update User Conferencing Settings",
          "operationId": "updateConferencingSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "OrganizeConference",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetConferencingInfoResponse"
          },
          "bodyParameters": "updateConferencingInfoRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "phone-number"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/phone-number",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of phone numbers that are used by a particular extension, and can be filtered by the phone number type. The returned list contains all numbers which are directly mapped to a given extension plus the features and also company-level numbers which may be used when performing different operations on behalf of this extension.",
          "summary": "Get Extension Phone Number List",
          "operationId": "listExtensionPhoneNumbers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserPhoneNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetExtensionPhoneNumbersResponse"
          },
          "queryParameters": "listExtensionPhoneNumbersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "message-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-sync",
          "method": "get",
          "method2": "get",
          "description": "Synchronizes messages.",
          "summary": "Sync Messages",
          "operationId": "syncMessages",
          "rateLimitGroup": "Light",
          "appPermission": "ReadMessages",
          "userPermission": "ReadMessages",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetMessageSyncResponse"
          },
          "queryParameters": "syncMessagesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "active-calls"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/active-calls",
          "method": "get",
          "method2": "get",
          "description": "Returns records of all extension calls that are in progress, ordered by start time in descending order.",
          "summary": "Get User Active Calls",
          "operationId": "listExtensionActiveCalls",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserActiveCallsResponse"
          },
          "queryParameters": "listExtensionActiveCallsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "authz-profile"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/authz-profile",
          "method": "get",
          "method2": "get",
          "description": "Returns a list of user permissions granted at authorization procedure. Please note: Some permissions may be restricted by extension type.",
          "summary": "Get Authorization Profile",
          "operationId": "readAuthorizationProfile",
          "rateLimitGroup": "Medium",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AuthProfileResource"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "devices"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/devices",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of common devices with their status of Automatic Location Updates feature.",
          "summary": "Get Device List",
          "operationId": "listDevicesAutomaticLocationUpdates",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ListDevicesAutomaticLocationUpdates"
          },
          "queryParameters": "listDevicesAutomaticLocationUpdatesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "company-pager"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/company-pager",
          "method": "post",
          "method2": "post",
          "description": "Creates and sends an internal text message.",
          "summary": "Create Internal Text Message",
          "operationId": "createInternalTextMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "InternalMessages",
          "userPermission": "InternalSMS",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetInternalTextMessageInfoResponse"
          },
          "bodyParameters": "createInternalTextMessageRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-log-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log-sync",
          "method": "get",
          "method2": "get",
          "description": "Synchronizes call log records.",
          "summary": "Sync User Call Log",
          "operationId": "syncUserCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallLogSync"
          },
          "queryParameters": "syncUserCallLogParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "business-hours"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/business-hours",
          "method": "get",
          "method2": "get",
          "description": "Returns the user business hours schedule. Business hours (and After hours - all the remaining time) schedules are commonly used for setting call handling rules - `business-hours-rule` and `after-hours-rule` correspondingly. **Please note:** If the user business hours are set to 'Custom hours' then a particular schedule is returned; however if set to '24 hours/7 days a week' the schedule will be empty.",
          "summary": "Get User Business Hours",
          "operationId": "readUserBusinessHours",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetUserBusinessHoursResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/business-hours",
          "method": "put",
          "method2": "put",
          "description": "Updates the user business hours schedule.",
          "summary": "Update User Business Hours",
          "operationId": "updateUserBusinessHours",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserBusinessHoursUpdateResponse"
          },
          "bodyParameters": "userBusinessHoursUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the status of a call session by ID.",
          "summary": "Get Call Session Status",
          "operationId": "readCallSessionStatus",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CallSession"
          },
          "queryParameters": "readCallSessionStatusParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}",
          "method": "delete",
          "method2": "delete",
          "description": "Drops a call session.",
          "summary": "Drop Call Session",
          "operationId": "deleteCallSession",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true
        }
      ],
      "parameter": "telephonySessionId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "address-book-bulk-upload",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/address-book-bulk-upload/tasks/{taskId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the status of a task on adding multiple contacts to multiple extensions.",
          "summary": "Get Contacts Update Task",
          "operationId": "getAddressBookBulkUploadTask",
          "rateLimitGroup": "Light",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/AddressBookBulkUploadResponse"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "caller-blocking"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking",
          "method": "get",
          "method2": "get",
          "description": "Returns the current caller blocking settings of a user.",
          "summary": "Get Caller Blocking Settings",
          "operationId": "readCallerBlockingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallerBlockingSettings"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking",
          "method": "put",
          "method2": "put",
          "description": "Updates the current caller blocking settings of a user.",
          "summary": "Update Caller Blocking Settings",
          "operationId": "updateCallerBlockingSettings",
          "rateLimitGroup": "Light",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallerBlockingSettings"
          },
          "bodyParameters": "callerBlockingSettingsUpdate"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-monitoring-groups",
        "members"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}/members",
          "method": "get",
          "method2": "get",
          "description": "Returns call monitoring group members.",
          "summary": "Get Call Monitoring Group Member List",
          "operationId": "listCallMonitoringGroupMembers",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallMonitoringGroupMemberList"
          },
          "queryParameters": "listCallMonitoringGroupMembersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "unified-presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/unified-presence",
          "method": "get",
          "method2": "get",
          "description": "Returns the unified presence status of the requested user(s). The set of parameters returned by this method differs whether you return the requester's presence or any other user presence.",
          "summary": "Get Unified Presence",
          "operationId": "readUnifiedPresence",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadPresence",
          "userPermission": "ReadPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UnifiedPresence"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/unified-presence",
          "method": "patch",
          "method2": "patch",
          "description": "Updates the unified presence for the current user specified in path.",
          "summary": "Update Unified Presence",
          "operationId": "updateUnifiedPresence",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "userPermission": "EditPresenceStatus",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UnifiedPresence"
          },
          "bodyParameters": "updateUnifiedPresence"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "address-book-sync"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book-sync",
          "method": "get",
          "method2": "get",
          "description": "Synchronizes user contacts.",
          "summary": "Address Book Synchronization",
          "operationId": "syncAddressBook",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AddressBookSync"
          },
          "queryParameters": "syncAddressBookParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting-recordings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting-recordings",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of meetings recordings for the current user.",
          "summary": "Get User Meeting Recordings List",
          "operationId": "listUserMeetingRecordings",
          "rateLimitGroup": "Medium",
          "appPermission": "Meetings",
          "userPermission": "MeetingsRecordings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ListMeetingRecordingsResponse"
          },
          "queryParameters": "listUserMeetingRecordingsParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "authz-profile",
        "check"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/authz-profile/check",
          "method": "get",
          "method2": "get",
          "description": "Checks if a certain user permission is activated for a particular extension.",
          "summary": "Check User Permission",
          "operationId": "checkUserPermission",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AuthProfileCheckResource"
          },
          "queryParameters": "checkUserPermissionParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "video-configuration"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/video-configuration",
          "method": "get",
          "method2": "get",
          "description": "Returns information about video configuration of the current user.",
          "summary": "Get User Video Configuration",
          "operationId": "readUserVideoConfiguration",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserVideoConfiguration"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/video-configuration",
          "method": "put",
          "method2": "put",
          "description": "Allows to update user video settings, for example video provider.",
          "summary": "Update User Video Configuration",
          "operationId": "updateUserVideoConfiguration",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserVideoConfiguration"
          },
          "bodyParameters": "userVideoConfiguration"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "emergency-locations"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/emergency-locations",
          "method": "get",
          "method2": "get",
          "description": "Returns a list of emergency response locations available for the current user extension.",
          "summary": "Get User Emergency Location List",
          "operationId": "getExtensionEmergencyLocations",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserEmergencyLocationList"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting",
          "method": "get",
          "method2": "list",
          "description": "Returns a list of user meetings scheduled for the future (meetings of 'Instant' type are not included).",
          "summary": "Get Scheduled Meetings",
          "operationId": "listMeetings",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MeetingsResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting",
          "method": "post",
          "method2": "post",
          "description": "Creates a new meeting.",
          "summary": "Create Meeting",
          "operationId": "createMeeting",
          "rateLimitGroup": "Medium",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MeetingResponseResource"
          },
          "bodyParameters": "meetingRequestResource"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/{meetingId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a particular meetings details by ID.",
          "summary": "Get Meeting Info",
          "operationId": "readMeeting",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/MeetingResponseResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/{meetingId}",
          "method": "put",
          "method2": "put",
          "description": "Modifies a particular meeting.",
          "summary": "Update Meeting",
          "operationId": "updateMeeting",
          "rateLimitGroup": "Medium",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/MeetingResponseResource"
          },
          "bodyParameters": "meetingRequestResource"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/{meetingId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes a scheduled meeting.",
          "summary": "Delete Meeting",
          "operationId": "deleteMeeting",
          "rateLimitGroup": "Medium",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": true
        }
      ],
      "parameter": "meetingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-queue-presence"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-queue-presence",
          "method": "get",
          "method2": "get",
          "description": "Returns a list of agent's call queues with the agent presence status (per queue)",
          "summary": "Get Agent’s Call Queue Presence",
          "operationId": "readExtensionCallQueuePresence",
          "rateLimitGroup": "Light",
          "appPermission": "ReadPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ExtensionCallQueuePresenceList"
          },
          "queryParameters": "readExtensionCallQueuePresenceParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-queue-presence",
          "method": "put",
          "method2": "put",
          "description": "Updates availability of the agent for the call queues.",
          "summary": "Update Call Queue Presence",
          "operationId": "updateExtensionCallQueuePresence",
          "rateLimitGroup": "Medium",
          "appPermission": "EditPresence",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ExtensionCallQueuePresenceList"
          },
          "bodyParameters": "extensionCallQueueUpdatePresenceList"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "ring-out"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/ring-out",
          "method": "post",
          "method2": "post",
          "description": "Makes a 2-leg RingOut call.",
          "summary": "Make RingOut Call",
          "operationId": "createRingOutCall",
          "rateLimitGroup": "Heavy",
          "appPermission": "RingOut",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetRingOutStatusResponse"
          },
          "bodyParameters": "makeRingOutRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/ring-out/{ringoutId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the status of a 2-leg RingOut call.",
          "summary": "Get RingOut Call Status",
          "operationId": "readRingOutCallStatus",
          "rateLimitGroup": "Light",
          "appPermission": "RingOut",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetRingOutStatusResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/ring-out/{ringoutId}",
          "method": "delete",
          "method2": "delete",
          "description": "Cancels a 2-leg RingOut call.",
          "summary": "Cancel RingOut Call",
          "operationId": "deleteRingOutCall",
          "rateLimitGroup": "Heavy",
          "appPermission": "RingOut",
          "withParameter": true
        }
      ],
      "parameter": "ringoutId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-monitoring-groups",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-monitoring-groups/{groupId}/bulk-assign",
          "method": "post",
          "method2": "post",
          "description": "Updates call monitoring groups.",
          "summary": "Update Call Monitoring Group List",
          "operationId": "updateCallMonitoringGroupList",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "Groups",
          "withParameter": false,
          "bodyParameters": "callMonitoringBulkAssign"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups",
        "users"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/users",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of users allowed to page this group.",
          "summary": "Get Paging Group Users",
          "operationId": "listPagingGroupUsers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/PagingOnlyGroupUsers"
          },
          "queryParameters": "listPagingGroupUsersParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "tasks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/tasks/{taskId}",
          "method": "get",
          "method2": "get",
          "description": "Returns results of the task created within the frame of Automatic Location Updates feature. Currently four task types are supported: 'Wireless Points Bulk Create', 'Wireless Points Bulk Update', 'Switches Bulk Create', 'Switches Bulk Update'.",
          "summary": "Get Emergency Map Configuration Task",
          "operationId": "readAutomaticLocationUpdatesTask",
          "rateLimitGroup": "Light",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/AutomaticLocationUpdatesTaskInfo"
          }
        }
      ],
      "parameter": "taskId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting",
        "service-info"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/service-info",
          "method": "get",
          "method2": "get",
          "description": "Returns information on dial-in numbers for meetings, support and international dial-in numbers URIs and meeting account information.",
          "summary": "Get Meeting Service Info",
          "operationId": "readMeetingServiceInfo",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MeetingServiceInfoResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/service-info",
          "method": "patch",
          "method2": "patch",
          "description": "Updates personal meeting identifier.",
          "summary": "Update Meeting Service Info",
          "operationId": "updateMeetingServiceInfo",
          "rateLimitGroup": "Medium",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MeetingServiceInfoResource"
          },
          "bodyParameters": "meetingServiceInfoRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "call-recording",
        "custom-greetings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/custom-greetings",
          "method": "get",
          "method2": "get",
          "description": "Returns call recording custom greetings.",
          "summary": "Get Call Recording Custom Greeting List",
          "operationId": "listCallRecordingCustomGreetings",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyInfo",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallRecordingCustomGreetings"
          },
          "queryParameters": "listCallRecordingCustomGreetingsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/custom-greetings",
          "method": "delete",
          "method2": "deleteAll",
          "description": "Deletes call recording custom greetings.",
          "summary": "Delete Call Recording Custom Greeting List",
          "operationId": "deleteCallRecordingCustomGreetingList",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": false
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/call-recording/custom-greetings/{greetingId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes call recording custom greeting(s).",
          "summary": "Delete Call Recording Custom Greeting",
          "operationId": "deleteCallRecordingCustomGreeting",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "EditCompanyInfo",
          "withParameter": true
        }
      ],
      "parameter": "greetingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "notification-settings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/notification-settings",
          "method": "get",
          "method2": "get",
          "description": "Returns notification settings for the current extension.\n <p>Knowledge Article: <a href=\"https://success.ringcentral.com/articles/RC_Knowledge_Article/9740\">User Settings - Set up Message Notifications</a></p>",
          "summary": "Get Notification Settings",
          "operationId": "readNotificationSettings",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadMessagesNotificationsSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/NotificationSettings"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/notification-settings",
          "method": "put",
          "method2": "put",
          "description": "Updates notification settings for the current extension.\n<p>Knowledge Article: <a href=\"https://success.ringcentral.com/articles/RC_Knowledge_Article/9740\">User Settings - Set up Message Notifications</a></p>",
          "summary": "Update Notification Settings",
          "operationId": "updateNotificationSettings",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditMessagesNotificationsSettings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/NotificationSettings"
          },
          "bodyParameters": "notificationSettingsUpdateRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting",
        "user-settings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/user-settings",
          "method": "get",
          "method2": "get",
          "description": "Returns user settings for meetings.",
          "summary": "Get Meeting User Settings",
          "operationId": "GetUserSetting",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MeetingUserSettingsResponse"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "greeting"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/greeting",
          "method": "post",
          "method2": "post",
          "description": "Creates custom greeting for an extension user.",
          "summary": "Create Custom User Greeting",
          "operationId": "createCustomUserGreeting",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CustomUserGreetingInfo"
          },
          "queryParameters": "createCustomUserGreetingParameters",
          "bodyParameters": "createCustomUserGreetingRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/greeting/{greetingId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a custom user greeting by ID.",
          "summary": "Get Custom Greeting",
          "operationId": "readCustomGreeting",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserInfo",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CustomUserGreetingInfo"
          }
        }
      ],
      "parameter": "greetingId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups",
        "devices"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/devices",
          "method": "get",
          "method2": "get",
          "description": "Returns the list of paging devices assigned to this group.",
          "summary": "Get Paging Group Devices",
          "operationId": "listPagingGroupDevices",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadCompanyDevices",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/PagingOnlyGroupDevices"
          },
          "queryParameters": "listPagingGroupDevicesParameters"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "users",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/users/bulk-assign",
          "method": "post",
          "method2": "post",
          "description": "Enables or disables Automatic Location Updates feature for multiple account users.",
          "summary": "Enable Automatic Location Updates for Users",
          "operationId": "assignMultipleAutomaticaLocationUpdatesUsers",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "bodyParameters": "bulkAssignAutomaticLocationUpdatesUsers"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting",
        "end"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/{meetingId}/end",
          "method": "post",
          "method2": "post",
          "description": "Ends a meetings which is in progress.",
          "summary": "End Meeting",
          "operationId": "endMeeting",
          "rateLimitGroup": "Medium",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "call-log"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log",
          "method": "get",
          "method2": "list",
          "description": "Returns call log records filtered by parameters specified.",
          "summary": "Get User Call Log Records",
          "operationId": "readUserCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserCallLogResponse"
          },
          "queryParameters": "readUserCallLogParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes filtered call log records.",
          "summary": "Delete User Call Log",
          "operationId": "deleteUserCallLog",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditCallLog",
          "userPermission": "EditCallLog",
          "withParameter": false,
          "queryParameters": "deleteUserCallLogParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}",
          "method": "get",
          "method2": "get",
          "description": "Returns call log records by ID.",
          "summary": "Get User Call Record",
          "operationId": "readUserCallRecord",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadCallLog",
          "userPermission": "ReadCallLog",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/UserCallLogRecord"
          },
          "queryParameters": "readUserCallRecordParameters"
        }
      ],
      "parameter": "callRecordId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "answering-rule"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule",
          "method": "get",
          "method2": "list",
          "description": "Returns call handling rules of an extension.",
          "summary": "Get Call Handling Rules",
          "operationId": "listAnsweringRules",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UserAnsweringRuleList"
          },
          "queryParameters": "listAnsweringRulesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule",
          "method": "post",
          "method2": "post",
          "description": "Creates a custom call handling rule for a particular caller ID.",
          "summary": "Create Call Handling Rule",
          "operationId": "createAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CustomAnsweringRuleInfo"
          },
          "bodyParameters": "createAnsweringRuleRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}",
          "method": "get",
          "method2": "get",
          "description": "Returns an call handling rule by ID.",
          "summary": "Get Call Handling Rule",
          "operationId": "readAnsweringRule",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/AnsweringRuleInfo"
          },
          "queryParameters": "readAnsweringRuleParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}",
          "method": "put",
          "method2": "put",
          "description": "Updates a custom call handling rule for a particular caller ID.",
          "summary": "Update Call Handling Rule",
          "operationId": "updateAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/AnsweringRuleInfo"
          },
          "bodyParameters": "updateAnsweringRuleRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/answering-rule/{ruleId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes a custom call handling rule by a particular ID.",
          "summary": "Delete Call Handling Rule",
          "operationId": "deleteAnsweringRule",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserAnsweringRules",
          "withParameter": true
        }
      ],
      "parameter": "ruleId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "supervise"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/supervise",
          "method": "post",
          "method2": "post",
          "description": "Allows to monitor a call session in 'Listen' mode. Input parameters should contain internal identifiers of a monitored user and a supervisor's device. Call session should be specified in path. Please note that this method supports single channel audio flow, which means that audio of both call participants is mixed and delivered to the supervisor in single audio channel. Currently this method is supported for Softphone/Hardphone only, since device IDs for WebRTC/Mobile apps cannot be obtained.",
          "summary": "Supervise Call Session",
          "operationId": "superviseCallSession",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/SuperviseCallSession"
          },
          "bodyParameters": "superviseCallSessionRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "profile-image"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image",
          "method": "get",
          "method2": "list",
          "description": "Returns a profile image of an extension.",
          "summary": "Get User Profile Image",
          "operationId": "readUserProfileImage",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": false,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image",
          "method": "post",
          "method2": "post",
          "description": "Uploads the extension profile image.",
          "summary": "Upload User Profile Image",
          "operationId": "createUserProfileImage",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo",
          "withParameter": false,
          "bodyParameters": "createUserProfileImageRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image",
          "method": "put",
          "method2": "put",
          "description": "Updates the extension profile image",
          "summary": "Update User Profile Image",
          "operationId": "updateUserProfileImage",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserInfo",
          "withParameter": false,
          "bodyParameters": "updateUserProfileImageRequest",
          "multipart": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/profile-image/{scaleSize}",
          "method": "get",
          "method2": "get",
          "description": "Returns scaled profile image of an extension.",
          "summary": "Get Scaled User Profile Image",
          "operationId": "readScaledPofileImage",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadExtensions",
          "withParameter": true,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          }
        }
      ],
      "parameter": "scaleSize"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches",
          "method": "get",
          "method2": "list",
          "description": "Returns corporate map of configured network switches with the assigned emergency addresses for the logged-in account.",
          "summary": "Get Account Switch List",
          "operationId": "listAccountSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/SwitchesList"
          },
          "queryParameters": "listAccountSwitchesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches",
          "method": "post",
          "method2": "post",
          "description": "Creates a new switch in corporate map based on chassis ID and used for Automatic Locations Update feature.",
          "summary": "Create Switch",
          "operationId": "createSwitch",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/SwitchInfo"
          },
          "bodyParameters": "createSwitchInfo"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches/{switchId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the specified switch with the assigned emergency address.",
          "summary": "Get Switch",
          "operationId": "readSwitch",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/SwitchInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches/{switchId}",
          "method": "put",
          "method2": "put",
          "description": "Updates switch. Partial update is not supported, all switch parameters should be specified. If null value is received or parameter is missing, its value is removed.",
          "summary": "Update Switch",
          "operationId": "updateSwitch",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/SwitchInfo"
          },
          "bodyParameters": "updateSwitchInfo"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches/{switchId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes wireless switch(es) in network configuration for Automatic Location Updates feature.",
          "summary": "Delete Switch",
          "operationId": "deleteSwitch",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true
        }
      ],
      "parameter": "switchId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "devices",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/devices/bulk-assign",
          "method": "post",
          "method2": "post",
          "description": "Enables or disables Automatic Location Updates feature for the specified common phones.",
          "summary": "Enable Automatic Location Updates for Devices",
          "operationId": "assignMultipleDevicesAutomaticLocationUpdates",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "bodyParameters": "assignMultipleDevicesAutomaticLocationUpdates"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "message-store-report",
        "archive"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-report/{taskId}/archive",
          "method": "get",
          "method2": "list",
          "description": "Returns the created report with message data not including attachments.",
          "summary": "Get Message Store Report Archive",
          "operationId": "readMessageStoreReportArchive",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadMessages",
          "userPermission": "Users",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/MessageStoreReportArchive"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/message-store-report/{taskId}/archive/{archiveId}",
          "method": "get",
          "method2": "get",
          "description": "Returns one of the report archives with message contents in application/zip format.",
          "summary": "Get Message Store Report Archive Content",
          "operationId": "readMessageStoreReportArchiveContent",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadMessages",
          "userPermission": "Users",
          "withParameter": true,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          }
        }
      ],
      "parameter": "archiveId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "message-store"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of messages from an extension mailbox.",
          "summary": "Get Message List",
          "operationId": "listMessages",
          "rateLimitGroup": "Light",
          "appPermission": "ReadMessages",
          "userPermission": "ReadMessages",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetMessageList"
          },
          "queryParameters": "listMessagesParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store",
          "method": "delete",
          "method2": "deleteAll",
          "description": "Deletes conversation(s) by conversation ID(s). Batch request is supported, max number of IDs passed as query/path parameters is 50. Alternative syntax is supported - user converations can be deleted by passing multiple IDs in request body as an array of string, max number of conversation IDs passed in request body is 100. In this case asterisk is used in the path instead of IDs",
          "summary": "Delete Conversation",
          "operationId": "deleteMessageByFilter",
          "rateLimitGroup": "Medium",
          "appPermission": "EditMessages",
          "userPermission": "EditMessages",
          "withParameter": false,
          "queryParameters": "deleteMessageByFilterParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}",
          "method": "get",
          "method2": "get",
          "description": "Returns individual message record(s) by the given message ID(s). The length of inbound messages is unlimited. Batch request is supported.",
          "summary": "Get Message",
          "operationId": "readMessage",
          "rateLimitGroup": "Light",
          "appPermission": "ReadMessages",
          "userPermission": "ReadMessages",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetMessageInfoResponse"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}",
          "method": "put",
          "method2": "put",
          "description": "Updates message(s) by ID(s). Currently only message read status can be updated. Batch request is supported, max number of IDs passed as query/path parameters is 50. Alternative syntax is supported - user messages can be updated by passing multiple IDs in request body as an array of string, max number of IDs passed in request body is 1000. In this case asterisk is used in the path instead of IDs.",
          "summary": "Update Message List",
          "operationId": "updateMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "EditMessages",
          "userPermission": "EditMessages",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/GetMessageInfoResponse"
          },
          "queryParameters": "updateMessageParameters",
          "bodyParameters": "updateMessageRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes message(s) by the given message ID(s). The first call of this method transfers the message to the 'Delete' status. The second call transfers the deleted message to the 'Purged' status. If it is required to make the message 'Purged' immediately (from the first call), then set the query parameter purge to 'True'.",
          "summary": "Delete Message",
          "operationId": "deleteMessage",
          "rateLimitGroup": "Medium",
          "appPermission": "EditMessages",
          "userPermission": "EditMessages",
          "withParameter": true,
          "queryParameters": "deleteMessageParameters"
        }
      ],
      "parameter": "messageId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups",
        "bulk-assign"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/paging-only-groups/{pagingOnlyGroupId}/bulk-assign",
          "method": "post",
          "method2": "post",
          "description": "Adds and/or removes paging group users and devices.",
          "summary": "Assign Paging Group Users and Devices",
          "operationId": "assignMultiplePagingGroupUsersDevices",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "Groups",
          "withParameter": false,
          "bodyParameters": "editPagingGroupRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches-bulk-update"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches-bulk-update",
          "method": "post",
          "method2": "post",
          "description": "Updates multiple switches in corporate map. The maximum number of switches per request is 10 000; limitation for account is 10 000.",
          "summary": "Update Multiple Switches",
          "operationId": "updateMultipleSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UpdateMultipleSwitchesResponse"
          },
          "bodyParameters": "updateMultipleSwitchesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches-bulk-create"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches-bulk-create",
          "method": "post",
          "method2": "post",
          "description": "Creates multiple switches in corporate map. The maximum number of switches per request is 10 000; limitation for account is 10 000.",
          "summary": "Create Multiple Switches",
          "operationId": "createMultipleSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CreateMultipleSwitchesResponse"
          },
          "bodyParameters": "createMultipleSwitchesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "networks"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks",
          "method": "get",
          "method2": "list",
          "description": "Returns corporate networks map with emergency addresses assigned to the current account.",
          "summary": "Get Network Map",
          "operationId": "listNetworks",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/NetworksList"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks",
          "method": "post",
          "method2": "post",
          "description": "Creates a new network in corporate ethernet map for assignment of emergency addresses to network access points.",
          "summary": "Create Network",
          "operationId": "createNetwork",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/NetworkInfo"
          },
          "bodyParameters": "createNetworkRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks/{networkId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the specified network with emergency addresses assigned to the current account.",
          "summary": "Get Network",
          "operationId": "readNetwork",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/NetworkInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks/{networkId}",
          "method": "put",
          "method2": "put",
          "description": "Updates network in corporate ethernet map for assignment of emergency addresses to network access points.",
          "summary": "Update Network",
          "operationId": "updateNetwork",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "bodyParameters": "updateNetworkRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/networks/{networkId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes network(s) in corporate ethernet map for Automatic Location Updates feature.",
          "summary": "Delete Network",
          "operationId": "deleteNetwork",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true
        }
      ],
      "parameter": "networkId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "switches-bulk-validate"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/switches-bulk-validate",
          "method": "post",
          "method2": "post",
          "description": "Validates switches before creation or update. The maximum number of switches per request is 10 000.",
          "summary": "Validate Multiple Switches",
          "operationId": "validateMultipleSwitches",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ValidateMultipleSwitchesResponse"
          },
          "bodyParameters": "validateMultipleSwitchesRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting",
        "invitation"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting/{meetingId}/invitation",
          "method": "get",
          "method2": "get",
          "description": "Returns a meeting invitation by ID.",
          "summary": "Get Meeting Invitation",
          "operationId": "readMeetingInvitation",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/PublicMeetingInvitationResponse"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points",
          "method": "get",
          "method2": "list",
          "description": "Returns account wireless points configured and used for Automatic Location Updates feature.",
          "summary": "Get Wireless Point List",
          "operationId": "listWirelessPoints",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/WirelessPointsList"
          },
          "queryParameters": "listWirelessPointsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points",
          "method": "post",
          "method2": "post",
          "description": "Creates a new wireless point in network configuration with the emergency address assigned.",
          "summary": "Create Wireless Point",
          "operationId": "createWirelessPoint",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/WirelessPointInfo"
          },
          "bodyParameters": "createWirelessPoint"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points/{pointId}",
          "method": "get",
          "method2": "get",
          "description": "Returns the specified wireless access point of a corporate map with the emergency address assigned.",
          "summary": "Get Wireless Point",
          "operationId": "readWirelessPoint",
          "rateLimitGroup": "Medium",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/WirelessPointInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points/{pointId}",
          "method": "put",
          "method2": "put",
          "description": "Updates the specified wireless access point of a corporate map by ID.",
          "summary": "Update Wireless Point",
          "operationId": "updateWirelessPoint",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/WirelessPointInfo"
          },
          "bodyParameters": "updateWirelessPoint"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points/{pointId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes wireless point(s) of a corporate map by ID(s).",
          "summary": "Delete Wireless Point",
          "operationId": "deleteWirelessPoint",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": true
        }
      ],
      "parameter": "pointId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meetings-configuration",
        "assisted"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meetings-configuration/assisted",
          "method": "get",
          "method2": "get",
          "description": "Returns assisted users information.",
          "summary": "Get Assisted Users",
          "operationId": "readAssistedUsers",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AssistedUsersResource"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "bring-in"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/bring-in",
          "method": "post",
          "method2": "post",
          "description": "Adds a new party to the call session by bringing-in an established SIP call connection. The maximum number of parties to bring-in is 10; only 1 call party can be added per request. Currently the method is supported for sessions of 'Conference' origin only.",
          "summary": "Bring-In Call Party",
          "operationId": "createCallPartyWithBringIn",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          },
          "bodyParameters": "addPartyRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "address-book",
        "contact"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact",
          "method": "get",
          "method2": "list",
          "description": "Returns user personal contacts.",
          "summary": "Get Contact List",
          "operationId": "listContacts",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ContactList"
          },
          "queryParameters": "listContactsParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact",
          "method": "post",
          "method2": "post",
          "description": "Creates personal user contact.",
          "summary": "Create Contact",
          "operationId": "createContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/PersonalContactResource"
          },
          "queryParameters": "createContactParameters",
          "bodyParameters": "personalContactRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}",
          "method": "get",
          "method2": "get",
          "description": "Returns contact(s) by ID(s). Batch request is supported.",
          "summary": "Get Contact",
          "operationId": "readContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "ReadContacts",
          "userPermission": "ReadPersonalContacts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/PersonalContactResource"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}",
          "method": "put",
          "method2": "put",
          "description": "Updates personal contact information by contact ID(s). Batch request is supported",
          "summary": "Update Contact",
          "operationId": "updateContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/PersonalContactResource"
          },
          "queryParameters": "updateContactParameters",
          "bodyParameters": "personalContactRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/address-book/contact/{contactId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes contact(s) by ID(s). Batch request is supported.",
          "summary": "Delete Contact",
          "operationId": "deleteContact",
          "rateLimitGroup": "Heavy",
          "appPermission": "Contacts",
          "userPermission": "EditPersonalContacts",
          "withParameter": true
        }
      ],
      "parameter": "contactId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a call party status by ID.",
          "summary": "Get Call Party Status",
          "operationId": "readCallPartyStatus",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}",
          "method": "delete",
          "method2": "delete",
          "description": "Removes a party from a call session by ID. A party can be deleted only if supervised or parked. It is possible to delete only one conference participant per request.",
          "summary": "Delete Call Party",
          "operationId": "deleteCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "TelephonySessions",
          "withParameter": true
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}",
          "method": "patch",
          "method2": "patch",
          "description": "Modifies a call party by ID. There is a known limitation for Mute scenario - mute via REST API doesn't work with mute placed via RingCentral apps or HardPhone. It means that if you muted participant via Call Control API and Ringcentral Desktop app you need to unmute both endpoints to bring the media back.",
          "summary": "Update Call Party",
          "operationId": "updateCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          },
          "bodyParameters": "partyUpdateRequest"
        }
      ],
      "parameter": "partyId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points-bulk-update"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-update",
          "method": "post",
          "method2": "post",
          "description": "Updates wireless points in corporate map. The maximum number of wireless points per request is 10 000; limitation for account is 70 000.",
          "summary": "Update Multiple Wireless Points",
          "operationId": "updateMultipleWirelessPoints",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/UpdateMultipleWirelessPointsResponse"
          },
          "bodyParameters": "updateMultipleWirelessPointsRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points-bulk-create"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-create",
          "method": "post",
          "method2": "post",
          "description": "Creates multiple wireless points in corporate map. The maximum number of wireless points per request is 10 000; limitation for account is 70 000.",
          "summary": "Create Multiple Wireless Points",
          "operationId": "createMultipleWirelessPoints",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CreateMultipleWirelessPointsResponse"
          },
          "bodyParameters": "createMultipleWirelessPointsRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meetings-configuration",
        "assistants"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meetings-configuration/assistants",
          "method": "get",
          "method2": "get",
          "description": "Returns assistants information.",
          "summary": "Get Assistants",
          "operationId": "readAssistants",
          "rateLimitGroup": "Light",
          "appPermission": "Meetings",
          "userPermission": "Meetings",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/AssistantsResource"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update",
        "wireless-points-bulk-validate"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/emergency-address-auto-update/wireless-points-bulk-validate",
          "method": "post",
          "method2": "post",
          "description": "Validates wireless points before creation or update. The maximum number of wireless points per request is 10 000.",
          "summary": "Validate Multiple Wireless Points",
          "operationId": "validateMultipleWirelessPoints",
          "rateLimitGroup": "Heavy",
          "appPermission": "EditAccounts",
          "userPermission": "ConfigureEmergencyMaps",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ValidateMultipleWirelessPointsResponse"
          },
          "bodyParameters": "validateMultipleWirelessPointsRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting-configuration",
        "profile-image"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/meeting-configuration/profile-image",
          "method": "post",
          "method2": "post",
          "description": "Uploads profile picture for user meetings.",
          "summary": "Upload User Meeting Profile Image",
          "operationId": "createUserMeetingProfileImage",
          "rateLimitGroup": "Light",
          "withParameter": false,
          "bodyParameters": "createUserMeetingProfileImageRequest",
          "multipart": true
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "park"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/park",
          "method": "post",
          "method2": "post",
          "description": "Parks a call to a virtual location from where it can further be retrieved by any user from any phone of the system. The call session and call party identifiers should be specified in path. Currently the users can park only their own incoming calls. Up to 50 calls can be parked simultaneously. Park location starts with asterisk (*) and ranges 801-899.",
          "summary": "Call Park",
          "operationId": "callParkParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "flip"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/flip",
          "method": "post",
          "method2": "post",
          "description": "Performs call flip procedure by holding opposite party and calling to the specified target",
          "summary": "Call Flip on Party",
          "operationId": "callFlipParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "bodyParameters": "callPartyFlip"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "hold"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/hold",
          "method": "post",
          "method2": "post",
          "description": "Puts the party to stand-alone mode and starts to play Hold Music according to configuration & state to peers. There is a known limitation for Hold API - hold via REST API doesn't work with hold placed via RingCentral apps or HardPhone. It means that if you muted participant via Call Control API and RingCentral Desktop app, then you need to unhold both endpoints to remove Hold Music and bring media back.",
          "summary": "Hold Call Party",
          "operationId": "holdCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "forwarding-number"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number",
          "method": "get",
          "method2": "list",
          "description": "Returns the list of extension phone numbers used for call forwarding and call flip. The returned list contains all the extension phone numbers used for call forwarding and call flip.",
          "summary": "Get Forwarding Number List",
          "operationId": "listForwardingNumbers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserForwardingFlipNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/GetExtensionForwardingNumberListResponse"
          },
          "queryParameters": "listForwardingNumbersParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number",
          "method": "post",
          "method2": "post",
          "description": "Adds a new forwarding number to the forwarding number list.",
          "summary": "Create Forwarding Number",
          "operationId": "createForwardingNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserForwardingFlipNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ForwardingNumberInfo"
          },
          "bodyParameters": "createForwardingNumberRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a specific forwarding number.",
          "summary": "Get Forwarding Number",
          "operationId": "readForwardingNumber",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadUserForwardingFlipNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/ForwardingNumberInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}",
          "method": "put",
          "method2": "put",
          "description": "Updates the existing forwarding number from the forwarding number list.",
          "summary": "Update Forwarding Number",
          "operationId": "updateForwardingNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserForwardingFlipNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/ForwardingNumberInfo"
          },
          "bodyParameters": "updateForwardingNumberRequest"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/forwarding-number/{forwardingNumberId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes a forwarding number from the forwarding number list by its ID.",
          "summary": "Delete Forwarding Number",
          "operationId": "deleteForwardingNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditUserForwardingFlipNumbers",
          "withParameter": true
        }
      ],
      "parameter": "forwardingNumberId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "reply"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/reply",
          "method": "post",
          "method2": "post",
          "description": "Replies with text/pattern without picking up a call.",
          "summary": "Reply with Text",
          "operationId": "replyParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/ReplyParty"
          },
          "bodyParameters": "callPartyReply"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "pickup"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/pickup",
          "method": "post",
          "method2": "post",
          "description": "Picks up a call parked to the specified park location.",
          "summary": "Pickup Call",
          "operationId": "pickupCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          },
          "bodyParameters": "pickupTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "answer"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/answer",
          "method": "post",
          "method2": "post",
          "description": "Answers a call on a certain device by passing the corresponding device ID in request body. Supported for call forwarding, call transfer, call flip and call queues.",
          "summary": "Answer Call Party",
          "operationId": "answerCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          },
          "bodyParameters": "answerTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "bridge"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/bridge",
          "method": "post",
          "method2": "post",
          "description": "Allows the user to connect multiple call session participants over a conference call bridge. The current active call session ID and party ID of the user within this session should be specified in path; the bridged call session ID and party ID of the user within that session should be specified in request body. Thus the user connects participants of two sessions into one conference call using his/her own party IDs from both sessions.",
          "summary": "Bridge Call Party",
          "operationId": "bridgeCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          },
          "bodyParameters": "bridgeTargetRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "ignore"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/ignore",
          "method": "post",
          "method2": "post",
          "description": "Ignores a call to a call queue agent in `Setup` or `Proceeding` state.",
          "summary": "Ignore Call in Queue",
          "operationId": "ignoreCallInQueue",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "bodyParameters": "ignoreRequestBody"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "reject"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/reject",
          "method": "post",
          "method2": "post",
          "description": "Rejects an inbound call in a \"Setup\" or \"Proceeding\" state",
          "summary": "Reject Call Party",
          "operationId": "rejectParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "unhold"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/unhold",
          "method": "post",
          "method2": "post",
          "description": "Brings a party back into a call and stops to play Hold Music. There is a known limitation for Hold API - hold via REST API doesn't work with hold placed via RingCentral apps or HardPhone. It means that if you muted participant via Call Control API and RingCentral Desktop app, then you need to unhold both endpoints to remove Hold Music and bring media back.",
          "summary": "Unhold Call Party",
          "operationId": "unholdCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          }
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "forward"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/forward",
          "method": "post",
          "method2": "post",
          "description": "Forwards a non-answered incoming call to the specified call party. Applicable for a call session in \"Setup\" or \"Proceeding\" state.",
          "summary": "Forward Call Party",
          "operationId": "forwardCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          },
          "bodyParameters": "forwardTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "transfer"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/transfer",
          "method": "post",
          "method2": "post",
          "description": "Transfers an answered call to the specified call party. Applicable for a call session in \"Answered\" or \"Hold\" state.",
          "summary": "Transfer Call Party",
          "operationId": "transferCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/CallParty"
          },
          "bodyParameters": "transferTarget"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "supervise"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/supervise",
          "method": "post",
          "method2": "post",
          "description": "Allows to monitor a call party in 'Listen' mode. Input parameters are extension number of a monitored user and internal identifier of a supervisor's device. Call session and party identifiers should be specified in path. Please note that for this method dual channel audio flow is supported, which means that you need to make one more request for monitoring the second participant of a call. And as a result of each monitoring request the client recieves SIP invite with the following header `p-rc-api-monitoring-ids` containing IDs of the monitored party and session. The flow is supported for calls with no more than 2 participants. Currently this method is supported for Softphone/Hardphone only, since device IDs for WebRTC/Mobile apps cannot be obtained.",
          "summary": "Supervise Call Party",
          "operationId": "superviseCallParty",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/PartySuperviseResponse"
          },
          "bodyParameters": "partySuperviseRequest"
        }
      ]
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "caller-blocking",
        "phone-numbers"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers",
          "method": "get",
          "method2": "list",
          "description": "Returns the lists of blocked and allowed phone numbers.",
          "summary": "Get Blocked/Allowed Phone Numbers",
          "operationId": "listBlockedAllowedNumbers",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/BlockedAllowedPhoneNumbersList"
          },
          "queryParameters": "listBlockedAllowedNumbersParameters"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers",
          "method": "post",
          "method2": "post",
          "description": "Updates either blocked or allowed phone number list with a new phone number.",
          "summary": "Add Blocked/Allowed Number",
          "operationId": "createBlockedAllowedNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": false,
          "responseSchema": {
            "$ref": "#/components/schemas/BlockedAllowedPhoneNumberInfo"
          },
          "bodyParameters": "addBlockedAllowedPhoneNumber"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}",
          "method": "get",
          "method2": "get",
          "description": "Returns blocked or allowed phone number(s) by their ID(s). Batch request is supported.",
          "summary": "Get Blocked/Allowed Number",
          "operationId": "readBlockedAllowedNumber",
          "rateLimitGroup": "Light",
          "appPermission": "ReadAccounts",
          "userPermission": "ReadBlockedNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/BlockedAllowedPhoneNumberInfo"
          }
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}",
          "method": "put",
          "method2": "put",
          "description": "Updates blocked or allowed phone number(s) by their ID(s). Batch request is supported.",
          "summary": "Update Blocked/Allowed Number",
          "operationId": "updateBlockedAllowedNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/BlockedAllowedPhoneNumberInfo"
          },
          "bodyParameters": "addBlockedAllowedPhoneNumber"
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/caller-blocking/phone-numbers/{blockedNumberId}",
          "method": "delete",
          "method2": "delete",
          "description": "Deletes blocked or allowed phone number(s) by their ID(s). Batch request is supported.",
          "summary": "Delete Blocked/Allowed Number",
          "operationId": "deleteBlockedAllowedNumber",
          "rateLimitGroup": "Medium",
          "appPermission": "EditExtensions",
          "userPermission": "EditBlockedNumbers",
          "withParameter": true
        }
      ],
      "parameter": "blockedNumberId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "message-store",
        "content"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/extension/{extensionId}/message-store/{messageId}/content/{attachmentId}",
          "method": "get",
          "method2": "get",
          "description": "Returns a specific message attachment data as media stream.",
          "summary": "Get Message Content",
          "operationId": "readMessageContent",
          "rateLimitGroup": "Medium",
          "appPermission": "ReadMessages",
          "userPermission": "ReadMessageContent",
          "withParameter": true,
          "responseSchema": {
            "type": "string",
            "format": "binary"
          },
          "queryParameters": "readMessageContentParameters"
        }
      ],
      "parameter": "attachmentId"
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony",
        "sessions",
        "parties",
        "recordings"
      ],
      "operations": [
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/recordings",
          "method": "post",
          "method2": "post",
          "description": "Starts a new call recording for the party",
          "summary": "Create Recording",
          "operationId": "startCallRecording",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": false
        },
        {
          "endpoint": "/restapi/{apiVersion}/account/{accountId}/telephony/sessions/{telephonySessionId}/parties/{partyId}/recordings/{recordingId}",
          "method": "patch",
          "method2": "patch",
          "description": "Pause/resume recording",
          "summary": "Pause/Resume Recording",
          "operationId": "pauseResumeCallRecording",
          "rateLimitGroup": "Light",
          "appPermission": "CallControl",
          "withParameter": true,
          "responseSchema": {
            "$ref": "#/components/schemas/CallRecording"
          },
          "queryParameters": "pauseResumeCallRecordingParameters",
          "bodyParameters": "callRecordingUpdate"
        }
      ],
      "parameter": "recordingId"
    },
    {
      "paths": [
        "scim"
      ],
      "operations": [],
      "parameter": "version",
      "defaultParameter": "v2"
    },
    {
      "paths": [
        "restapi",
        "oauth"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "glip"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "glip",
        "recent"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "dictionary"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "number-parser"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "client-info"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "glip",
        "groups"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "a2p-sms"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "telephony"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "directory"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "meeting"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "emergency-address-auto-update"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "paging-only-groups"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meetings-configuration"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "address-book"
      ],
      "operations": []
    },
    {
      "paths": [
        "restapi",
        "account",
        "extension",
        "meeting-configuration"
      ],
      "operations": []
    }
  ]
}